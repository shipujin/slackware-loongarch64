#!/bin/bash

# Copyright 2008, 2009, 2010, 2018, 2019  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Build RPM (of all things) for Slackware.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=rpm
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.?z* | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-4}

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    loongarch64) export ARCH=loong64 ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "arm" ]; then
  SLKCFLAGS="-O2 -march=armv4 -mtune=xscale"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "armel" ]; then
  SLKCFLAGS="-O2 -march=armv4t"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "loong64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
fi

if [ -x /usr/bin/rpm ]; then
  echo "RPM detected."
  echo
  echo "The rpm package needs to be removed before building to ensure that"
  echo "the binaries do not link to earlier library versions."
  echo
  echo "Removing the rpm package in 15 seconds, and then continuing with the build."
  sleep 15
  removepkg rpm
fi

DB_INC="/usr/include/db48"

TMP=${TMP:-/tmp}
PKG=/tmp/package-rpm

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf rpm-$VERSION
tar xvf $CWD/rpm-$VERSION.tar.?z || exit 1
cd rpm-$VERSION || exit 1
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

# Fix for non-compliant RPMs created by install4j:
zcat $CWD/rpm.install4j.compat.diff.gz | patch -p1 --verbose || exit 1

# We need to do this since there's a bugfix for python3.10 detection in
# the latest automake:
autoreconf -vif

cp -rfa /usr/share/autoconf/build-aux/config.* build-aux/
# We have to tell it where to find NSS and NSPR
# Also, --enable-sqlite3 needs "-ldl" in LDFLAGS
# And --enable-broken-chown fits, as ours follows symlinks.
CFLAGS="$SLKCFLAGS -I${DB_INC} $(pkg-config --cflags nspr nss)" \
LDFLAGS="-ldl" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --localstatedir=/var \
  --sysconfdir=/etc \
  --mandir=/usr/man \
  --enable-python \
  --with-external-db \
  --enable-broken-chown \
  --without-hackingdocs \
  --without-selinux \
  --without-lua \
  --without-dmalloc \
  --enable-sqlite3 \
  --build=loongarch64-slackware-linux || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

cd python
  # python2 dropped dropped as obsolete.
  #python setup.py install --root=$PKG || exit 1
  python3 setup.py install --root=$PKG || exit 1
cd -

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# This used to be at /bin/rpm, so make a symlink from there to the new
# location:
mkdir -p $PKG/bin
ln -s ../usr/bin/rpm $PKG/bin/rpm

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Here's a bug - /var/tmp should NOT have mode 0755
rmdir $PKG/var/tmp || exit 1

# Compress man pages
( cd $PKG/usr/man
  find . -type f -exec gzip -9 {} \+
  for i in $(find . -type l) ; do ln -s $(readlink $i).gz $i.gz ; rm $i ; done
)

# Initialize a dummy package database
mkdir -p $PKG/var/lib/rpm/tmp
zcat $CWD/Packages.gz > $PKG/var/lib/rpm/tmp/Packages

# Install docs
mkdir -p $PKG/usr/doc/rpm-$VERSION
cp -a \
  COPYING* CREDITS GROUPS INSTALL README* TODO doc/manual \
    $PKG/usr/doc/rpm-$VERSION

# If there's a CHANGES file, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r CHANGES ]; then
  DOCSDIR=$(echo $PKG/usr/doc/${PKGNAM}-$VERSION)
  cat CHANGES | head -n 1000 > $DOCSDIR/CHANGES
  touch -r CHANGES $DOCSDIR/CHANGES
fi

mkdir -p $PKG/install
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/rpm-$VERSION-$ARCH-$BUILD.txz

