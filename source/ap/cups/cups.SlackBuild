#!/bin/bash

# Copyright 2008, 2009, 2010, 2011, 2012, 2015, 2017, 2018, 2019  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# CUPS build script by volkerdi@slackware.com.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=cups
VERSION=${VERSION:-$(echo $PKGNAM-*-source.tar.?z | cut -f 2 -d -)}
BUILD=${BUILD:-5}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "armv7hl" ]; then
  SLKCFLAGS="-O3 -march=armv7-a -mfpu=vfpv3-d16"
  LIBDIRSUFFIX=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

TMP=${TMP:-/tmp}
PKG=$TMP/package-cups

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf cups-$VERSION
tar xvf $CWD/cups-$VERSION-source.tar.?z || exit 1
cd cups-$VERSION || exit 1

sed -i.orig -e 's#$exec_prefix/lib/cups#$libdir/cups#g' configure

# Choose correct options depending on whether PAM is installed:
if [ -L /lib${LIBDIRSUFFIX}/libpam.so.? ]; then
  PAM_OPTIONS="--enable-pam"
  unset SHADOW_OPTIONS
else
  unset PAM_OPTIONS
  SHADOW_OPTIONS="--disable-pam"
fi

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --enable-ssl \
  --enable-gnutls=yes \
  --enable-cdsassl=no \
  --docdir=/usr/doc \
  $PAM_OPTIONS \
  $SHADOW_OPTIONS \
  --disable-avahi \
  --disable-dnssd \
  --build=$ARCH-slackware-linux || exit 1

make $NUMJOBS || exit 1
make BUILDROOT=$PKG install || exit 1

if [ ! -z "$PAM_OPTIONS" ]; then
  # Allow pam config files to be edited by root:
  chmod 644 $PKG/etc/pam.d/*
  # Make PAM file .new:
  mv $PKG/etc/pam.d/cups $PKG/etc/pam.d/cups.new
fi

# Blacklist the usblp module just to make sure that it doesn't cause
# any problems:
mkdir -p $PKG/lib/modprobe.d
cp -a $CWD/cups-blacklist-usblp.conf $PKG/lib/modprobe.d
chown root:root $PKG/lib/modprobe.d/cups-blacklist-usblp.conf
chmod 644 $PKG/lib/modprobe.d/cups-blacklist-usblp.conf

# Remove files that overlap with the cups-filters package:
( cd $PKG
  rm -f \
  usr/share/cups/banners/classified \
  usr/share/cups/banners/confidential \
  usr/share/cups/banners/secret \
  usr/share/cups/banners/standard \
  usr/share/cups/banners/topsecret \
  usr/share/cups/banners/unclassified \
  usr/share/cups/data/testprint
)

# Hey, what's with the gigantic test files?  Bloat is bad.
rm -f $PKG/usr/share/cups/ipptool/*.{pdf,ps,jpg}

# I've added so many things like /etc/init.d/ to Slackware that CUPS
# is now installing init scripts to the Red Hat locations.  We'll move
# them to the usual locations:
mkdir -p $PKG/etc/rc.d
# Handle this as a config file, and non-executable in a default install:
mv $PKG/etc/init.d/cups $PKG/etc/rc.d/rc.cups.new
chmod 644 $PKG/etc/rc.d/rc.cups.new
# Clear out the additions:
rm -rf $PKG/etc/init.d $PKG/etc/rc{0,2,3,5}.d

# Move the dbus config file to the system directory
mkdir -p $PKG/usr/share/dbus-1/system.d/
mv $PKG/etc/dbus-1/system.d/* $PKG/usr/share/dbus-1/system.d/
rmdir --parents $PKG/etc/dbus-1/system.d/

# For full CUPS SMB support, you'll need to install the cups-samba
# package from the source in this directory.  There's no easy way
# to add that to a package build, and the requests aren't pouring in,
# so you'll have to install it yourself.  It's easy to do.

# However, this will get you the most useful SMB support for free.
# Thanks to Boris Kurktchiev for the tip.  :-)
( cd $PKG/usr/lib${LIBDIRSUFFIX}/cups/backend
  if [ ! -e smb ]; then
    ln -sf /usr/bin/smbspool smb
  fi
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Remove preformatted manpages and move the manpages to /usr/man:
( cd $PKG/usr/share/man
  find . -type d -name "cat*" | xargs rm -rf
  cd ..
  mv man ..
)

# Compress manual pages:
find $PKG/usr/man -type f -exec gzip -9 {} \+
for i in $( find $PKG/usr/man -type l ) ; do
  ln -s $( readlink $i ).gz $i.gz
  rm $i
done

# Adjust/expand docs:
( mkdir -p $PKG/usr/doc
  mv $PKG/usr/share/doc/cups $PKG/usr/doc/cups-$VERSION
  rmdir $PKG/usr/share/doc
  cd $PKG/usr/doc
  ln -sf cups-$VERSION cups )

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r CHANGES.txt ]; then
  DOCSDIR=$(echo $PKG/usr/doc/*-$VERSION)
  cat CHANGES.txt | head -n 1000 > $DOCSDIR/CHANGES.txt
  touch -r CHANGES.txt $DOCSDIR/CHANGES.txt
fi

# I'm sorry, but PDF files are almost as bloated and annoying as
# MS Word documents.  We'll retain the HTML files in /usr/doc.
( cd $PKG/usr/doc
  find . -name "*.pdf" -exec rm -f {} \+ )

# Handle .conf files with config() in the install script.
# Not .conf.default copies, though.
( cd $PKG/etc/cups
  for file in *.conf ; do
    if [ -f $file ]; then
      mv $file $file.new
    fi
  done
)

# Strip stuff:
find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Add the doinst.sh that installs the .new conffiles:
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

# Build the package:
cd $PKG
/sbin/makepkg -l y -c n $TMP/cups-$VERSION-$ARCH-$BUILD.txz

