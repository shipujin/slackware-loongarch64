--- ./fp.h.orig	2002-03-20 15:49:38.000000000 -0600
+++ ./fp.h	2018-08-19 13:12:52.539005346 -0500
@@ -17,7 +17,8 @@
 # define scr_putchar(c)	f_putc((c), jstdout)
 extern void		flushscreen proto((void));
 # ifndef SMALL
-#  define MAXTTYBUF	2048
+// TTK here -- upping from 2048 to 256K
+#  define MAXTTYBUF	262144
 # else
 #  define MAXTTYBUF	512
 # endif
--- ./recover.c.orig	2010-07-09 01:29:37.000000000 -0500
+++ ./recover.c	2018-08-19 13:13:12.904005347 -0500
@@ -166,7 +166,7 @@
 private char	*getblock proto((daddr atl));
 
 void
-getline(tl, buf)
+j_getline(tl, buf)
 daddr	tl;
 char	*buf;
 {
@@ -597,7 +597,7 @@
 	Nchars = Nlines = 0L;
 	while (--nlines >= 0) {
 		addr = getaddr(ptrs_fp);
-		getline(addr, buf);
+		j_getline(addr, buf);
 		Nlines += 1;
 		Nchars += 1 + strlen(buf);
 		fputs(buf, out);
--- ./insert.c.orig	2002-03-20 15:49:38.000000000 -0600
+++ ./insert.c	2018-08-19 13:13:12.905005347 -0500
@@ -504,7 +504,7 @@
 		atchar = 0;
 	}
 
-	getline(atline->l_dline, genbuf);
+	j_getline(atline->l_dline, genbuf);
 	atchar += tchar;
 	linecopy(genbuf, atchar, save);
 	atline->l_dline = putline(genbuf);
--- ./jove.h.orig	2002-03-20 15:49:38.000000000 -0600
+++ ./jove.h	2018-08-19 13:12:52.540005346 -0500
@@ -267,7 +267,8 @@
 
 /* term.c: universal termcap-like declarations */
 
-#define MAXCOLS		256	/* maximum number of columns */
+// TTK here -- boosting to 256K
+#define MAXCOLS		262144	/* maximum number of columns */
 
 extern int
 	SG,		/* number of magic cookies left by SO and SE */
--- ./util.h.orig	2004-02-01 13:38:29.000000000 -0600
+++ ./util.h	2018-08-19 13:13:12.906005347 -0500
@@ -18,7 +18,7 @@
 #define eobp()		(lastp(curline) && eolp())
 #define eolp()		(linebuf[curchar] == '\0')
 #define firstp(line)	((line) == curbuf->b_first)
-#define getDOT()	getline(curline->l_dline, linebuf)
+#define getDOT()	j_getline(curline->l_dline, linebuf)
 #define lastp(line)	((line) == curbuf->b_last)
 
 extern UnivPtr
--- ./temp.h.orig	2002-03-20 15:49:39.000000000 -0600
+++ ./temp.h	2018-08-19 13:13:12.907005347 -0500
@@ -12,7 +12,7 @@
  * Yank and Kill are really easy; basically all we do is make copies
  * of the disk addresses of the lines (as opposed to the contents).
  * So, putline(char *buf) writes buf to the disk and returns a new
- * disk address.  getline(daddr addr, char *buf) is the opposite of
+ * disk address.  j_getline(daddr addr, char *buf) is the opposite of
  * putline().  f_getputl(LinePtr line, File fp) reads from open fp
  * directly into the tmp file (into the buffer cache (see below))
  * and stores the address in line.  This is used during read_file to
--- ./io.c.orig	2010-04-16 00:41:46.000000000 -0500
+++ ./io.c	2018-08-19 13:13:12.909005347 -0500
@@ -1356,9 +1356,9 @@
 
 void
 #ifdef USE_PROTOTYPES
-getline proto((daddr addr, register char *buf))
+j_getline proto((daddr addr, register char *buf))
 #else
-getline(addr, buf)
+j_getline(addr, buf)
 daddr	addr;
 register char	*buf;
 #endif
--- ./util.c.orig	2004-02-01 13:38:29.000000000 -0600
+++ ./util.c	2018-08-19 13:13:12.909005347 -0500
@@ -280,7 +280,7 @@
 			strcpy(buf, linebuf);
 		Jr_Len = strlen(linebuf);
 	} else
-		getline(line->l_dline, buf);
+		j_getline(line->l_dline, buf);
 	return buf;
 }
 
