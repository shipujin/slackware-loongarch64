#!/bin/bash

# Copyright 2008, 2009, 2010, 2012, 2018  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=libpcap
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.?z | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    loongarch64) export ARCH=loongarch64 ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "loongarch64" ]; then
  LIBDIRSUFFIX="64"
else
  LIBDIRSUFFIX=""
fi

TMP=${TMP:-/tmp}
PKG=$TMP/package-libpcap

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf libpcap-$VERSION
tar xvf $CWD/libpcap-$VERSION.tar.?z || exit 1
cd libpcap-$VERSION || exit 1

find . -type d -name CVS -depth -exec rm -rf {} \+
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

CFLAGS="$(getconf LFS_CFLAGS)" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --docdir=/usr/doc/libpcap-$VERSION \
  --enable-ipv6 \
  --build=$ARCH-slackware-linux || exit 1

make $NUMJOBS || make || exit 1
make shared $NUMJOBS || make || exit 1

mkdir -p $PKG/usr/bin  # otherwise it errors out on install
make install DESTDIR=$PKG || exit 1

strip --strip-debug libpcap.so.?.?.?

# Don't ship the static library:
rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libpcap.a

mkdir -p $PKG/usr/doc/libpcap-$VERSION
cp -a \
  CHANGES* CREDITS* INSTALL* LICENSE* README* TODO* VERSION* \
  $PKG/usr/doc/libpcap-$VERSION

find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Use symbolic links in the man pages:
( cd $PKG/usr/man/man3
  ln -sf pcap_datalink_val_to_name.3pcap pcap_datalink_val_to_description.3pcap
  ln -sf pcap_dump_open.3pcap pcap_dump_fopen.3pcap
  ln -sf pcap_geterr.3pcap pcap_perror.3pcap
  ln -sf pcap_inject.3pcap pcap_sendpacket.3pcap
  ln -sf pcap_loop.3pcap pcap_dispatch.3pcap
  ln -sf pcap_major_version.3pcap pcap_minor_version.3pcap
  ln -sf pcap_next_ex.3pcap pcap_next.3pcap
  ln -sf pcap_open_offline.3pcap pcap_fopen_offline.3pcap
  ln -sf pcap_setnonblock.3pcap pcap_getnonblock.3pcap
  ln -sf pcap_findalldevs.3pcap pcap_freealldevs.3pcap
  ln -sf pcap_free_tstamp_types.3pcap pcap_list_tstamp_types.3pcap
  ln -sf pcap_free_datalinks.3pcap pcap_list_datalinks.3pcap
)

# Compress and if needed symlink the man pages:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
        gzip -9 *.?pcap
      )
    done
  )
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Build the package:
cd $PKG
/sbin/makepkg -l y -c n $TMP/$PKGNAM-$VERSION-$ARCH-$BUILD.txz

