#!/bin/bash

# Copyright 2008, 2009, 2012, 2013, 2016, 2017, 2018, 2019  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=tcl
VERSION=${VERSION:-8.6.13}
# See also version number 8.6 in the symlinks below...)
BUILD=${BUILD:-2}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

TMP=${TMP:-/tmp}
PKG=$TMP/package-tcl

# Use -DHAVE_USLEEP=1 otherwise the bundled sqlite doesn't work well.
if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686 -DHAVE_USLEEP=1"
  LIBDIRSUFFIX=""
  CONFARGS="--enable-64bit"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2 -DHAVE_USLEEP=1"
  LIBDIRSUFFIX=""
  CONFARGS="--enable-64bit"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -DHAVE_USLEEP=1"
  LIBDIRSUFFIX="64"
  CONFARGS=""
elif [ "$ARCH" = "arm" ]; then
  SLKCFLAGS="-O2 -march=armv4 -mtune=xscale -DHAVE_USLEEP=1"
  LIBDIRSUFFIX=""
  CONFARGS=""
elif [ "$ARCH" = "armel" ]; then
  SLKCFLAGS="-O2 -march=armv4t -DHAVE_USLEEP=1"
  LIBDIRSUFFIX=""
  CONFARGS=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf tcl$VERSION
tar xvf $CWD/tcl$VERSION-src.tar.?z || exit 1
cd tcl$VERSION || exit 1
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

mkdir -p $PKG/usr/doc/tcl$VERSION
cp -a README* license.terms $PKG/usr/doc/tcl$VERSION

cd unix
# Fix 64bit path names:
sed -i -e "s#TCL_LIBRARY='\$(prefix)/lib/tcl\$(VERSION)'#TCL_LIBRARY='\$(prefix)/lib$LIBDIRSUFFIX/tcl\$(VERSION)'#" configure
CFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --enable-shared \
  --enable-threads \
  --mandir=/usr/man \
  --enable-man-symlinks \
  ${CONFARGS} \
  --build=$ARCH-slackware-linux || exit 1

make $NUMJOBS || make || exit 1

# Fix paths in tclConfig.sh:
 sed -e "s@^\(TCL_SRC_DIR='\).*@\1/usr/include'@" \
     -e "/TCL_B/s@='\(-L\)\?.*unix@='\1/usr/lib${LIBDIRSUFFIX}@" \
     -i tclConfig.sh

make install DESTDIR=$PKG || exit 1

# Some sources require Tcl's private headers, which might not be the
# best thing but we'll include them where we've seen other teams
# doing the same thing:
make install-private-headers DESTDIR=$PKG || exit 1

( cd $PKG/usr/bin
  rm -f tclsh
  ln -sf tclsh8.6 tclsh
)
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  rm -f libtcl.so
  ln -sf libtcl8.6.so libtcl.so
)

find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Compress manual pages:
find $PKG/usr/man -type f -exec gzip -9 {} \+
for i in $( find $PKG/usr/man -type l ) ; do
  ln -s $( readlink $i ).gz $i.gz
  rm $i
done

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/tcl-$VERSION-$ARCH-$BUILD.txz

