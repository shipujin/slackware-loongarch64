diff --git a/configure.ac b/configure.ac
index c1410ca..9322d64 100755
--- a/configure.ac
+++ b/configure.ac
@@ -5673,6 +5673,7 @@ AC_CONFIG_FILES([
    memcheck/tests/amd64-linux/Makefile
    memcheck/tests/arm64-linux/Makefile
    memcheck/tests/x86-linux/Makefile
+   memcheck/tests/loongarch64-linux/Makefile
    memcheck/tests/amd64-solaris/Makefile
    memcheck/tests/x86-solaris/Makefile
    memcheck/tests/amd64-freebsd/Makefile
@@ -5718,6 +5719,7 @@ AC_CONFIG_FILES([
    none/tests/mips32/Makefile
    none/tests/mips64/Makefile
    none/tests/nanomips/Makefile
+   none/tests/loongarch64/Makefile
    none/tests/linux/Makefile
    none/tests/darwin/Makefile
    none/tests/solaris/Makefile
diff --git a/drd/tests/pth_barrier_thr_cr.supp b/drd/tests/pth_barrier_thr_cr.supp
index 653b2d2..34482cc 100644
--- a/drd/tests/pth_barrier_thr_cr.supp
+++ b/drd/tests/pth_barrier_thr_cr.supp
@@ -9,3 +9,14 @@
    fun:pthread_barrier_wait_intercept
    fun:pthread_barrier_wait
 }
+{
+   number-of-concurrent-pthead_barrier_wait()-calls-exceeds-barrier-count
+   drd:BarrierErr
+   fun:pthread_barrier_wait@*
+}
+{
+   number-of-concurrent-pthead_barrier_wait()-calls-exceeds-barrier-count
+   drd:BarrierErr
+   fun:pthread_barrier_wait_intercept
+   fun:pthread_barrier_wait@*
+}
diff --git a/gdbserver_tests/Makefile.am b/gdbserver_tests/Makefile.am
index 6b73a24..55cbd9e 100755
--- a/gdbserver_tests/Makefile.am
+++ b/gdbserver_tests/Makefile.am
@@ -16,6 +16,7 @@ dist_noinst_SCRIPTS = \
 	filter_make_empty \
 	filter_helgrind_monitor \
 	filter_helgrind_monitor_solaris \
+	filter_helgrind_monitor_loongarch64 \
 	filter_passsigalrm \
 	send_signal
 
diff --git a/gdbserver_tests/filter_helgrind_monitor b/gdbserver_tests/filter_helgrind_monitor
index 4fc2e9a..21bf6be 100755
--- a/gdbserver_tests/filter_helgrind_monitor
+++ b/gdbserver_tests/filter_helgrind_monitor
@@ -14,6 +14,8 @@ if $dir/../tests/os_test solaris; then
    $dir/filter_helgrind_monitor_solaris
 elif $dir/../tests/os_test freebsd; then
    gsed -e '/\(rtld_start.S\|kill.S\|_exit.S\|_select.S\): No such file or directory/d'
+elif $dir/../tests/arch_test loongarch64; then
+   $dir/filter_helgrind_monitor_loongarch64
 else
    cat
 fi |
diff --git a/gdbserver_tests/filter_helgrind_monitor_loongarch64 b/gdbserver_tests/filter_helgrind_monitor_loongarch64
new file mode 100755
index 0000000..cda73e4
--- /dev/null
+++ b/gdbserver_tests/filter_helgrind_monitor_loongarch64
@@ -0,0 +1,43 @@
+#!/usr/bin/env perl
+# From gdbserver_tests/filter_helgrind_monitor_solaris
+
+#
+# Filter out all helgrind information about locks except the one named "mx".
+# One lock record looks like:
+# Lock ga 0x........ {
+#  Address 0x........ is 2648 bytes inside data symbol "_rtld_local"
+#   kind   mbRec
+# }
+
+use strict;
+use warnings;
+
+my $lock_start_line = undef;
+my $skip_to_closing_line = 0;
+while (<STDIN>) {
+    my $line = $_;
+    chomp($line);
+    if ($line =~ /^Lock ga 0x[\.]+\s+{$/) {
+        $lock_start_line = $line;
+        $skip_to_closing_line = 1;
+    } elsif (($lock_start_line) &&
+             ($line =~ /\s*Address 0x[\.]+ is \d+ bytes inside data symbol "(\S+)"/)) {
+        if ($1 eq "mx") {
+           print "$lock_start_line\n";
+           print "$line\n";
+           $skip_to_closing_line = 0;
+        }
+    } elsif ($line =~ /^}$/) {
+        if ($skip_to_closing_line == 0) {
+            print "$line\n";
+        }
+        undef($lock_start_line);
+        $skip_to_closing_line = 0;
+    } else {
+        if ($skip_to_closing_line == 0) {
+            print "$line\n";
+        }
+    }
+}
+
+exit 0;
diff --git a/helgrind/tests/annotate_hbefore.c b/helgrind/tests/annotate_hbefore.c
index bc11c28..3200c6c 100644
--- a/helgrind/tests/annotate_hbefore.c
+++ b/helgrind/tests/annotate_hbefore.c
@@ -320,9 +320,28 @@ UWord do_acasW ( UWord* addr, UWord expected, UWord nyu )
 /* return 1 if success, 0 if failure */
 UWord do_acasW ( UWord* addr, UWord expected, UWord nyu )
 {
-   /* TODO */
-   assert(0);
-   return 0;
+   UWord success;
+   UWord block[3] = { (UWord)addr, nyu, expected };
+
+   __asm__ __volatile__(
+      "   ld.d $t0, %1, 0   \n\t"
+      "   ld.d $t2, %1, 16  \n\t"
+      "   ld.d $t3, %1, 8   \n\t"
+      "   ll.d $t1, $t0, 0  \n\t"
+      "   bne  $t1, $t2, 1f \n\t"
+      "   sc.d $t3, $t0, 0  \n\t"
+      "   move %0, $t3      \n\t"
+      "   b    2f           \n\t"
+      "1:                   \n\t"
+      "   move %0, $zero    \n\t"
+      "2:                   \n\t"
+      : /*out*/ "=r" (success)
+      : /*in*/ "r" (&block[0])
+      : /*trash*/ "t0", "t1", "t2", "t3", "memory"
+   );
+
+   assert(success == 0 || success == 1);
+   return success;
 }
 
 #endif
diff --git a/helgrind/tests/tc07_hbl1.c b/helgrind/tests/tc07_hbl1.c
index fe710fb..0adb558 100644
--- a/helgrind/tests/tc07_hbl1.c
+++ b/helgrind/tests/tc07_hbl1.c
@@ -138,10 +138,19 @@
       : /*trash*/ "$t0", "$t1", "memory"            \
    )
 #elif defined(PLAT_loongarch64_linux)
-   /* TODO */
-#include <assert.h>
-#  define INC(_lval,_lqual)                         \
-     assert(0);
+#  define INC(_lval,_lqual)                     \
+   __asm__ __volatile__ (                       \
+      "1:                     \n"               \
+      "   move   $t0, %0      \n"               \
+      "   ll.w   $t1, $t0, 0  \n"               \
+      "   addi.w $t1, $t1, 1  \n"               \
+      "   sc.w   $t1, $t0, 0  \n"               \
+      "   li.w   $t2, 1       \n"               \
+      "   bne    $t1, $t2, 1b \n"               \
+      : /*out*/                                 \
+      : /*in*/ "r" (&(_lval))                   \
+      : /*trash*/ "$t0", "$t1", "$t2", "memory" \
+   )
 #else
 #  error "Fix Me for this platform"
 #endif
diff --git a/helgrind/tests/tc08_hbl2.c b/helgrind/tests/tc08_hbl2.c
index c2abaec..3c6ff3f 100644
--- a/helgrind/tests/tc08_hbl2.c
+++ b/helgrind/tests/tc08_hbl2.c
@@ -158,10 +158,19 @@
       : /*trash*/ "$t0", "$t1", "memory"            \
    )
 #elif defined(PLAT_loongarch64_linux)
-   /* TODO Implement. */
-#include <assert.h>
-#  define INC(_lval,_lqual)                         \
-     assert(0);
+#  define INC(_lval,_lqual)                     \
+   __asm__ __volatile__ (                       \
+      "1:                     \n"               \
+      "   move   $t0, %0      \n"               \
+      "   ll.w   $t1, $t0, 0  \n"               \
+      "   addi.w $t1, $t1, 1  \n"               \
+      "   sc.w   $t1, $t0, 0  \n"               \
+      "   li.w   $t2, 1       \n"               \
+      "   bne    $t1, $t2, 1b \n"               \
+      : /*out*/                                 \
+      : /*in*/ "r" (&(_lval))                   \
+      : /*trash*/ "$t0", "$t1", "$t2", "memory" \
+   )
 #else
 #  error "Fix Me for this platform"
 #endif
diff --git a/massif/tests/Makefile.am b/massif/tests/Makefile.am
index ab781fa..43498f5 100644
--- a/massif/tests/Makefile.am
+++ b/massif/tests/Makefile.am
@@ -11,6 +11,7 @@ EXTRA_DIST = \
 	big-alloc.post.exp big-alloc.post.exp-64bit big-alloc.post.exp-ppc64 \
 	big-alloc.stderr.exp big-alloc.vgtest \
 	big-alloc.post.exp-x86-freebsd \
+	big-alloc.post.exp-loongarch64 \
 	bug469146.post.exp bug469146.stderr.exp bug469146.vgtest \
 	deep-A.post.exp deep-A.stderr.exp deep-A.vgtest \
 	deep-B.post.exp deep-B.stderr.exp deep-B.vgtest \
diff --git a/massif/tests/big-alloc.post.exp-loongarch64 b/massif/tests/big-alloc.post.exp-loongarch64
new file mode 100644
index 0000000..4dac2a6
--- /dev/null
+++ b/massif/tests/big-alloc.post.exp-loongarch64
@@ -0,0 +1,54 @@
+--------------------------------------------------------------------------------
+Command:            ./big-alloc
+Massif arguments:   --stacks=no --time-unit=B --massif-out-file=massif.out --ignore-fn=__part_load_locale --ignore-fn=__time_load_locale --ignore-fn=dwarf2_unwind_dyld_add_image_hook --ignore-fn=get_or_create_key_element --alloc-fn=_xpc_malloc --ignore-fn=_xpc_dictionary_insert --ignore-fn=map_images_nolock --ignore-fn=allocBuckets(void*, unsigned int) --ignore-fn=realizeClass(objc_class*) --ignore-fn=_NXHashRehashToCapacity --ignore-fn=NXCreateHashTableFromZone --ignore-fn=NXCreateMapTableFromZone --ignore-fn=NXHashInsert --ignore-fn=add_class_to_loadable_list --ignore-fn=class_createInstance --ignore-fn=xpc_string_create --alloc-fn=strdup --alloc-fn=_xpc_calloc --ignore-fn=xpc_array_create
+ms_print arguments: massif.out
+--------------------------------------------------------------------------------
+
+
+    MB
+100.2^                                                                       :
+     |                                                                       :
+     |                                                                @@@@@@@:
+     |                                                                @      :
+     |                                                         :::::::@      :
+     |                                                         :      @      :
+     |                                                  ::::::::      @      :
+     |                                                  :      :      @      :
+     |                                           ::::::::      :      @      :
+     |                                           :      :      :      @      :
+     |                                    ::::::::      :      :      @      :
+     |                                    :      :      :      :      @      :
+     |                            :::::::::      :      :      :      @      :
+     |                            :       :      :      :      :      @      :
+     |                     ::::::::       :      :      :      :      @      :
+     |                     :      :       :      :      :      :      @      :
+     |              ::::::::      :       :      :      :      :      @      :
+     |              :      :      :       :      :      :      :      @      :
+     |       ::::::::      :      :       :      :      :      :      @      :
+     |       :      :      :      :       :      :      :      :      @      :
+   0 +----------------------------------------------------------------------->MB
+     0                                                                   100.2
+
+Number of snapshots: 11
+ Detailed snapshots: [9]
+
+--------------------------------------------------------------------------------
+  n        time(B)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
+--------------------------------------------------------------------------------
+  0              0                0                0             0            0
+  1     10,502,088       10,502,088       10,485,760        16,328            0
+  2     21,004,176       21,004,176       20,971,520        32,656            0
+  3     31,506,264       31,506,264       31,457,280        48,984            0
+  4     42,008,352       42,008,352       41,943,040        65,312            0
+  5     52,510,440       52,510,440       52,428,800        81,640            0
+  6     63,012,528       63,012,528       62,914,560        97,968            0
+  7     73,514,616       73,514,616       73,400,320       114,296            0
+  8     84,016,704       84,016,704       83,886,080       130,624            0
+  9     94,518,792       94,518,792       94,371,840       146,952            0
+99.84% (94,371,840B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
+->99.84% (94,371,840B) 0x........: main (big-alloc.c:12)
+  
+--------------------------------------------------------------------------------
+  n        time(B)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
+--------------------------------------------------------------------------------
+ 10    105,020,880      105,020,880      104,857,600       163,280            0
diff --git a/memcheck/tests/Makefile.am b/memcheck/tests/Makefile.am
index c3b5fdb..8c8d922 100644
--- a/memcheck/tests/Makefile.am
+++ b/memcheck/tests/Makefile.am
@@ -53,6 +53,9 @@ endif
 if VGCONF_PLATFORMS_INCLUDE_ARM64_LINUX
 SUBDIRS += arm64-linux
 endif
+if VGCONF_PLATFORMS_INCLUDE_LOONGARCH64_LINUX
+SUBDIRS += loongarch64-linux
+endif
 if VGCONF_PLATFORMS_INCLUDE_X86_SOLARIS
 SUBDIRS += x86-solaris
 endif
@@ -68,7 +71,7 @@ endif
 
 DIST_SUBDIRS = x86 amd64 arm64 ppc32 ppc64 s390x linux \
 		darwin solaris x86-linux amd64-linux arm64-linux \
-		x86-solaris amd64-solaris mips32 mips64 \
+		loongarch64-linux x86-solaris amd64-solaris mips32 mips64 \
 		freebsd amd64-freebsd x86-freebsd \
 		common .
 
diff --git a/memcheck/tests/atomic_incs.c b/memcheck/tests/atomic_incs.c
index 83deeaf..8c00550 100644
--- a/memcheck/tests/atomic_incs.c
+++ b/memcheck/tests/atomic_incs.c
@@ -246,8 +246,28 @@ __attribute__((noinline)) void atomic_add_8bit ( char* p, int n )
    } while (block[2] != 1);
 #endif
 #elif defined(VGA_loongarch64)
-   /* TODO */
-   assert(0);
+   unsigned long long int block[3]
+      = { (unsigned long long int)(Addr)p, (unsigned long long int)n, 0x0ULL };
+   do {
+      __asm__ __volatile__(
+         "move  $t0, %0         \n\t"
+         "ld.d  $t1, $t0, 0     \n\t"  // p
+         "ld.d  $t2, $t0, 8     \n\t"  // n
+         "andi  $t2, $t2, 0xff  \n\t"  // n = n & 0xff
+         "li.d  $s0, 0xff       \n\t"
+         "nor   $s0, $s0, $zero \n\t"  // $s0 = 0xffffff00
+         "ll.d  $t3, $t1, 0     \n\t"  // $t3 = old value
+         "and   $s0, $s0, $t3   \n\t"  // $s0 = $t3 & 0xffffff00
+         "add.d $t3, $t3, $t2   \n\t"  // $t3 = $t3 + n
+         "andi  $t3, $t3, 0xff  \n\t"  // $t3 = $t3 & 0xff
+         "or    $t3, $t3, $s0   \n\t"  // $t3 = $t3 | $s0
+         "sc.d  $t3, $t1, 0     \n\t"
+         "st.d  $t3, $t0, 16    \n\t"  // save result
+         : /*out*/
+         : /*in*/ "r" (&block[0])
+         : /*trash*/ "t0", "t1", "t2", "t3", "s0", "memory"
+      );
+   } while (block[2] != 1);
 #else
 # error "Unsupported arch"
 #endif
@@ -465,8 +485,29 @@ __attribute__((noinline)) void atomic_add_16bit ( short* p, int n )
    } while (block[2] != 1);
 #endif
 #elif defined(VGA_loongarch64)
-   /* TODO */
-   assert(0);
+   unsigned long long int block[3]
+      = { (unsigned long long int)(Addr)p, (unsigned long long int)n, 0x0ULL };
+   do {
+      __asm__ __volatile__(
+         "move  $t0, %0         \n\t"
+         "ld.d  $t1, $t0, 0     \n\t"  // p
+         "ld.d  $t2, $t0, 8     \n\t"  // n
+         "li.d  $s0, 0xffff     \n\t"
+         "and   $t2, $t2, $s0   \n\t"  // n = n & 0xffff
+         "nor   $s0, $s0, $zero \n\t"  // $s0= 0xffff0000
+         "ll.d  $t3, $t1, 0     \n\t"  // $t3 = old value
+         "and   $s0, $s0, $t3   \n\t"  // $s0 = $t3 & 0xffff0000
+         "add.d $t3, $t3, $t2   \n\t"  // $t3 = $t3 + n
+         "li.d  $t2, 0xffff     \n\t"
+         "and   $t3, $t3, $t2   \n\t"  // $t3 = $t3 & 0xffff
+         "or    $t3, $t3, $s0   \n\t"  // $t3 = $t3 | $s0
+         "sc.d  $t3, $t1, 0     \n\t"
+         "st.d  $t3, $t0, 16    \n\t"  // save result
+         : /*out*/
+         : /*in*/ "r" (&block[0])
+         : /*trash*/ "t0", "t1", "t2", "t3", "s0", "memory"
+      );
+   } while (block[2] != 1);
 #else
 # error "Unsupported arch"
 #endif
@@ -623,8 +664,22 @@ __attribute__((noinline)) void atomic_add_32bit ( int* p, int n )
       );
    } while (block[2] != 1);
 #elif defined(VGA_loongarch64)
-   /* TODO */
-   assert(0);
+   unsigned long long int block[3]
+      = { (unsigned long long int)(Addr)p, (unsigned long long int)n, 0x0ULL };
+   do {
+      __asm__ __volatile__(
+         "move  $t0, %0       \n\t"
+         "ld.d  $t1, $t0, 0   \n\t"  // p
+         "ld.d  $t2, $t0, 8   \n\t"  // n
+         "ll.d  $t3, $t1, 0   \n\t"
+         "add.d $t3, $t3, $t2 \n\t"
+         "sc.d  $t3, $t1, 0   \n\t"
+         "st.d  $t3, $t0, 16  \n\t"
+         : /*out*/
+         : /*in*/ "r" (&block[0])
+         : /*trash*/ "t0", "t1", "t2", "t3", "memory"
+      );
+   } while (block[2] != 1);
 #else
 # error "Unsupported arch"
 #endif
@@ -728,8 +783,22 @@ __attribute__((noinline)) void atomic_add_64bit ( long long int* p, int n )
       );
    } while (block[2] != 1);
 #elif defined(VGA_loongarch64)
-   /* TODO */
-   assert(0);
+   unsigned long long int block[3]
+      = { (unsigned long long int)(Addr)p, (unsigned long long int)n, 0x0ULL };
+   do {
+      __asm__ __volatile__(
+         "move  $t0, %0       \n\t"
+         "ld.d  $t1, $t0, 0   \n\t" // p
+         "ld.d  $t2, $t0, 8   \n\t" // n
+         "ll.d  $t3, $t1, 0   \n\t"
+         "add.d $t3, $t3, $t2 \n\t"
+         "sc.d  $t3, $t1, 0   \n\t"
+         "st.d  $t3, $t0, 16  \n\t"
+         : /*out*/
+         : /*in*/ "r" (&block[0])
+         : /*trash*/ "t0", "t1", "t2", "t3", "memory"
+      );
+   } while (block[2] != 1);
 #else
 # error "Unsupported arch"
 #endif
diff --git a/memcheck/tests/leak-segv-jmp.c b/memcheck/tests/leak-segv-jmp.c
index 30fe2a1..4cc33ba 100644
--- a/memcheck/tests/leak-segv-jmp.c
+++ b/memcheck/tests/leak-segv-jmp.c
@@ -183,6 +183,19 @@ extern UWord do_syscall_WRK (
    return out;
 }
 
+#elif defined(VGP_loongarch64_linux)
+extern UWord do_syscall_WRK (UWord a1, UWord a2, UWord a3, /* $a0, $a1, $a2 */
+                             UWord a4, UWord a5, UWord a6, /* $a3, $a4, $a5 */
+                             UWord syscall_no);            /* $a6 */
+asm (
+   ".text                                  \n\t"
+   ".globl do_syscall_WRK                  \n\t"
+   "do_syscall_WRK:                        \n\t"
+   "   move    $a7, $a6                    \n\t"           /* a7 = syscall_no */
+   "   syscall 0                           \n\t"
+   "   jr      $ra                         \n\t"
+);
+
 #elif defined(VGP_x86_solaris)
 extern ULong
 do_syscall_WRK(UWord a1, UWord a2, UWord a3,
@@ -369,7 +382,7 @@ static void non_simd_mprotect (long tid, void* addr, long len)
                                     &err);
    if (err)
       mprotect_result = -1;
-#elif defined(VGP_arm64_linux)
+#elif defined(VGP_arm64_linux) || defined (VGP_loongarch64_linux)
    mprotect_result = do_syscall_WRK((UWord) addr, len, PROT_NONE,
                                     0, 0, 0,
                                     __NR_mprotect);
diff --git a/memcheck/tests/leak-segv-jmp.stderr.exp b/memcheck/tests/leak-segv-jmp.stderr.exp
index 147bdf8..39149ea 100644
--- a/memcheck/tests/leak-segv-jmp.stderr.exp
+++ b/memcheck/tests/leak-segv-jmp.stderr.exp
@@ -14,8 +14,8 @@ To see them, rerun with: --leak-check=full --show-leak-kinds=all
 expecting a leak
 1,000 bytes in 1 blocks are definitely lost in loss record ... of ...
    at 0x........: malloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:420)
-   by 0x........: main (leak-segv-jmp.c:495)
+   by 0x........: f (leak-segv-jmp.c:433)
+   by 0x........: main (leak-segv-jmp.c:508)
 
 LEAK SUMMARY:
    definitely lost: 1,000 bytes in 1 blocks
@@ -30,8 +30,8 @@ mprotect result 0
 expecting a leak again
 1,000 bytes in 1 blocks are definitely lost in loss record ... of ...
    at 0x........: malloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:420)
-   by 0x........: main (leak-segv-jmp.c:495)
+   by 0x........: f (leak-segv-jmp.c:433)
+   by 0x........: main (leak-segv-jmp.c:508)
 
 LEAK SUMMARY:
    definitely lost: 1,000 bytes in 1 blocks
@@ -46,8 +46,8 @@ full mprotect result 0
 expecting a leak again after full mprotect
 1,000 bytes in 1 blocks are definitely lost in loss record ... of ...
    at 0x........: malloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:420)
-   by 0x........: main (leak-segv-jmp.c:495)
+   by 0x........: f (leak-segv-jmp.c:433)
+   by 0x........: main (leak-segv-jmp.c:508)
 
 LEAK SUMMARY:
    definitely lost: 1,000 bytes in 1 blocks
@@ -62,13 +62,13 @@ mprotect result 0
 expecting heuristic not to crash after full mprotect
 1,000 bytes in 1 blocks are definitely lost in loss record ... of ...
    at 0x........: malloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:420)
-   by 0x........: main (leak-segv-jmp.c:495)
+   by 0x........: f (leak-segv-jmp.c:433)
+   by 0x........: main (leak-segv-jmp.c:508)
 
 200,000 bytes in 1 blocks are possibly lost in loss record ... of ...
    at 0x........: calloc (vg_replace_malloc.c:...)
-   by 0x........: f (leak-segv-jmp.c:467)
-   by 0x........: main (leak-segv-jmp.c:495)
+   by 0x........: f (leak-segv-jmp.c:480)
+   by 0x........: main (leak-segv-jmp.c:508)
 
 LEAK SUMMARY:
    definitely lost: 1,000 bytes in 1 blocks
diff --git a/memcheck/tests/leak.h b/memcheck/tests/leak.h
index bf78d58..fe79c8a 100644
--- a/memcheck/tests/leak.h
+++ b/memcheck/tests/leak.h
@@ -181,6 +181,27 @@
       __asm__ __volatile__ ("mov x17, 0\n\t");                              \
       __asm__ __volatile__ ("mov x18, 0\n\t");                              \
    } while (0)
+#elif defined (__loongarch__)
+#define CLEAR_CALLER_SAVED_REGS                                              \
+   do {                                                                      \
+      __asm__ __volatile__ ("move $a0, $zero \n\t"                           \
+                            "move $a1, $zero \n\t"                           \
+                            "move $a2, $zero \n\t"                           \
+                            "move $a3, $zero \n\t"                           \
+                            "move $a4, $zero \n\t"                           \
+                            "move $a5, $zero \n\t"                           \
+                            "move $a6, $zero \n\t"                           \
+                            "move $a7, $zero \n\t"                           \
+                            "move $t0, $zero \n\t"                           \
+                            "move $t1, $zero \n\t"                           \
+                            "move $t2, $zero \n\t"                           \
+                            "move $t3, $zero \n\t"                           \
+                            "move $t4, $zero \n\t"                           \
+                            "move $t5, $zero \n\t"                           \
+                            "move $t6, $zero \n\t"                           \
+                            "move $t7, $zero \n\t"                           \
+                            "move $t8, $zero \n\t");                         \
+   } while (0)
 #else
 #define CLEAR_CALLER_SAVED_REGS  /*nothing*/
 #endif
diff --git a/memcheck/tests/loongarch64-linux/Makefile.am b/memcheck/tests/loongarch64-linux/Makefile.am
new file mode 100644
index 0000000..5afcaa4
--- /dev/null
+++ b/memcheck/tests/loongarch64-linux/Makefile.am
@@ -0,0 +1,17 @@
+
+include $(top_srcdir)/Makefile.tool-tests.am
+
+dist_noinst_SCRIPTS = \
+	filter_stderr
+
+noinst_HEADERS = scalar.h
+
+EXTRA_DIST = \
+	scalar.stderr.exp scalar.vgtest
+
+check_PROGRAMS = \
+	scalar
+
+AM_CFLAGS    += @FLAG_M64@
+AM_CXXFLAGS  += @FLAG_M64@
+AM_CCASFLAGS += @FLAG_M64@
diff --git a/memcheck/tests/loongarch64-linux/filter_stderr b/memcheck/tests/loongarch64-linux/filter_stderr
new file mode 100755
index 0000000..a778e97
--- /dev/null
+++ b/memcheck/tests/loongarch64-linux/filter_stderr
@@ -0,0 +1,3 @@
+#! /bin/sh
+
+../filter_stderr "$@"
diff --git a/memcheck/tests/loongarch64-linux/scalar.c b/memcheck/tests/loongarch64-linux/scalar.c
new file mode 100644
index 0000000..e390692
--- /dev/null
+++ b/memcheck/tests/loongarch64-linux/scalar.c
@@ -0,0 +1,1296 @@
+/* This is the loongarch64 variant of memcheck/tests/x86-linux/scalar.c.
+   Syscalls are in x86 number order to make exp comparison easier. */
+#define _GNU_SOURCE
+#include "../../memcheck.h"
+#include "scalar.h"
+#include <unistd.h>
+#include <sched.h>
+#include <signal.h>
+#include <linux/mman.h> // MREMAP_FIXED
+
+// Here we are trying to trigger every syscall error (scalar errors and
+// memory errors) for every syscall.  We do this by passing a lot of bogus
+// arguments, mostly 0 and 1 (often it's 1 because NULL ptr args often aren't
+// checked for memory errors, or in order to have a non-zero length used
+// with some buffer).  So most of the syscalls don't actually succeed and do
+// anything.
+//
+// Occasionally we have to be careful not to cause Valgrind to seg fault in
+// its pre-syscall wrappers;  it does so because it can't know in general
+// when memory is unaddressable, and so tries to dereference it when doing
+// PRE_MEM_READ/PRE_MEM_WRITE calls.  (Note that Memcheck will
+// always issue an error message immediately before these seg faults occur).
+//
+// The output has numbers like "3s 2m" for each syscall.  "s" is short for
+// "scalar", ie. the argument itself is undefined.  "m" is short for "memory",
+// ie. the argument points to memory which is unaddressable.
+int main(void)
+{
+   // uninitialised, but we know px[0] is 0x0
+   long* px  = malloc(sizeof(long));
+   long  x0  = px[0];
+   long  res;
+
+   // All __NR_xxx numbers are taken from x86
+
+   // __NR_restart_syscall 0  // XXX: not yet handled, perhaps should be...
+   GO(__NR_restart_syscall, "n/a");
+   //SY(__NR_restart_syscall); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_exit 1
+   GO(__NR_exit, "below");
+   // (see below)
+
+   // __NR_fork 2
+   //GO(__NR_fork, "other");
+   // (sse scalar_fork.c)
+
+   // __NR_read 3
+   // Nb: here we are also getting an error from the syscall arg itself.
+   GO(__NR_read, "1+3s 1m");
+   SY(__NR_read+x0, x0, x0, x0+1); FAILx(EFAULT);
+
+   // __NR_write 4
+   GO(__NR_write, "3s 1m");
+   SY(__NR_write, x0, x0, x0+1); FAIL;
+
+   // __NR_open 5
+   //GO(__NR_open, "(2-args) 2s 1m");
+   //SY(__NR_open, x0, x0); FAIL;
+
+   // Only 1s 0m errors -- the other 2s 1m have been checked in the previous
+   // open test, and if we test them they may be commoned up but they also
+   // may not.
+   //GO(__NR_open, "(3-args) 1s 0m");
+   //SY(__NR_open, "scalar.c", O_CREAT|O_EXCL, x0); FAIL;
+
+   // __NR_close 6
+   GO(__NR_close, "1s 0m");
+   SY(__NR_close, x0-1); FAIL;
+
+   // __NR_waitpid 7
+   //GO(__NR_waitpid, "3s 1m");
+   //SY(__NR_waitpid, x0, x0+1, x0); FAIL;
+
+   // __NR_creat 8
+   //GO(__NR_creat, "2s 1m");
+   //SY(__NR_creat, x0, x0); FAIL;
+
+   // __NR_link 9
+   //GO(__NR_link, "2s 2m");
+   //SY(__NR_link, x0, x0); FAIL;
+
+   // __NR_unlink 10
+   //GO(__NR_unlink, "1s 1m");
+   //SY(__NR_unlink, x0); FAIL;
+
+   // __NR_execve 11
+   GO(__NR_execve, "3s 1m");
+   SY(__NR_execve, x0 + 1, x0 + 1, x0); FAIL;
+
+   GO(__NR_execve, "3s 1m");
+   SY(__NR_execve, x0 + 1, x0, x0 + 1); FAIL;
+
+   char *argv_envp[] = {(char *) (x0 + 1), NULL};
+   GO(__NR_execve, "4s 2m");
+   SY(__NR_execve, x0 + 1, x0 + argv_envp, x0); FAIL;
+   char *argv_ok[] = {"frob", NULL};
+   GO(__NR_execve, "4s 2m");
+   SY(__NR_execve, x0 + 1, x0 + argv_ok, x0 + argv_envp); FAIL;
+
+   // __NR_chdir 12
+   GO(__NR_chdir, "1s 1m");
+   SY(__NR_chdir, x0); FAIL;
+
+   // __NR_time 13
+   //GO(__NR_time, "1s 1m");
+   //SY(__NR_time, x0+1); FAIL;
+
+   // __NR_mknod 14
+   //O(__NR_mknod, "3s 1m");
+   //Y(__NR_mknod, x0, x0, x0); FAIL;
+
+   // __NR_chmod 15
+   //GO(__NR_chmod, "2s 1m");
+   //SY(__NR_chmod, x0, x0); FAIL;
+
+   // __NR_lchown 16
+   //GO(__NR_lchown, "n/a");
+   //SY(__NR_lchown); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_break 17
+   //GO(__NR_break, "ni");
+   //SY(__NR_break); FAIL;
+
+   // __NR_oldstat 18
+   //GO(__NR_oldstat, "n/a");
+   // (obsolete, not handled by Valgrind)
+
+   // __NR_lseek 19
+   GO(__NR_lseek, "3s 0m");
+   SY(__NR_lseek, x0-1, x0, x0); FAILx(EBADF);
+
+   // __NR_getpid 20
+   GO(__NR_getpid, "0s 0m");
+   SY(__NR_getpid); SUCC;
+
+   // __NR_mount 21
+   GO(__NR_mount, "5s 3m");
+   SY(__NR_mount, x0, x0, x0, x0, x0); FAIL;
+
+   // __NR_umount 22
+   //GO(__NR_umount, "1s 1m");
+   //SY(__NR_umount, x0); FAIL;
+
+   // __NR_setuid 23
+   GO(__NR_setuid, "1s 0m");
+   SY(__NR_setuid, x0-1); FAIL;
+
+   // __NR_getuid 24
+   GO(__NR_getuid, "0s 0m");
+   SY(__NR_getuid); SUCC;
+
+   // __NR_stime 25
+   //GO(__NR_stime, "n/a");
+   //SY(__NR_stime); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_ptrace 26
+   // XXX: memory pointed to be arg3 goes unchecked... otherwise would be 2m
+   //GO(__NR_ptrace, "4s 1m");
+   //SY(__NR_ptrace, x0+PTRACE_GETREGS, x0, x0, x0); FAIL;
+
+   // __NR_alarm 27
+   //GO(__NR_alarm, "1s 0m");
+   //SY(__NR_alarm, x0); SUCC;
+
+   // __NR_oldfstat 28
+   //GO(__NR_oldfstat, "n/a");
+   // (obsolete, not handled by Valgrind)
+
+   // __NR_pause 29
+   //GO(__NR_pause, "ignore");
+   // (hard to test, and no args so not much to be gained -- don't bother)
+
+   // __NR_utime 30
+   //GO(__NR_utime, "2s 2m");
+   //SY(__NR_utime, x0, x0+1); FAIL;
+
+   // __NR_stty 31
+   //GO(__NR_stty, "ni");
+   //SY(__NR_stty); FAIL;
+
+   // __NR_gtty 32
+   //GO(__NR_gtty, "ni");
+   //SY(__NR_gtty); FAIL;
+
+   // __NR_access 33
+   //GO(__NR_access, "2s 1m");
+   //SY(__NR_access, x0, x0); FAIL;
+
+   // __NR_nice 34
+   //GO(__NR_nice, "1s 0m");
+   //SY(__NR_nice, x0); SUCC;
+
+   // __NR_ftime 35
+   //GO(__NR_ftime, "ni");
+   //SY(__NR_ftime); FAIL;
+
+   // __NR_sync 36
+   GO(__NR_sync, "0s 0m");
+   SY(__NR_sync); SUCC;
+
+   // __NR_kill 37
+   GO(__NR_kill, "2s 0m");
+   SY(__NR_kill, x0, x0); SUCC;
+
+   // __NR_rename 38
+   //GO(__NR_rename, "2s 2m");
+   //SY(__NR_rename, x0, x0); FAIL;
+
+   // __NR_mkdir 39
+   //GO(__NR_mkdir, "2s 1m");
+   //SY(__NR_mkdir, x0, x0); FAIL;
+
+   // __NR_rmdir 40
+   //GO(__NR_rmdir, "1s 1m");
+   //SY(__NR_rmdir, x0); FAIL;
+
+   // __NR_dup 41
+   GO(__NR_dup, "1s 0m");
+   SY(__NR_dup, x0-1); FAIL;
+
+   // __NR_pipe 42
+   //GO(__NR_pipe, "1s 1m");
+   //SY(__NR_pipe, x0); FAIL;
+
+   // __NR_times 43
+   GO(__NR_times, "1s 1m");
+   SY(__NR_times, x0+1); FAIL;
+
+   // __NR_prof 44
+   //GO(__NR_prof, "ni");
+   //SY(__NR_prof); FAIL;
+
+   // __NR_brk 45
+   GO(__NR_brk, "1s 0m");
+   SY(__NR_brk, x0); SUCC;
+
+   // __NR_setgid 46
+   GO(__NR_setgid, "1s 0m");
+   SY(__NR_setgid, x0-1); FAIL;
+
+   // __NR_getgid 47
+   GO(__NR_getgid, "0s 0m");
+   SY(__NR_getgid); SUCC;
+
+   // __NR_signal 48
+   //GO(__NR_signal, "n/a");
+   //SY(__NR_signal); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_geteuid 49
+   GO(__NR_geteuid, "0s 0m");
+   SY(__NR_geteuid); SUCC;
+
+   // __NR_getegid 50
+   GO(__NR_getegid, "0s 0m");
+   SY(__NR_getegid); SUCC;
+
+   // __NR_acct 51
+   GO(__NR_acct, "1s 1m");
+   SY(__NR_acct, x0-1); FAIL;
+
+   // __NR_umount2 52
+   GO(__NR_umount2, "2s 1m");
+   SY(__NR_umount2, x0, x0); FAIL;
+
+   // __NR_lock 53
+   //GO(__NR_lock, "ni");
+   //SY(__NR_lock); FAIL;
+
+   // __NR_ioctl 54
+#include <asm/ioctls.h>
+   GO(__NR_ioctl, "3s 1m");
+   SY(__NR_ioctl, x0, x0+TCSETS, x0); FAIL;
+
+   // __NR_fcntl 55
+   // As with sys_open(), the 'fd' error is suppressed for the later ones.
+   // For F_GETFD the 3rd arg is ignored
+   GO(__NR_fcntl, "(GETFD) 2s 0m");
+   SY(__NR_fcntl, x0-1, x0+F_GETFD, x0); FAILx(EBADF);
+
+   // For F_DUPFD the 3rd arg is 'arg'.  We don't check the 1st two args
+   // because any errors may or may not be commoned up with the ones from
+   // the previous fcntl call.
+   GO(__NR_fcntl, "(DUPFD) 1s 0m");
+   SY(__NR_fcntl, -1, F_DUPFD, x0); FAILx(EBADF);
+
+   // For F_GETLK the 3rd arg is 'lock'.  On x86, this fails w/EBADF.  But
+   // on amd64 in 32-bit mode it fails w/EFAULT.  We don't check the 1st two
+   // args for the reason given above.
+   GO(__NR_fcntl, "(GETLK) 1s 5m");
+   SY(__NR_fcntl, -1, F_GETLK, x0); FAIL; //FAILx(EBADF);
+
+   // __NR_mpx 56
+   //GO(__NR_mpx, "ni");
+   //SY(__NR_mpx); FAIL;
+
+   // __NR_setpgid 57
+   GO(__NR_setpgid, "2s 0m");
+   SY(__NR_setpgid, x0, x0-1); FAIL;
+
+   // __NR_ulimit 58
+   //GO(__NR_ulimit, "ni");
+   //SY(__NR_ulimit); FAIL;
+
+   // __NR_oldolduname 59
+   //GO(__NR_oldolduname, "n/a");
+   // (obsolete, not handled by Valgrind)
+
+   // __NR_umask 60
+   GO(__NR_umask, "1s 0m");
+   SY(__NR_umask, x0+022); SUCC;
+
+   // __NR_chroot 61
+   GO(__NR_chroot, "1s 1m");
+   SY(__NR_chroot, x0); FAIL;
+
+   // __NR_ustat 62
+   //GO(__NR_ustat, "n/a");
+   // (deprecated, not handled by Valgrind)
+
+   // __NR_dup2 63
+   //GO(__NR_dup2, "2s 0m");
+   //SY(__NR_dup2, x0-1, x0); FAIL;
+
+   // __NR_getppid 64
+   GO(__NR_getppid, "0s 0m");
+   SY(__NR_getppid); SUCC;
+
+   // __NR_getpgrp 65
+   //GO(__NR_getpgrp, "0s 0m");
+   //SY(__NR_getpgrp); SUCC;
+
+   // __NR_setsid 66
+   GO(__NR_setsid, "0s 0m");
+   SY(__NR_setsid); SUCC_OR_FAIL;
+
+   // __NR_sigaction 67
+   //GO(__NR_sigaction, "3s 4m");
+   //SY(__NR_sigaction, x0, x0+&px[1], x0+&px[1]); FAIL;
+
+   // __NR_sgetmask 68 sys_sgetmask()
+   //GO(__NR_sgetmask, "n/a");
+   //SY(__NR_sgetmask); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_ssetmask 69
+   //GO(__NR_ssetmask, "n/a");
+   //SY(__NR_ssetmask); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_setreuid 70
+   GO(__NR_setreuid, "2s 0m");
+   SY(__NR_setreuid, x0-1, x0-1); SUCC;
+
+   // __NR_setregid 71
+   GO(__NR_setregid, "2s 0m");
+   SY(__NR_setregid, x0-1, x0-1); SUCC;
+
+   // __NR_sigsuspend 72
+   // XXX: how do you use this function?
+   //GO(__NR_sigsuspend, "ignore");
+   // (I don't know how to test this...)
+
+   // __NR_sigpending 73
+   //GO(__NR_sigpending, "1s 1m");
+   //SY(__NR_sigpending, x0); FAIL;
+
+   // __NR_sethostname 74
+   GO(__NR_sethostname, "n/a");
+   //SY(__NR_sethostname); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_setrlimit 75
+   //GO(__NR_setrlimit, "2s 1m");
+   //SY(__NR_setrlimit, x0, x0); FAIL;
+
+   // __NR_getrlimit 76
+   //GO(__NR_getrlimit, "2s 1m");
+   //SY(__NR_getrlimit, x0, x0); FAIL;
+
+   // __NR_getrusage 77
+   GO(__NR_getrusage, "2s 1m");
+   SY(__NR_getrusage, x0, x0); FAIL;
+
+   // __NR_gettimeofday 78
+   GO(__NR_gettimeofday, "2s 2m");
+   SY(__NR_gettimeofday, x0+1, x0+1); FAIL;
+
+   // __NR_settimeofday 79
+   GO(__NR_settimeofday, "2s 2m");
+   SY(__NR_settimeofday, x0+1, x0+1); FAIL;
+
+   // __NR_getgroups 80
+   GO(__NR_getgroups, "2s 1m");
+   SY(__NR_getgroups, x0+1, x0+1); FAIL;
+
+   // __NR_setgroups 81
+   GO(__NR_setgroups, "2s 1m");
+   SY(__NR_setgroups, x0+1, x0+1); FAIL;
+
+   // __NR_select 82
+   //{
+   //   long args[5] = { x0+8, x0+0xffffffee, x0+1, x0+1, x0+1 };
+   //   GO(__NR_select, "1s 5m");
+   //   SY(__NR_select, args+x0); FAIL;
+   //}
+
+   // __NR_symlink 83
+   //GO(__NR_symlink, "2s 2m");
+   //SY(__NR_symlink, x0, x0); FAIL;
+
+   // __NR_oldlstat 84
+   //GO(__NR_oldlstat, "n/a");
+   // (obsolete, not handled by Valgrind)
+
+   // __NR_readlink 85
+   //GO(__NR_readlink, "3s 2m");
+   //SY(__NR_readlink, x0+1, x0+1, x0+1); FAIL;
+
+   // __NR_uselib 86
+   //GO(__NR_uselib, "n/a");
+   //SY(__NR_uselib); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_swapon 87
+   GO(__NR_swapon, "n/a");
+   //SY(__NR_swapon); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_reboot 88
+   GO(__NR_reboot, "n/a");
+   //SY(__NR_reboot); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_readdir 89
+   //GO(__NR_readdir, "n/a");
+   // (superseded, not handled by Valgrind)
+
+   // __NR_mmap 90
+   {
+      long args[6] = { x0, x0, x0, x0, x0-1, x0 };
+      GO(__NR_mmap, "1s 1m");
+      SY(__NR_mmap, args+x0); FAIL;
+   }
+
+   // __NR_munmap 91
+   GO(__NR_munmap, "2s 0m");
+   SY(__NR_munmap, x0, x0); FAIL;
+
+   // __NR_truncate 92
+   GO(__NR_truncate, "2s 1m");
+   SY(__NR_truncate, x0, x0); FAIL;
+
+   // __NR_ftruncate 93
+   GO(__NR_ftruncate, "2s 0m");
+   SY(__NR_ftruncate, x0, x0); FAIL;
+
+   // __NR_fchmod 94
+   GO(__NR_fchmod, "2s 0m");
+   SY(__NR_fchmod, x0-1, x0); FAIL;
+
+   // __NR_fchown 95
+   GO(__NR_fchown, "3s 0m");
+   SY(__NR_fchown, x0-1, x0, x0); FAIL;
+
+   // __NR_getpriority 96
+   GO(__NR_getpriority, "2s 0m");
+   SY(__NR_getpriority, x0-1, x0); FAIL;
+
+   // __NR_setpriority 97
+   GO(__NR_setpriority, "3s 0m");
+   SY(__NR_setpriority, x0-1, x0, x0); FAIL;
+
+   // __NR_profil 98
+   //GO(__NR_profil, "ni");
+   //SY(__NR_profil); FAIL;
+
+   // __NR_statfs 99
+   GO(__NR_statfs, "2s 2m");
+   SY(__NR_statfs, x0, x0); FAIL;
+
+   // __NR_fstatfs 100
+   GO(__NR_fstatfs, "2s 1m");
+   SY(__NR_fstatfs, x0, x0); FAIL;
+
+   // __NR_ioperm 101
+   //GO(__NR_ioperm, "3s 0m");
+   //SY(__NR_ioperm, x0, x0, x0); FAIL;
+
+   // __NR_socketcall 102
+   //GO(__NR_socketcall, "XXX");
+   // (XXX: need to do all sub-cases properly)
+
+   // __NR_syslog 103
+   GO(__NR_syslog, "3s 1m");
+   SY(__NR_syslog, x0+2, x0, x0+1); FAIL;
+
+   // __NR_setitimer 104
+   GO(__NR_setitimer, "3s 2m");
+   SY(__NR_setitimer, x0, x0+1, x0+1); FAIL;
+
+   // __NR_getitimer 105
+   GO(__NR_getitimer, "2s 1m");
+   SY(__NR_getitimer, x0, x0, x0); FAIL;
+
+   // __NR_stat 106
+   //GO(__NR_stat, "2s 2m");
+   //SY(__NR_stat, x0, x0); FAIL;
+
+   // __NR_lstat 107
+   //GO(__NR_lstat, "2s 2m");
+   //SY(__NR_lstat, x0, x0); FAIL;
+
+   // __NR_fstat 108
+   //GO(__NR_fstat, "2s 1m");
+   //SY(__NR_fstat, x0, x0); FAIL;
+
+   // __NR_olduname 109
+   //GO(__NR_olduname, "n/a");
+   // (obsolete, not handled by Valgrind)
+
+   // __NR_iopl 110
+   //GO(__NR_iopl, "1s 0m");
+   //SY(__NR_iopl, x0+100); FAIL;
+
+   // __NR_vhangup 111
+   GO(__NR_vhangup, "0s 0m");
+   SY(__NR_vhangup); SUCC_OR_FAIL;  // Will succeed for superuser
+
+   // __NR_idle 112
+   //GO(__NR_idle, "ni");
+   //SY(__NR_idle); FAIL;
+
+   // __NR_vm86old 113
+   //GO(__NR_vm86old, "n/a");
+   // (will probably never be handled by Valgrind)
+
+   // __NR_wait4 114
+   GO(__NR_wait4, "4s 2m");
+   SY(__NR_wait4, x0, x0+1, x0, x0+1); FAIL;
+
+   // __NR_swapoff 115
+   GO(__NR_swapoff, "n/a");
+   //SY(__NR_swapoff); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_sysinfo 116
+   GO(__NR_sysinfo, "1s 1m");
+   SY(__NR_sysinfo, x0); FAIL;
+
+   // __NR_ipc 117
+   // XXX: This is simplistic -- need to do all the sub-cases properly.
+   // XXX: Also, should be 6 scalar errors, except glibc's syscall() doesn't
+   //      use the 6th one!
+   //GO(__NR_ipc, "5s 0m");
+   //SY(__NR_ipc, x0+4, x0, x0, x0, x0, x0); FAIL;
+
+   // __NR_fsync 118
+   GO(__NR_fsync, "1s 0m");
+   SY(__NR_fsync, x0-1); FAIL;
+
+   // __NR_sigreturn 119
+   //GO(__NR_sigreturn, "n/a");
+   //SY(__NR_sigreturn); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_clone 120
+#ifndef CLONE_PARENT_SETTID
+#define CLONE_PARENT_SETTID	0x00100000
+#endif
+   GO(__NR_clone, "5s 3m");
+   SY(__NR_clone, x0|CLONE_PARENT_SETTID|CLONE_SETTLS|CLONE_CHILD_SETTID|SIGCHLD, x0, x0, x0, x0); FAIL;
+   if (0 == res) {
+      SY(__NR_exit, 0); FAIL;
+   }
+
+   // __NR_setdomainname 121
+   GO(__NR_setdomainname, "n/a");
+   //SY(__NR_setdomainname); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_uname 122
+   GO(__NR_uname, "1s 1m");
+   SY(__NR_uname, x0); FAIL;
+
+   // __NR_modify_ldt 123
+   //GO(__NR_modify_ldt, "3s 1m");
+   //SY(__NR_modify_ldt, x0+1, x0, x0+1); FAILx(EINVAL);
+
+   // __NR_adjtimex 124
+   // XXX: need to do properly, but deref'ing NULL causing Valgrind to crash...
+   GO(__NR_adjtimex, "XXX");
+   //SY(__NR_adjtimex, x0); FAIL;
+
+   // __NR_mprotect 125
+   GO(__NR_mprotect, "3s 0m");
+   SY(__NR_mprotect, x0+1, x0, x0); FAILx(EINVAL);
+
+   // __NR_sigprocmask 126
+   //GO(__NR_sigprocmask, "3s 2m");
+   //SY(__NR_sigprocmask, x0, x0+&px[1], x0+&px[1]); SUCC;
+
+   // __NR_create_module 127
+   //GO(__NR_create_module, "ni");
+   //SY(__NR_create_module); FAIL;
+
+   // __NR_init_module 128
+   GO(__NR_init_module, "3s 2m");
+   SY(__NR_init_module, x0, x0+1, x0); FAIL;
+
+   // __NR_delete_module 129
+   GO(__NR_delete_module, "n/a");
+   //SY(__NR_delete_module); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_get_kernel_syms 130
+   //GO(__NR_get_kernel_syms, "ni");
+   //SY(__NR_get_kernel_syms); FAIL;
+
+   // __NR_quotactl 131
+   GO(__NR_quotactl, "4s 1m");
+   SY(__NR_quotactl, x0, x0, x0, x0); FAIL;
+
+   // __NR_getpgid 132
+   GO(__NR_getpgid, "1s 0m");
+   SY(__NR_getpgid, x0-1); FAIL;
+
+   // __NR_fchdir 133
+   GO(__NR_fchdir, "1s 0m");
+   SY(__NR_fchdir, x0-1); FAIL;
+
+   // __NR_bdflush 134
+   //GO(__NR_bdflush, "n/a");
+   //SY(__NR_bdflush); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_sysfs 135
+   //GO(__NR_sysfs, "n/a");
+   //SY(__NR_sysfs); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_personality 136
+   GO(__NR_personality, "1s 0m");
+   SY(__NR_personality, x0+0xffffffff); SUCC;
+
+   // __NR_afs_syscall 137
+   //GO(__NR_afs_syscall, "ni");
+   //SY(__NR_afs_syscall); FAIL;
+
+   // __NR_setfsuid 138
+   GO(__NR_setfsuid, "1s 0m");
+   SY(__NR_setfsuid, x0); SUCC;  // This syscall has a stupid return value
+
+   // __NR_setfsgid 139
+   GO(__NR_setfsgid, "1s 0m");
+   SY(__NR_setfsgid, x0); SUCC;  // This syscall has a stupid return value
+
+   // __NR__llseek 140
+   //GO(__NR__llseek, "5s 1m");
+   //SY(__NR__llseek, x0, x0, x0, x0, x0); FAIL;
+
+   // __NR_getdents 141
+   //GO(__NR_getdents, "3s 1m");
+   //SY(__NR_getdents, x0, x0, x0+1); FAIL;
+
+   // __NR__newselect 142
+   //GO(__NR__newselect, "5s 4m");
+   //SY(__NR__newselect, x0+8, x0+0xffffffff, x0+1, x0+1, x0+1); FAIL;
+
+   // __NR_flock 143
+   GO(__NR_flock, "2s 0m");
+   SY(__NR_flock, x0, x0); FAIL;
+
+   // __NR_msync 144
+   GO(__NR_msync, "3s 1m");
+   SY(__NR_msync, x0, x0+1, x0); FAIL;
+
+   // __NR_readv 145
+   GO(__NR_readv, "3s 1m");
+   SY(__NR_readv, x0, x0, x0+1); FAIL;
+
+   // __NR_writev 146
+   GO(__NR_writev, "3s 1m");
+   SY(__NR_writev, x0, x0, x0+1); FAIL;
+
+   // __NR_getsid 147
+   GO(__NR_getsid, "1s 0m");
+   SY(__NR_getsid, x0-1); FAIL;
+
+   // __NR_fdatasync 148
+   GO(__NR_fdatasync, "1s 0m");
+   SY(__NR_fdatasync, x0-1); FAIL;
+
+   // __NR__sysctl 149
+   //GO(__NR__sysctl, "1s 1m");
+   //SY(__NR__sysctl, x0); FAIL;
+
+   // __NR_mlock 150
+   GO(__NR_mlock, "2s 0m");
+   SY(__NR_mlock, x0, x0+1); FAIL;
+
+   // __NR_munlock 151
+   GO(__NR_munlock, "2s 0m");
+   SY(__NR_munlock, x0, x0+1); FAIL;
+
+   // __NR_mlockall 152
+   GO(__NR_mlockall, "1s 0m");
+   SY(__NR_mlockall, x0-1); FAIL;
+
+   // __NR_munlockall 153
+   GO(__NR_munlockall, "0s 0m");
+   SY(__NR_munlockall); SUCC_OR_FAILx(EPERM);
+
+   // __NR_sched_setparam 154
+   GO(__NR_sched_setparam, "2s 1m");
+   SY(__NR_sched_setparam, x0, x0); FAIL;
+
+   // __NR_sched_getparam 155
+   GO(__NR_sched_getparam, "2s 1m");
+   SY(__NR_sched_getparam, x0, x0); FAIL;
+
+   // __NR_sched_setscheduler 156
+   GO(__NR_sched_setscheduler, "3s 1m");
+   SY(__NR_sched_setscheduler, x0-1, x0, x0+1); FAIL;
+
+   // __NR_sched_getscheduler 157
+   GO(__NR_sched_getscheduler, "1s 0m");
+   SY(__NR_sched_getscheduler, x0-1); FAIL;
+
+   // __NR_sched_yield 158
+   GO(__NR_sched_yield, "0s 0m");
+   SY(__NR_sched_yield); SUCC;
+
+   // __NR_sched_get_priority_max 159
+   GO(__NR_sched_get_priority_max, "1s 0m");
+   SY(__NR_sched_get_priority_max, x0-1); FAIL;
+
+   // __NR_sched_get_priority_min 160
+   GO(__NR_sched_get_priority_min, "1s 0m");
+   SY(__NR_sched_get_priority_min, x0-1); FAIL;
+
+   // __NR_sched_rr_get_interval 161
+   GO(__NR_sched_rr_get_interval, "n/a");
+   //SY(__NR_sched_rr_get_interval); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_nanosleep 162
+   GO(__NR_nanosleep, "2s 2m");
+   SY(__NR_nanosleep, x0, x0+1); FAIL;
+
+   // __NR_mremap 163
+   GO(__NR_mremap, "5s 0m");
+   SY(__NR_mremap, x0+1, x0, x0, x0+MREMAP_FIXED, x0); FAILx(EINVAL);
+
+   // __NR_setresuid 164
+   GO(__NR_setresuid, "3s 0m");
+   SY(__NR_setresuid, x0-1, x0-1, x0-1); SUCC;
+
+   // __NR_getresuid 165
+   GO(__NR_getresuid, "3s 3m");
+   SY(__NR_getresuid, x0, x0, x0); FAIL;
+
+   // __NR_vm86 166
+   //GO(__NR_vm86, "n/a");
+   // (will probably never be handled by Valgrind)
+
+   // __NR_query_module 167
+   //GO(__NR_query_module, "ni");
+   //SY(__NR_query_module); FAIL;
+
+   // __NR_poll 168
+   //GO(__NR_poll, "3s 1m");
+   //SY(__NR_poll, x0, x0+1, x0); FAIL;
+
+   // __NR_nfsservctl 169
+   GO(__NR_nfsservctl, "n/a");
+   //SY(__NR_nfsservctl); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_setresgid 170
+   GO(__NR_setresgid, "3s 0m");
+   SY(__NR_setresgid, x0-1, x0-1, x0-1); SUCC;
+
+   // __NR_getresgid 171
+   GO(__NR_getresgid, "3s 3m");
+   SY(__NR_getresgid, x0, x0, x0); FAIL;
+
+   // __NR_prctl 172
+#include <sys/prctl.h>
+   GO(__NR_prctl, "5s 0m");
+   SY(__NR_prctl, x0, x0, x0, x0, x0); FAIL;
+
+   char buf16[16] = "123456789012345.";
+   buf16[15] = x0; // this will cause 'using unitialised value'
+   GO(__NR_prctl, "2s 0m");
+   SY(__NR_prctl, x0 + PR_SET_NAME, buf16); SUCC;
+
+   char buf17[17] = "1234567890123456.";
+   buf17[16] = x0; // this must not cause 'using unitialised value'
+   GO(__NR_prctl, "1s 0m");
+   SY(__NR_prctl, x0 + PR_SET_NAME, buf17); SUCC;
+
+   // __NR_rt_sigreturn 173
+   GO(__NR_rt_sigreturn, "n/a");
+   //SY(__NR_rt_sigreturn); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_rt_sigaction 174
+   GO(__NR_rt_sigaction, "4s 4m");
+   SY(__NR_rt_sigaction, x0, x0+&px[2], x0+&px[2], x0); FAIL;
+
+   // __NR_rt_sigprocmask 175
+   GO(__NR_rt_sigprocmask, "4s 2m");
+   SY(__NR_rt_sigprocmask, x0, x0+1, x0+1, x0); FAIL;
+
+   // __NR_rt_sigpending 176
+   GO(__NR_rt_sigpending, "2s 1m");
+   SY(__NR_rt_sigpending, x0, x0+1); FAIL;
+
+   // __NR_rt_sigtimedwait 177
+   GO(__NR_rt_sigtimedwait, "4s 3m");
+   SY(__NR_rt_sigtimedwait, x0+1, x0+1, x0+1, x0); FAIL;
+
+   // __NR_rt_sigqueueinfo 178
+   GO(__NR_rt_sigqueueinfo, "3s 1m");
+   SY(__NR_rt_sigqueueinfo, x0, x0+1, x0); FAIL;
+
+   // __NR_rt_sigsuspend 179
+   GO(__NR_rt_sigsuspend, "2s 1m");
+   SY(__NR_rt_sigsuspend, x0 + 1, x0 + sizeof(sigset_t)); FAILx(EFAULT);
+
+   // __NR_pread64 180
+   GO(__NR_pread64, "5s 1m");
+   SY(__NR_pread64, x0, x0, x0+1, x0, x0); FAIL;
+
+   // __NR_pwrite64 181
+   GO(__NR_pwrite64, "5s 1m");
+   SY(__NR_pwrite64, x0, x0, x0+1, x0, x0); FAIL;
+
+   // __NR_chown 182
+   //GO(__NR_chown, "3s 1m");
+   //SY(__NR_chown, x0, x0, x0); FAIL;
+
+   // __NR_getcwd 183
+   GO(__NR_getcwd, "2s 1m");
+   SY(__NR_getcwd, x0, x0+1); FAIL;
+
+   // __NR_capget 184
+   GO(__NR_capget, "2s 2m");
+   SY(__NR_capget, x0, x0+1); FAIL;
+
+   // __NR_capset 185
+   GO(__NR_capset, "2s 2m");
+   SY(__NR_capset, x0, x0); FAIL;
+
+   // __NR_sigaltstack 186
+   {
+      struct our_sigaltstack {
+         void *ss_sp;
+         int ss_flags;
+         size_t ss_size;
+      } ss;
+      ss.ss_sp     = NULL;
+      ss.ss_flags  = 0;
+      ss.ss_size   = 0;
+      VALGRIND_MAKE_MEM_NOACCESS(& ss, sizeof(struct our_sigaltstack));
+      GO(__NR_sigaltstack, "2s 2m");
+      SY(__NR_sigaltstack, x0+&ss, x0+&ss); SUCC;
+   }
+
+   // __NR_sendfile 187
+   GO(__NR_sendfile, "4s 1m");
+   SY(__NR_sendfile, x0, x0, x0+1, x0); FAIL;
+
+   // __NR_getpmsg 188
+   // Could do 5s 4m with more effort, but I can't be bothered for this
+   // crappy non-standard syscall.
+   //GO(__NR_getpmsg, "5s 0m");
+   //SY(__NR_getpmsg, x0, x0, x0, x0); FAIL;
+
+   // __NR_putpmsg 189
+   // Could do 5s 2m with more effort, but I can't be bothered for this
+   // crappy non-standard syscall.
+   //GO(__NR_putpmsg, "5s 0m");
+   //SY(__NR_putpmsg, x0, x0, x0, x0, x0); FAIL;
+
+   // __NR_vfork 190
+   //GO(__NR_vfork, "other");
+   // (sse scalar_vfork.c)
+
+   // __NR_ugetrlimit 191
+   //GO(__NR_ugetrlimit, "2s 1m");
+   //SY(__NR_ugetrlimit, x0, x0); FAIL;
+
+   // __NR_mmap2 192
+   //GO(__NR_mmap2, "6s 0m");
+   //SY(__NR_mmap2, x0, x0, x0, x0, x0-1, x0); FAIL;
+
+   // __NR_truncate64 193
+   //GO(__NR_truncate64, "3s 1m");
+   //SY(__NR_truncate64, x0, x0, x0); FAIL;
+
+   // __NR_ftruncate64 194
+   //GO(__NR_ftruncate64, "3s 0m");
+   //SY(__NR_ftruncate64, x0, x0, x0); FAIL;
+
+   // __NR_stat64 195
+   //GO(__NR_stat64, "2s 2m");
+   //SY(__NR_stat64, x0, x0); FAIL;
+
+   // __NR_lstat64 196
+   //GO(__NR_lstat64, "2s 2m");
+   //SY(__NR_lstat64, x0, x0); FAIL;
+
+   // __NR_fstat64 197
+   //GO(__NR_fstat64, "2s 1m");
+   //SY(__NR_fstat64, x0, x0); FAIL;
+
+   // __NR_lchown32 198
+   //GO(__NR_lchown32, "3s 1m");
+   //SY(__NR_lchown32, x0, x0, x0); FAIL;
+
+   // __NR_getuid32 199
+   //GO(__NR_getuid32, "0s 0m");
+   //SY(__NR_getuid32); SUCC;
+
+   // __NR_getgid32 200
+   //GO(__NR_getgid32, "0s 0m");
+   //SY(__NR_getgid32); SUCC;
+
+   // __NR_geteuid32 201
+   //GO(__NR_geteuid32, "0s 0m");
+   //SY(__NR_geteuid32); SUCC;
+
+   // __NR_getegid32 202
+   //GO(__NR_getegid32, "0s 0m");
+   //SY(__NR_getegid32); SUCC;
+
+   // __NR_setreuid32 203
+   //GO(__NR_setreuid32, "2s 0m");
+   //SY(__NR_setreuid32, x0-1, x0-1); SUCC;
+
+   // __NR_setregid32 204
+   //GO(__NR_setregid32, "2s 0m");
+   //SY(__NR_setregid32, x0-1, x0-1); SUCC;
+
+   // __NR_getgroups32 205
+   //GO(__NR_getgroups32, "2s 1m");
+   //SY(__NR_getgroups32, x0+1, x0+1); FAIL;
+
+   // __NR_setgroups32 206
+   //GO(__NR_setgroups32, "2s 1m");
+   //SY(__NR_setgroups32, x0+1, x0+1); FAIL;
+
+   // __NR_fchown32 207
+   //GO(__NR_fchown32, "3s 0m");
+   //SY(__NR_fchown32, x0-1, x0, x0); FAIL;
+
+   // __NR_setresuid32 208
+   //GO(__NR_setresuid32, "3s 0m");
+   //SY(__NR_setresuid32, x0-1, x0-1, x0-1); SUCC;
+
+   // __NR_getresuid32 209
+   //GO(__NR_getresuid32, "3s 3m");
+   //SY(__NR_getresuid32, x0, x0, x0); FAIL;
+
+   // __NR_setresgid32 210
+   //GO(__NR_setresgid32, "3s 0m");
+   //SY(__NR_setresgid32, x0-1, x0-1, x0-1); SUCC;
+
+   // __NR_getresgid32 211
+   //GO(__NR_getresgid32, "3s 3m");
+   //SY(__NR_getresgid32, x0, x0, x0); FAIL;
+
+   // __NR_chown32 212
+   //GO(__NR_chown32, "3s 1m");
+   //SY(__NR_chown32, x0, x0, x0); FAIL;
+
+   // __NR_setuid32 213
+   //GO(__NR_setuid32, "1s 0m");
+   //SY(__NR_setuid32, x0-1); FAIL;
+
+   // __NR_setgid32 214
+   //GO(__NR_setgid32, "1s 0m");
+   //SY(__NR_setgid32, x0-1); FAIL;
+
+   // __NR_setfsuid32 215
+   //GO(__NR_setfsuid32, "1s 0m");
+   //SY(__NR_setfsuid32, x0); SUCC;  // This syscall has a stupid return value
+
+   // __NR_setfsgid32 216
+   //GO(__NR_setfsgid32, "1s 0m");
+   //SY(__NR_setfsgid32, x0); SUCC;  // This syscall has a stupid return value
+
+   // __NR_pivot_root 217
+   GO(__NR_pivot_root, "n/a");
+   //SY(__NR_pivot_root); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_mincore 218
+   GO(__NR_mincore, "3s 1m");
+   SY(__NR_mincore, x0, x0+40960, x0); FAIL;
+
+   // __NR_madvise 219
+   GO(__NR_madvise, "3s 0m");
+   SY(__NR_madvise, x0, x0+1, x0); FAILx(ENOMEM);
+
+   // __NR_getdents64 220
+   GO(__NR_getdents64, "3s 1m");
+   SY(__NR_getdents64, x0, x0, x0+1); FAIL;
+
+   // __NR_fcntl64 221
+   // As with sys_open(), we don't trigger errors for the 1st two args for
+   // the later ones.
+   // For F_GETFD the 3rd arg is ignored.
+   //GO(__NR_fcntl64, "(GETFD) 2s 0m");
+   //SY(__NR_fcntl64, x0-1, x0+F_GETFD, x0); FAILx(EBADF);
+
+   // For F_DUPFD the 3rd arg is 'arg'
+   //GO(__NR_fcntl64, "(DUPFD) 1s 0m");
+   //SY(__NR_fcntl64, -1, F_DUPFD, x0); FAILx(EBADF);
+
+   // For F_GETLK the 3rd arg is 'lock'.
+   // On x86, this fails w/EBADF.  But on amd64 in 32-bit mode it fails
+   // w/EFAULT.
+   //GO(__NR_fcntl64, "(GETLK) 1s 0m");
+   //SY(__NR_fcntl64, -1, +F_GETLK, x0); FAIL; //FAILx(EBADF);
+
+   // 222
+   GO(222, "ni");
+   SY(222); FAIL;
+
+   // 223
+   GO(223, "ni");
+   SY(223); FAIL;
+
+   // __NR_gettid 224
+   GO(__NR_gettid, "n/a");
+   //SY(__NR_gettid); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_readahead 225
+   GO(__NR_readahead, "n/a");
+   //SY(__NR_readahead); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_setxattr 226
+   GO(__NR_setxattr, "5s 3m");
+   SY(__NR_setxattr, x0, x0, x0, x0+1, x0); FAIL;
+
+   // __NR_lsetxattr 227
+   GO(__NR_lsetxattr, "5s 3m");
+   SY(__NR_lsetxattr, x0, x0, x0, x0+1, x0); FAIL;
+
+   // __NR_fsetxattr 228
+   GO(__NR_fsetxattr, "5s 2m");
+   SY(__NR_fsetxattr, x0, x0, x0, x0+1, x0); FAIL;
+
+   // __NR_getxattr 229
+   GO(__NR_getxattr, "4s 3m");
+   SY(__NR_getxattr, x0, x0, x0, x0+1); FAIL;
+
+   // __NR_lgetxattr 230
+   GO(__NR_lgetxattr, "4s 3m");
+   SY(__NR_lgetxattr, x0, x0, x0, x0+1); FAIL;
+
+   // __NR_fgetxattr 231
+   GO(__NR_fgetxattr, "4s 2m");
+   SY(__NR_fgetxattr, x0, x0, x0, x0+1); FAIL;
+
+   // __NR_listxattr 232
+   GO(__NR_listxattr, "3s 2m");
+   SY(__NR_listxattr, x0, x0, x0+1); FAIL;
+
+   // __NR_llistxattr 233
+   GO(__NR_llistxattr, "3s 2m");
+   SY(__NR_llistxattr, x0, x0, x0+1); FAIL;
+
+   // __NR_flistxattr 234
+   GO(__NR_flistxattr, "3s 1m");
+   SY(__NR_flistxattr, x0-1, x0, x0+1); FAIL; /* kernel returns EBADF, but both seem correct */
+
+   // __NR_removexattr 235
+   GO(__NR_removexattr, "2s 2m");
+   SY(__NR_removexattr, x0, x0); FAIL;
+
+   // __NR_lremovexattr 236
+   GO(__NR_lremovexattr, "2s 2m");
+   SY(__NR_lremovexattr, x0, x0); FAIL;
+
+   // __NR_fremovexattr 237
+   GO(__NR_fremovexattr, "2s 1m");
+   SY(__NR_fremovexattr, x0, x0); FAIL;
+
+   // __NR_tkill 238
+   GO(__NR_tkill, "n/a");
+   //SY(__NR_tkill); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_sendfile64 239
+   //GO(__NR_sendfile64, "4s 1m");
+   //SY(__NR_sendfile64, x0, x0, x0+1, x0); FAIL;
+
+   // __NR_futex 240
+#ifndef FUTEX_WAIT
+#define FUTEX_WAIT   0
+#endif
+   // XXX: again, glibc not doing 6th arg means we have only 5s errors
+   GO(__NR_futex, "4s 2m");
+   SY(__NR_futex, x0+FUTEX_WAIT, x0, x0, x0+1); FAIL;
+
+   // __NR_sched_setaffinity 241
+   GO(__NR_sched_setaffinity, "3s 1m");
+   SY(__NR_sched_setaffinity, x0, x0+1, x0); FAIL;
+
+   // __NR_sched_getaffinity 242
+   GO(__NR_sched_getaffinity, "3s 1m");
+   SY(__NR_sched_getaffinity, x0, x0+1, x0); FAIL;
+
+   // __NR_set_thread_area 243
+   //GO(__NR_set_thread_area, "1s 1m");
+   //SY(__NR_set_thread_area, x0); FAILx(EFAULT);
+
+   // __NR_get_thread_area 244
+   //GO(__NR_get_thread_area, "1s 1m");
+   //SY(__NR_get_thread_area, x0); FAILx(EFAULT);
+
+   // __NR_io_setup 245
+   GO(__NR_io_setup, "2s 1m");
+   SY(__NR_io_setup, x0, x0); FAIL;
+
+   // __NR_io_destroy 246
+   {
+      // jump through hoops to prevent the PRE(io_destroy) wrapper crashing.
+      struct fake_aio_ring {
+        unsigned        id;     /* kernel internal index number */
+        unsigned        nr;     /* number of io_events */
+        // There are more fields in the real aio_ring, but the 'nr' field is
+        // the only one used by the PRE() wrapper.
+      } ring = { 0, 0 };
+      struct fake_aio_ring* ringptr = &ring;
+      GO(__NR_io_destroy, "1s 0m");
+      SY(__NR_io_destroy, x0+&ringptr); FAIL;
+   }
+
+   // __NR_io_getevents 247
+   GO(__NR_io_getevents, "5s 2m");
+   SY(__NR_io_getevents, x0, x0, x0+1, x0, x0+1); FAIL;
+
+   // __NR_io_submit 248
+   GO(__NR_io_submit, "3s 1m");
+   SY(__NR_io_submit, x0, x0+1, x0); FAIL;
+
+   // __NR_io_cancel 249
+   GO(__NR_io_cancel, "3s 2m");
+   SY(__NR_io_cancel, x0, x0, x0); FAIL;
+
+   // __NR_fadvise64 250
+   GO(__NR_fadvise64, "n/a");
+   //SY(__NR_fadvise64); // (Not yet handled by Valgrind) FAIL;
+
+   // 251
+   GO(251, "ni");
+   SY(251); FAIL;
+
+   // __NR_exit_group 252
+   GO(__NR_exit_group, "other");
+   // (see scalar_exit_group.c)
+
+   // __NR_lookup_dcookie 253
+   GO(__NR_lookup_dcookie, "4s 1m");
+   SY(__NR_lookup_dcookie, x0, x0, x0, x0+1); FAIL;
+
+   // __NR_epoll_create 254
+   //GO(__NR_epoll_create, "1s 0m");
+   //SY(__NR_epoll_create, x0); SUCC_OR_FAIL;
+
+   // __NR_epoll_ctl 255
+   GO(__NR_epoll_ctl, "4s 1m");
+   SY(__NR_epoll_ctl, x0, x0, x0, x0); FAIL;
+
+   // __NR_epoll_wait 256
+   //GO(__NR_epoll_wait, "4s 1m");
+   //SY(__NR_epoll_wait, x0, x0, x0+1, x0); FAIL;
+
+   // __NR_remap_file_pages 257
+   GO(__NR_remap_file_pages, "n/a");
+   //SY(__NR_remap_file_pages); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_set_tid_address 258
+   GO(__NR_set_tid_address, "1s 0m");
+   SY(__NR_set_tid_address, x0); SUCC_OR_FAILx(ENOSYS);
+
+   // __NR_timer_create 259
+   GO(__NR_timer_create, "3s 2m");
+   SY(__NR_timer_create, x0, x0+1, x0); FAIL;
+
+   // __NR_timer_settime (__NR_timer_create+1)
+   GO(__NR_timer_settime, "4s 2m");
+   SY(__NR_timer_settime, x0, x0, x0, x0+1); FAIL;
+
+   // __NR_timer_gettime (__NR_timer_create+2)
+   GO(__NR_timer_gettime, "2s 1m");
+   SY(__NR_timer_gettime, x0, x0); FAIL;
+
+   // __NR_timer_getoverrun (__NR_timer_create+3)
+   GO(__NR_timer_getoverrun, "1s 0m");
+   SY(__NR_timer_getoverrun, x0); FAIL;
+
+   // __NR_timer_delete (__NR_timer_create+4)
+   GO(__NR_timer_delete, "1s 0m");
+   SY(__NR_timer_delete, x0); FAIL;
+
+   // __NR_clock_settime (__NR_timer_create+5)
+   GO(__NR_clock_settime, "2s 1m");
+   SY(__NR_clock_settime, x0, x0);  FAIL; FAIL;
+
+   // __NR_clock_gettime (__NR_timer_create+6)
+   GO(__NR_clock_gettime, "2s 1m");
+   SY(__NR_clock_gettime, x0, x0); FAIL;
+
+   // __NR_clock_getres (__NR_timer_create+7)
+   GO(__NR_clock_getres, "2s 1m");
+   SY(__NR_clock_getres, x0+1, x0+1); FAIL; FAIL;
+
+   // __NR_clock_nanosleep (__NR_timer_create+8)
+   GO(__NR_clock_nanosleep, "n/a");
+   //SY(__NR_clock_nanosleep); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_statfs64 268
+   //GO(__NR_statfs64, "3s 2m");
+   //SY(__NR_statfs64, x0, x0+1, x0); FAIL;
+
+   // __NR_fstatfs64 269
+   //GO(__NR_fstatfs64, "3s 1m");
+   //SY(__NR_fstatfs64, x0, x0+1, x0); FAIL;
+
+   // __NR_tgkill 270
+   GO(__NR_tgkill, "n/a");
+   //SY(__NR_tgkill); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_utimes 271
+   //GO(__NR_utimes, "2s 2m");
+   //SY(__NR_utimes, x0, x0+1); FAIL;
+
+   // __NR_fadvise64_64 272
+   //GO(__NR_fadvise64_64, "n/a");
+   //SY(__NR_fadvise64_64); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_vserver 273
+   //GO(__NR_vserver, "ni");
+   //SY(__NR_vserver); FAIL;
+
+   // __NR_mbind 274
+   GO(__NR_mbind, "n/a");
+   //SY(__NR_mbind); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_get_mempolicy 275
+   GO(__NR_get_mempolicy, "n/a");
+   //SY(__NR_get_mempolicy); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_set_mempolicy 276
+   GO(__NR_set_mempolicy, "n/a");
+   //SY(__NR_set_mempolicy); // (Not yet handled by Valgrind) FAIL;
+
+   // __NR_mq_open 277
+   GO(__NR_mq_open, "4s 3m");
+   SY(__NR_mq_open, x0, x0+O_CREAT, x0, x0+1); FAIL;
+
+   // __NR_mq_unlink (__NR_mq_open+1)
+   GO(__NR_mq_unlink, "1s 1m");
+   SY(__NR_mq_unlink, x0); FAIL;
+
+   // __NR_mq_timedsend (__NR_mq_open+2)
+   GO(__NR_mq_timedsend, "5s 2m");
+   SY(__NR_mq_timedsend, x0, x0, x0+1, x0, x0+1); FAIL;
+
+   // __NR_mq_timedreceive (__NR_mq_open+3)
+   GO(__NR_mq_timedreceive, "5s 3m");
+   SY(__NR_mq_timedreceive, x0, x0, x0+1, x0+1, x0+1); FAIL;
+
+   // __NR_mq_notify (__NR_mq_open+4)
+   GO(__NR_mq_notify, "2s 1m");
+   SY(__NR_mq_notify, x0, x0+1); FAIL;
+
+   // __NR_mq_getsetattr (__NR_mq_open+5)
+   GO(__NR_mq_getsetattr, "3s 2m");
+   SY(__NR_mq_getsetattr, x0, x0+1, x0+1); FAIL;
+
+   // __NR_sys_kexec_load 283
+   //GO(__NR_sys_kexec_load, "ni");
+   //SY(__NR_sys_kexec_load); FAIL;
+
+   // __NR_epoll_create1 329
+   GO(__NR_epoll_create1, "1s 0m");
+   SY(__NR_epoll_create1, x0); SUCC_OR_FAIL;
+
+   // __NR_process_vm_readv 347
+   GO(__NR_process_vm_readv, "6s 2m");
+   SY(__NR_process_vm_readv, x0, x0, x0+1, x0, x0+1, x0); FAIL;
+
+   // __NR_process_vm_writev 348
+   GO(__NR_process_vm_writev, "6s 2m");
+   SY(__NR_process_vm_writev, x0, x0, x0+1, x0, x0+1, x0); FAIL;
+
+   // no such syscall...
+   GO(9999, "1e");
+   SY(9999); FAIL;
+
+   // __NR_exit 1
+   GO(__NR_exit, "1s 0m");
+   SY(__NR_exit, x0); FAIL;
+
+   assert(0);
+}
diff --git a/memcheck/tests/loongarch64-linux/scalar.h b/memcheck/tests/loongarch64-linux/scalar.h
new file mode 100644
index 0000000..4d86d2c
--- /dev/null
+++ b/memcheck/tests/loongarch64-linux/scalar.h
@@ -0,0 +1,62 @@
+/* This is the loongarch64 variant of memcheck/tests/x86-linux/scalar.h */
+#include "../../../include/vki/vki-scnums-loongarch64-linux.h"
+
+#include <assert.h>
+#include <errno.h>
+#include <fcntl.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <sys/syscall.h>
+#include <sys/stat.h>
+#include <sys/ptrace.h>
+#include <sys/types.h>
+#include <sys/mman.h>
+
+// Since we use vki_unistd.h, we can't include <unistd.h>.  So we have to
+// declare this ourselves.
+extern long int syscall (long int __sysno, ...) __THROW;
+
+// Thorough syscall scalar arg checking.  Also serves as thorough checking
+// for (very) basic syscall use.  Generally not trying to do anything
+// meaningful with the syscalls.
+
+#define GO(__NR_xxx, s) \
+   fprintf(stderr, "-----------------------------------------------------\n"  \
+                   "%3d:%20s %s\n"                                            \
+                   "-----------------------------------------------------\n", \
+                   __NR_xxx, #__NR_xxx, s);
+
+#define SY  res = syscall
+
+#define FAIL  assert(-1 == res);
+#define SUCC  assert(-1 != res);
+#define SUCC_OR_FAIL    /* no test */
+
+#define FAILx(E) \
+   do { \
+      int myerrno = errno; \
+      if (-1 == res) { \
+         if (E == myerrno) { \
+            /* as expected */ \
+         } else { \
+         fprintf(stderr, "Expected error %s (%d), got %d\n", #E, E, myerrno); \
+         exit(1); \
+         } \
+      } else { \
+         fprintf(stderr, "Expected error %s (%d), got success\n", #E, E); \
+         exit(1); \
+      } \
+   } while (0);
+
+#define SUCC_OR_FAILx(E) \
+   do { \
+      int myerrno = errno; \
+      if (-1 == res) { \
+         if (E == myerrno) { \
+            /* as expected */ \
+         } else { \
+         fprintf(stderr, "Expected error %s (%d), got %d\n", #E, E, myerrno); \
+         exit(1); \
+         } \
+      } \
+   } while (0);
diff --git a/memcheck/tests/loongarch64-linux/scalar.stderr.exp b/memcheck/tests/loongarch64-linux/scalar.stderr.exp
new file mode 100644
index 0000000..a90b90a
--- /dev/null
+++ b/memcheck/tests/loongarch64-linux/scalar.stderr.exp
@@ -0,0 +1,2716 @@
+-----------------------------------------------------
+128:__NR_restart_syscall n/a
+-----------------------------------------------------
+-----------------------------------------------------
+ 93:           __NR_exit below
+-----------------------------------------------------
+-----------------------------------------------------
+ 63:           __NR_read 1+3s 1m
+-----------------------------------------------------
+Syscall param (syscallno) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:51)
+
+Syscall param read(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:51)
+
+Syscall param read(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:51)
+
+Syscall param read(count) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:51)
+
+Syscall param read(buf) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:51)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 64:          __NR_write 3s 1m
+-----------------------------------------------------
+Syscall param write(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:55)
+
+Syscall param write(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:55)
+
+Syscall param write(count) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:55)
+
+Syscall param write(buf) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:55)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 57:          __NR_close 1s 0m
+-----------------------------------------------------
+Syscall param close(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:69)
+
+-----------------------------------------------------
+221:         __NR_execve 3s 1m
+-----------------------------------------------------
+Syscall param execve(filename) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:89)
+
+Syscall param execve(argv) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:89)
+
+Syscall param execve(envp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:89)
+
+Syscall param execve(filename) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:89)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param execve(argv) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:89)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+221:         __NR_execve 3s 1m
+-----------------------------------------------------
+Syscall param execve(filename) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:92)
+
+Syscall param execve(argv) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:92)
+
+Syscall param execve(envp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:92)
+
+Syscall param execve(filename) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:92)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param execve(argv) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:92)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+221:         __NR_execve 4s 2m
+-----------------------------------------------------
+Syscall param execve(filename) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:96)
+
+Syscall param execve(argv) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:96)
+
+Syscall param execve(envp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:96)
+
+Syscall param execve(filename) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:96)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param execve(argv) points to uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:96)
+ Address 0x........ is on thread 1's stack
+ in frame #1, created by main (scalar.c:28)
+
+Syscall param execve(argv[0]) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:96)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+221:         __NR_execve 4s 2m
+-----------------------------------------------------
+Syscall param execve(filename) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:99)
+
+Syscall param execve(argv) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:99)
+
+Syscall param execve(envp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:99)
+
+Syscall param execve(filename) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:99)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param execve(envp) points to uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:99)
+ Address 0x........ is on thread 1's stack
+ in frame #1, created by main (scalar.c:28)
+
+Syscall param execve(envp[i]) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:99)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 49:          __NR_chdir 1s 1m
+-----------------------------------------------------
+Syscall param chdir(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:103)
+
+Syscall param chdir(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:103)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 62:          __NR_lseek 3s 0m
+-----------------------------------------------------
+Syscall param lseek(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:131)
+
+Syscall param lseek(offset) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:131)
+
+Syscall param lseek(whence) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:131)
+
+-----------------------------------------------------
+172:         __NR_getpid 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+ 40:          __NR_mount 5s 3m
+-----------------------------------------------------
+Syscall param mount(source) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:139)
+
+Syscall param mount(target) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:139)
+
+Syscall param mount(type) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:139)
+
+Syscall param mount(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:139)
+
+Syscall param mount(data) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:139)
+
+Syscall param mount(target) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:139)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param mount(type) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:139)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+146:         __NR_setuid 1s 0m
+-----------------------------------------------------
+Syscall param setuid(uid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:147)
+
+-----------------------------------------------------
+174:         __NR_getuid 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+ 81:           __NR_sync 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+129:           __NR_kill 2s 0m
+-----------------------------------------------------
+Syscall param kill(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:204)
+
+Syscall param kill(signal) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:204)
+
+-----------------------------------------------------
+ 23:            __NR_dup 1s 0m
+-----------------------------------------------------
+Syscall param dup(oldfd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:220)
+
+-----------------------------------------------------
+153:          __NR_times 1s 1m
+-----------------------------------------------------
+Syscall param times(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:228)
+
+Syscall param times(buf) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:228)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+214:            __NR_brk 1s 0m
+-----------------------------------------------------
+Syscall param brk(end_data_segment) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:236)
+
+-----------------------------------------------------
+144:         __NR_setgid 1s 0m
+-----------------------------------------------------
+Syscall param setgid(gid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:240)
+
+-----------------------------------------------------
+176:         __NR_getgid 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+175:        __NR_geteuid 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+177:        __NR_getegid 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+ 89:           __NR_acct 1s 1m
+-----------------------------------------------------
+Syscall param acct(filename) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:260)
+
+Syscall param acct(filename) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:260)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 39:        __NR_umount2 2s 1m
+-----------------------------------------------------
+Syscall param umount2(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:264)
+
+Syscall param umount2(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:264)
+
+Syscall param umount2(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:264)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 29:          __NR_ioctl 3s 1m
+-----------------------------------------------------
+Syscall param ioctl(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:273)
+
+Syscall param ioctl(request) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:273)
+
+Syscall param ioctl(arg) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:273)
+
+Syscall param ioctl(TCSET{S,SW,SF}) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:273)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 25:          __NR_fcntl (GETFD) 2s 0m
+-----------------------------------------------------
+Syscall param fcntl(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:279)
+
+Syscall param fcntl(cmd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:279)
+
+-----------------------------------------------------
+ 25:          __NR_fcntl (DUPFD) 1s 0m
+-----------------------------------------------------
+Syscall param fcntl(arg) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:285)
+
+-----------------------------------------------------
+ 25:          __NR_fcntl (GETLK) 1s 5m
+-----------------------------------------------------
+Syscall param fcntl(lock) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:291)
+
+Syscall param fcntl(lock->l_type) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:291)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param fcntl(lock->l_whence) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:291)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param fcntl(lock->l_start) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:291)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param fcntl(lock->l_len) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:291)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param fcntl(lock->l_pid) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:291)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+154:        __NR_setpgid 2s 0m
+-----------------------------------------------------
+Syscall param setpgid(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:299)
+
+Syscall param setpgid(pgid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:299)
+
+-----------------------------------------------------
+166:          __NR_umask 1s 0m
+-----------------------------------------------------
+Syscall param umask(mask) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:311)
+
+-----------------------------------------------------
+ 51:         __NR_chroot 1s 1m
+-----------------------------------------------------
+Syscall param chroot(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:315)
+
+Syscall param chroot(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:315)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+173:        __NR_getppid 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+157:         __NR_setsid 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+145:       __NR_setreuid 2s 0m
+-----------------------------------------------------
+Syscall param setreuid(ruid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:351)
+
+Syscall param setreuid(euid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:351)
+
+-----------------------------------------------------
+143:       __NR_setregid 2s 0m
+-----------------------------------------------------
+Syscall param setregid(rgid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:355)
+
+Syscall param setregid(egid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:355)
+
+-----------------------------------------------------
+161:    __NR_sethostname n/a
+-----------------------------------------------------
+-----------------------------------------------------
+165:      __NR_getrusage 2s 1m
+-----------------------------------------------------
+Syscall param getrusage(who) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:380)
+
+Syscall param getrusage(usage) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:380)
+
+Syscall param getrusage(usage) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:380)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+169:   __NR_gettimeofday 2s 2m
+-----------------------------------------------------
+Syscall param gettimeofday(tv) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:384)
+
+Syscall param gettimeofday(tz) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:384)
+
+Syscall param gettimeofday(tv) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:384)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param gettimeofday(tz) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:384)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+170:   __NR_settimeofday 2s 2m
+-----------------------------------------------------
+Syscall param settimeofday(tv) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:388)
+
+Syscall param settimeofday(tz) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:388)
+
+Syscall param settimeofday(tv) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:388)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param settimeofday(tz) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:388)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+158:      __NR_getgroups 2s 1m
+-----------------------------------------------------
+Syscall param getgroups(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:392)
+
+Syscall param getgroups(list) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:392)
+
+Syscall param getgroups(list) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:392)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+159:      __NR_setgroups 2s 1m
+-----------------------------------------------------
+Syscall param setgroups(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:396)
+
+Syscall param setgroups(list) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:396)
+
+Syscall param setgroups(list) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:396)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+224:         __NR_swapon n/a
+-----------------------------------------------------
+-----------------------------------------------------
+142:         __NR_reboot n/a
+-----------------------------------------------------
+-----------------------------------------------------
+222:           __NR_mmap 1s 1m
+-----------------------------------------------------
+Syscall param mmap(addr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:437)
+
+-----------------------------------------------------
+215:         __NR_munmap 2s 0m
+-----------------------------------------------------
+Syscall param munmap(start) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:442)
+
+Syscall param munmap(length) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:442)
+
+-----------------------------------------------------
+ 45:       __NR_truncate 2s 1m
+-----------------------------------------------------
+Syscall param truncate(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:446)
+
+
+More than 100 errors detected.  Subsequent errors
+will still be recorded, but in less detail than before.
+Syscall param truncate(length) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:446)
+
+Syscall param truncate(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:446)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 46:      __NR_ftruncate 2s 0m
+-----------------------------------------------------
+Syscall param ftruncate(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:450)
+
+Syscall param ftruncate(length) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:450)
+
+-----------------------------------------------------
+ 52:         __NR_fchmod 2s 0m
+-----------------------------------------------------
+Syscall param fchmod(fildes) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:454)
+
+Syscall param fchmod(mode) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:454)
+
+-----------------------------------------------------
+ 55:         __NR_fchown 3s 0m
+-----------------------------------------------------
+Syscall param fchown(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:458)
+
+Syscall param fchown(owner) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:458)
+
+Syscall param fchown(group) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:458)
+
+-----------------------------------------------------
+141:    __NR_getpriority 2s 0m
+-----------------------------------------------------
+Syscall param getpriority(which) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:462)
+
+Syscall param getpriority(who) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:462)
+
+-----------------------------------------------------
+140:    __NR_setpriority 3s 0m
+-----------------------------------------------------
+Syscall param setpriority(which) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:466)
+
+Syscall param setpriority(who) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:466)
+
+Syscall param setpriority(prio) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:466)
+
+-----------------------------------------------------
+ 43:         __NR_statfs 2s 2m
+-----------------------------------------------------
+Syscall param statfs(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:474)
+
+Syscall param statfs(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:474)
+
+Syscall param statfs(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:474)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param statfs(buf) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:474)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 44:        __NR_fstatfs 2s 1m
+-----------------------------------------------------
+Syscall param fstatfs(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:478)
+
+Syscall param fstatfs(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:478)
+
+Syscall param fstatfs(buf) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:478)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+116:         __NR_syslog 3s 1m
+-----------------------------------------------------
+Syscall param syslog(type) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:490)
+
+Syscall param syslog(bufp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:490)
+
+Syscall param syslog(len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:490)
+
+Syscall param syslog(bufp) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:490)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+103:      __NR_setitimer 3s 2m
+-----------------------------------------------------
+Syscall param setitimer(which) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:494)
+
+Syscall param setitimer(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:494)
+
+Syscall param setitimer(ovalue) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:494)
+
+Syscall param setitimer(&value->it_interval) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:494)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param setitimer(&value->it_value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:494)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param setitimer(&ovalue->it_interval) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:494)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param setitimer(&ovalue->it_value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:494)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+102:      __NR_getitimer 2s 1m
+-----------------------------------------------------
+Syscall param getitimer(which) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:498)
+
+Syscall param getitimer(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:498)
+
+Syscall param getitimer(&value->it_interval) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:498)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param getitimer(&value->it_value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:498)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 58:        __NR_vhangup 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+260:          __NR_wait4 4s 2m
+-----------------------------------------------------
+Syscall param wait4(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:534)
+
+Syscall param wait4(status) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:534)
+
+Syscall param wait4(options) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:534)
+
+Syscall param wait4(rusage) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:534)
+
+Syscall param wait4(status) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:534)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param wait4(rusage) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:534)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+225:        __NR_swapoff n/a
+-----------------------------------------------------
+-----------------------------------------------------
+179:        __NR_sysinfo 1s 1m
+-----------------------------------------------------
+Syscall param sysinfo(info) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:542)
+
+Syscall param sysinfo(info) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:542)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 82:          __NR_fsync 1s 0m
+-----------------------------------------------------
+Syscall param fsync(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:553)
+
+-----------------------------------------------------
+220:          __NR_clone 5s 3m
+-----------------------------------------------------
+Syscall param clone(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:564)
+
+Syscall param clone(child_stack) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:564)
+
+Syscall param clone(parent_tidptr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:564)
+
+Syscall param clone(parent_tidptr) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:564)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param clone(tlsinfo) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:564)
+
+Syscall param clone(child_tidptr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:564)
+
+Syscall param clone(child_tidptr) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:564)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+162:  __NR_setdomainname n/a
+-----------------------------------------------------
+-----------------------------------------------------
+160:          __NR_uname 1s 1m
+-----------------------------------------------------
+Syscall param uname(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:575)
+
+Syscall param uname(buf) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:575)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+171:       __NR_adjtimex XXX
+-----------------------------------------------------
+-----------------------------------------------------
+226:       __NR_mprotect 3s 0m
+-----------------------------------------------------
+Syscall param mprotect(addr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:588)
+
+Syscall param mprotect(len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:588)
+
+Syscall param mprotect(prot) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:588)
+
+-----------------------------------------------------
+105:    __NR_init_module 3s 2m
+-----------------------------------------------------
+Syscall param init_module(umod) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:600)
+
+Syscall param init_module(len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:600)
+
+Syscall param init_module(uargs) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:600)
+
+Syscall param init_module(umod) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:600)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param init_module(uargs) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:600)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+106:  __NR_delete_module n/a
+-----------------------------------------------------
+-----------------------------------------------------
+ 60:       __NR_quotactl 4s 1m
+-----------------------------------------------------
+Syscall param quotactl(cmd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:612)
+
+Syscall param quotactl(special) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:612)
+
+Syscall param quotactl(id) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:612)
+
+Syscall param quotactl(addr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:612)
+
+Syscall param quotactl(special) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:612)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+155:        __NR_getpgid 1s 0m
+-----------------------------------------------------
+Syscall param getpgid(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:616)
+
+-----------------------------------------------------
+ 50:         __NR_fchdir 1s 0m
+-----------------------------------------------------
+Syscall param fchdir(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:620)
+
+-----------------------------------------------------
+ 92:    __NR_personality 1s 0m
+-----------------------------------------------------
+Syscall param personality(persona) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:632)
+
+-----------------------------------------------------
+151:       __NR_setfsuid 1s 0m
+-----------------------------------------------------
+Syscall param setfsuid(uid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:640)
+
+-----------------------------------------------------
+152:       __NR_setfsgid 1s 0m
+-----------------------------------------------------
+Syscall param setfsgid(gid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:644)
+
+-----------------------------------------------------
+ 32:          __NR_flock 2s 0m
+-----------------------------------------------------
+Syscall param flock(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:660)
+
+Syscall param flock(operation) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:660)
+
+-----------------------------------------------------
+227:          __NR_msync 3s 1m
+-----------------------------------------------------
+Syscall param msync(start) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:664)
+
+Syscall param msync(length) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:664)
+
+Syscall param msync(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:664)
+
+Syscall param msync(start) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:664)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 65:          __NR_readv 3s 1m
+-----------------------------------------------------
+Syscall param readv(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:668)
+
+Syscall param readv(vector) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:668)
+
+Syscall param readv(count) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:668)
+
+Syscall param readv(vector) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:668)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 66:         __NR_writev 3s 1m
+-----------------------------------------------------
+Syscall param writev(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:672)
+
+Syscall param writev(vector) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:672)
+
+Syscall param writev(count) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:672)
+
+Syscall param writev(vector) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:672)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+156:         __NR_getsid 1s 0m
+-----------------------------------------------------
+Syscall param getsid(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:676)
+
+-----------------------------------------------------
+ 83:      __NR_fdatasync 1s 0m
+-----------------------------------------------------
+Syscall param fdatasync(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:680)
+
+-----------------------------------------------------
+228:          __NR_mlock 2s 0m
+-----------------------------------------------------
+Syscall param mlock(addr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:688)
+
+Syscall param mlock(len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:688)
+
+-----------------------------------------------------
+229:        __NR_munlock 2s 0m
+-----------------------------------------------------
+Syscall param munlock(addr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:692)
+
+Syscall param munlock(len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:692)
+
+-----------------------------------------------------
+230:       __NR_mlockall 1s 0m
+-----------------------------------------------------
+Syscall param mlockall(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:696)
+
+-----------------------------------------------------
+231:     __NR_munlockall 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+118: __NR_sched_setparam 2s 1m
+-----------------------------------------------------
+Syscall param sched_setparam(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:704)
+
+Syscall param sched_setparam(p) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:704)
+
+Syscall param sched_setparam(p) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:704)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+121: __NR_sched_getparam 2s 1m
+-----------------------------------------------------
+Syscall param sched_getparam(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:708)
+
+Syscall param sched_getparam(p) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:708)
+
+Syscall param sched_getparam(p) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:708)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+119:__NR_sched_setscheduler 3s 1m
+-----------------------------------------------------
+Syscall param sched_setscheduler(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:712)
+
+Syscall param sched_setscheduler(policy) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:712)
+
+Syscall param sched_setscheduler(p) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:712)
+
+Syscall param sched_setscheduler(p) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:712)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+120:__NR_sched_getscheduler 1s 0m
+-----------------------------------------------------
+Syscall param sched_getscheduler(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:716)
+
+-----------------------------------------------------
+124:    __NR_sched_yield 0s 0m
+-----------------------------------------------------
+-----------------------------------------------------
+125:__NR_sched_get_priority_max 1s 0m
+-----------------------------------------------------
+Syscall param sched_get_priority_max(policy) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:724)
+
+-----------------------------------------------------
+126:__NR_sched_get_priority_min 1s 0m
+-----------------------------------------------------
+Syscall param sched_get_priority_min(policy) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:728)
+
+-----------------------------------------------------
+127:__NR_sched_rr_get_interval n/a
+-----------------------------------------------------
+-----------------------------------------------------
+101:      __NR_nanosleep 2s 2m
+-----------------------------------------------------
+Syscall param nanosleep(req) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:736)
+
+Syscall param nanosleep(rem) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:736)
+
+Syscall param nanosleep(req) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:736)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param nanosleep(rem) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:736)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+216:         __NR_mremap 5s 0m
+-----------------------------------------------------
+Syscall param mremap(old_addr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:740)
+
+Syscall param mremap(old_size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:740)
+
+Syscall param mremap(new_size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:740)
+
+Syscall param mremap(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:740)
+
+Syscall param mremap(new_addr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:740)
+
+-----------------------------------------------------
+147:      __NR_setresuid 3s 0m
+-----------------------------------------------------
+Syscall param setresuid(ruid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:744)
+
+Syscall param setresuid(euid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:744)
+
+Syscall param setresuid(suid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:744)
+
+-----------------------------------------------------
+148:      __NR_getresuid 3s 3m
+-----------------------------------------------------
+Syscall param getresuid(ruid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:748)
+
+Syscall param getresuid(euid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:748)
+
+Syscall param getresuid(suid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:748)
+
+Syscall param getresuid(ruid) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:748)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param getresuid(euid) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:748)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param getresuid(suid) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:748)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 42:     __NR_nfsservctl n/a
+-----------------------------------------------------
+-----------------------------------------------------
+149:      __NR_setresgid 3s 0m
+-----------------------------------------------------
+Syscall param setresgid(rgid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:768)
+
+Syscall param setresgid(egid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:768)
+
+Syscall param setresgid(sgid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:768)
+
+-----------------------------------------------------
+150:      __NR_getresgid 3s 3m
+-----------------------------------------------------
+Syscall param getresgid(rgid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:772)
+
+Syscall param getresgid(egid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:772)
+
+Syscall param getresgid(sgid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:772)
+
+Syscall param getresgid(rgid) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:772)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param getresgid(egid) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:772)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param getresgid(sgid) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:772)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+167:          __NR_prctl 5s 0m
+-----------------------------------------------------
+Syscall param prctl(option) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:777)
+
+Syscall param prctl(arg2) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:777)
+
+Syscall param prctl(arg3) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:777)
+
+Syscall param prctl(arg4) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:777)
+
+Syscall param prctl(arg5) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:777)
+
+-----------------------------------------------------
+167:          __NR_prctl 2s 0m
+-----------------------------------------------------
+Syscall param prctl(option) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:782)
+
+Syscall param prctl(set-name) points to uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:782)
+ Address 0x........ is on thread 1's stack
+ in frame #1, created by main (scalar.c:28)
+
+-----------------------------------------------------
+167:          __NR_prctl 1s 0m
+-----------------------------------------------------
+Syscall param prctl(option) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:787)
+
+-----------------------------------------------------
+139:   __NR_rt_sigreturn n/a
+-----------------------------------------------------
+-----------------------------------------------------
+134:   __NR_rt_sigaction 4s 4m
+-----------------------------------------------------
+Syscall param rt_sigaction(signum) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:795)
+
+Syscall param rt_sigaction(act) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:795)
+
+Syscall param rt_sigaction(oldact) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:795)
+
+Syscall param rt_sigaction(sigsetsize) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:795)
+
+Syscall param rt_sigaction(act->sa_handler) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:795)
+ Address 0x........ is 8 bytes after a block of size 8 alloc'd
+   at 0x........: malloc (vg_replace_malloc.c:...)
+   by 0x........: main (scalar.c:30)
+
+Syscall param rt_sigaction(act->sa_mask) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:795)
+ Address 0x........ is 16 bytes after a block of size 16 in arena "client"
+
+Syscall param rt_sigaction(act->sa_flags) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:795)
+ Address 0x........ is 16 bytes after a block of size 8 alloc'd
+   at 0x........: malloc (vg_replace_malloc.c:...)
+   by 0x........: main (scalar.c:30)
+
+Syscall param rt_sigaction(oldact) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:795)
+ Address 0x........ is 8 bytes after a block of size 8 alloc'd
+   at 0x........: malloc (vg_replace_malloc.c:...)
+   by 0x........: main (scalar.c:30)
+
+-----------------------------------------------------
+135: __NR_rt_sigprocmask 4s 2m
+-----------------------------------------------------
+Syscall param rt_sigprocmask(how) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:799)
+
+Syscall param rt_sigprocmask(set) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:799)
+
+Syscall param rt_sigprocmask(oldset) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:799)
+
+Syscall param rt_sigprocmask(sigsetsize) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:799)
+
+Syscall param rt_sigprocmask(set) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:799)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param rt_sigprocmask(oldset) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:799)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+136:  __NR_rt_sigpending 2s 1m
+-----------------------------------------------------
+Syscall param rt_sigpending(set) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:803)
+
+Syscall param rt_sigpending(sigsetsize) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:803)
+
+Syscall param rt_sigpending(set) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:803)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+137:__NR_rt_sigtimedwait 4s 3m
+-----------------------------------------------------
+Syscall param rt_sigtimedwait(set) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:807)
+
+Syscall param rt_sigtimedwait(info) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:807)
+
+Syscall param rt_sigtimedwait(timeout) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:807)
+
+Syscall param rt_sigtimedwait(sigsetsize) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:807)
+
+Syscall param rt_sigtimedwait(set) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:807)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param rt_sigtimedwait(info) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:807)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param rt_sigtimedwait(timeout) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:807)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+138:__NR_rt_sigqueueinfo 3s 1m
+-----------------------------------------------------
+Syscall param rt_sigqueueinfo(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:811)
+
+Syscall param rt_sigqueueinfo(sig) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:811)
+
+Syscall param rt_sigqueueinfo(uinfo) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:811)
+
+Syscall param rt_sigqueueinfo(uinfo) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:811)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+133:  __NR_rt_sigsuspend 2s 1m
+-----------------------------------------------------
+Syscall param rt_sigsuspend(mask) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:815)
+
+Syscall param rt_sigsuspend(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:815)
+
+Syscall param rt_sigsuspend(mask) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:815)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 67:        __NR_pread64 5s 1m
+-----------------------------------------------------
+Syscall param pread64(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:819)
+
+Syscall param pread64(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:819)
+
+Syscall param pread64(count) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:819)
+
+Syscall param pread64(offset) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:819)
+
+Syscall param pread64(buf) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:819)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 68:       __NR_pwrite64 5s 1m
+-----------------------------------------------------
+Syscall param pwrite64(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:823)
+
+Syscall param pwrite64(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:823)
+
+Syscall param pwrite64(count) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:823)
+
+Syscall param pwrite64(offset) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:823)
+
+Syscall param pwrite64(buf) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:823)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 17:         __NR_getcwd 2s 1m
+-----------------------------------------------------
+Syscall param getcwd(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:831)
+
+Syscall param getcwd(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:831)
+
+Syscall param getcwd(buf) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:831)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 90:         __NR_capget 2s 2m
+-----------------------------------------------------
+Syscall param capget(header) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:835)
+
+Syscall param capget(data) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:835)
+
+Syscall param capget(header) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:835)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param capget(data) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:835)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 91:         __NR_capset 2s 2m
+-----------------------------------------------------
+Syscall param capset(header) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:839)
+
+Syscall param capset(data) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:839)
+
+Syscall param capset(header) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:839)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param capset(data) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:839)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+132:    __NR_sigaltstack 2s 2m
+-----------------------------------------------------
+Syscall param sigaltstack(ss) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:853)
+
+Syscall param sigaltstack(oss) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:853)
+
+Syscall param sigaltstack(ss) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:853)
+ Address 0x........ is on thread 1's stack
+ in frame #1, created by main (scalar.c:28)
+
+Syscall param sigaltstack(oss) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:853)
+ Address 0x........ is on thread 1's stack
+ in frame #1, created by main (scalar.c:28)
+
+-----------------------------------------------------
+ 71:       __NR_sendfile 4s 1m
+-----------------------------------------------------
+Syscall param sendfile(out_fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:858)
+
+Syscall param sendfile(in_fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:858)
+
+Syscall param sendfile(offset) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:858)
+
+Syscall param sendfile(count) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:858)
+
+Syscall param sendfile(offset) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:858)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 41:     __NR_pivot_root n/a
+-----------------------------------------------------
+-----------------------------------------------------
+232:        __NR_mincore 3s 1m
+-----------------------------------------------------
+Syscall param mincore(start) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:986)
+
+Syscall param mincore(length) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:986)
+
+Syscall param mincore(vec) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:986)
+
+Syscall param mincore(vec) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:986)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+233:        __NR_madvise 3s 0m
+-----------------------------------------------------
+Syscall param madvise(start) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:990)
+
+Syscall param madvise(length) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:990)
+
+Syscall param madvise(advice) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:990)
+
+-----------------------------------------------------
+ 61:     __NR_getdents64 3s 1m
+-----------------------------------------------------
+Syscall param getdents64(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:994)
+
+Syscall param getdents64(dirp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:994)
+
+Syscall param getdents64(count) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:994)
+
+Syscall param getdents64(dirp) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:994)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+222:                 222 ni
+-----------------------------------------------------
+-----------------------------------------------------
+223:                 223 ni
+-----------------------------------------------------
+-----------------------------------------------------
+178:         __NR_gettid n/a
+-----------------------------------------------------
+-----------------------------------------------------
+213:      __NR_readahead n/a
+-----------------------------------------------------
+-----------------------------------------------------
+  5:       __NR_setxattr 5s 3m
+-----------------------------------------------------
+Syscall param setxattr(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1031)
+
+Syscall param setxattr(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1031)
+
+Syscall param setxattr(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1031)
+
+Syscall param setxattr(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1031)
+
+Syscall param setxattr(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1031)
+
+Syscall param setxattr(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1031)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param setxattr(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1031)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param setxattr(value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1031)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+  6:      __NR_lsetxattr 5s 3m
+-----------------------------------------------------
+Syscall param lsetxattr(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1035)
+
+Syscall param lsetxattr(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1035)
+
+Syscall param lsetxattr(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1035)
+
+Syscall param lsetxattr(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1035)
+
+Syscall param lsetxattr(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1035)
+
+Syscall param lsetxattr(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1035)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param lsetxattr(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1035)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param lsetxattr(value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1035)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+  7:      __NR_fsetxattr 5s 2m
+-----------------------------------------------------
+Syscall param fsetxattr(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1039)
+
+Syscall param fsetxattr(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1039)
+
+Syscall param fsetxattr(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1039)
+
+Syscall param fsetxattr(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1039)
+
+Syscall param fsetxattr(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1039)
+
+Syscall param fsetxattr(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1039)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param fsetxattr(value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1039)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+  8:       __NR_getxattr 4s 3m
+-----------------------------------------------------
+Syscall param getxattr(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1043)
+
+Syscall param getxattr(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1043)
+
+Syscall param getxattr(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1043)
+
+Syscall param getxattr(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1043)
+
+Syscall param getxattr(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1043)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param getxattr(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1043)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param getxattr(value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1043)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+  9:      __NR_lgetxattr 4s 3m
+-----------------------------------------------------
+Syscall param lgetxattr(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1047)
+
+Syscall param lgetxattr(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1047)
+
+Syscall param lgetxattr(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1047)
+
+Syscall param lgetxattr(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1047)
+
+Syscall param lgetxattr(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1047)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param lgetxattr(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1047)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param lgetxattr(value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1047)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 10:      __NR_fgetxattr 4s 2m
+-----------------------------------------------------
+Syscall param fgetxattr(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1051)
+
+Syscall param fgetxattr(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1051)
+
+Syscall param fgetxattr(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1051)
+
+Syscall param fgetxattr(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1051)
+
+Syscall param fgetxattr(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1051)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param fgetxattr(value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1051)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 11:      __NR_listxattr 3s 2m
+-----------------------------------------------------
+Syscall param listxattr(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1055)
+
+Syscall param listxattr(list) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1055)
+
+Syscall param listxattr(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1055)
+
+Syscall param listxattr(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1055)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param listxattr(list) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1055)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 12:     __NR_llistxattr 3s 2m
+-----------------------------------------------------
+Syscall param llistxattr(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1059)
+
+Syscall param llistxattr(list) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1059)
+
+Syscall param llistxattr(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1059)
+
+Syscall param llistxattr(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1059)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param llistxattr(list) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1059)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 13:     __NR_flistxattr 3s 1m
+-----------------------------------------------------
+Syscall param flistxattr(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1063)
+
+Syscall param flistxattr(list) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1063)
+
+Syscall param flistxattr(size) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1063)
+
+Syscall param flistxattr(list) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1063)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 14:    __NR_removexattr 2s 2m
+-----------------------------------------------------
+Syscall param removexattr(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1067)
+
+Syscall param removexattr(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1067)
+
+Syscall param removexattr(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1067)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param removexattr(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1067)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 15:   __NR_lremovexattr 2s 2m
+-----------------------------------------------------
+Syscall param lremovexattr(path) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1071)
+
+Syscall param lremovexattr(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1071)
+
+Syscall param lremovexattr(path) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1071)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param lremovexattr(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1071)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 16:   __NR_fremovexattr 2s 1m
+-----------------------------------------------------
+Syscall param fremovexattr(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1075)
+
+Syscall param fremovexattr(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1075)
+
+Syscall param fremovexattr(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1075)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+130:          __NR_tkill n/a
+-----------------------------------------------------
+-----------------------------------------------------
+ 98:          __NR_futex 4s 2m
+-----------------------------------------------------
+Syscall param futex(futex) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1091)
+
+Syscall param futex(op) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1091)
+
+Syscall param futex(val) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1091)
+
+Syscall param futex(utime) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1091)
+
+Syscall param futex(futex) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1091)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param futex(timeout) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1091)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+122:__NR_sched_setaffinity 3s 1m
+-----------------------------------------------------
+Syscall param sched_setaffinity(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1095)
+
+Syscall param sched_setaffinity(len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1095)
+
+Syscall param sched_setaffinity(mask) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1095)
+
+Syscall param sched_setaffinity(mask) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1095)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+123:__NR_sched_getaffinity 3s 1m
+-----------------------------------------------------
+Syscall param sched_getaffinity(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1099)
+
+Syscall param sched_getaffinity(len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1099)
+
+Syscall param sched_getaffinity(mask) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1099)
+
+Syscall param sched_getaffinity(mask) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1099)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+  0:       __NR_io_setup 2s 1m
+-----------------------------------------------------
+Syscall param io_setup(nr_events) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1111)
+
+Syscall param io_setup(ctxp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1111)
+
+Syscall param io_setup(ctxp) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1111)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+  1:     __NR_io_destroy 1s 0m
+-----------------------------------------------------
+Syscall param io_destroy(ctx) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1124)
+
+-----------------------------------------------------
+  4:   __NR_io_getevents 5s 2m
+-----------------------------------------------------
+Syscall param io_getevents(ctx_id) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1129)
+
+Syscall param io_getevents(min_nr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1129)
+
+Syscall param io_getevents(nr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1129)
+
+Syscall param io_getevents(events) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1129)
+
+Syscall param io_getevents(timeout) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1129)
+
+Syscall param io_getevents(events) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1129)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param io_getevents(timeout) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1129)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+  2:      __NR_io_submit 3s 1m
+-----------------------------------------------------
+Syscall param io_submit(ctx_id) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1133)
+
+Syscall param io_submit(nr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1133)
+
+Syscall param io_submit(iocbpp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1133)
+
+Syscall param io_submit(iocbpp) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1133)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+  3:      __NR_io_cancel 3s 2m
+-----------------------------------------------------
+Syscall param io_cancel(ctx_id) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1137)
+
+Syscall param io_cancel(iocb) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1137)
+
+Syscall param io_cancel(result) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1137)
+
+Syscall param io_cancel(iocb) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1137)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param io_cancel(result) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1137)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+223:      __NR_fadvise64 n/a
+-----------------------------------------------------
+-----------------------------------------------------
+251:                 251 ni
+-----------------------------------------------------
+WARNING: unhandled loongarch64-linux syscall: 251
+You may be able to write your own handler.
+Read the file README_MISSING_SYSCALL_OR_IOCTL.
+Nevertheless we consider this a bug.  Please report
+it at http://valgrind.org/support/bug_reports.html.
+-----------------------------------------------------
+ 94:     __NR_exit_group other
+-----------------------------------------------------
+-----------------------------------------------------
+ 18: __NR_lookup_dcookie 4s 1m
+-----------------------------------------------------
+Syscall param lookup_dcookie(cookie) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1153)
+
+Syscall param lookup_dcookie(buf) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1153)
+
+Syscall param lookup_dcookie(len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1153)
+
+-----------------------------------------------------
+ 21:      __NR_epoll_ctl 4s 1m
+-----------------------------------------------------
+Syscall param epoll_ctl(epfd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1161)
+
+Syscall param epoll_ctl(op) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1161)
+
+Syscall param epoll_ctl(fd) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1161)
+
+Syscall param epoll_ctl(event) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1161)
+
+Syscall param epoll_ctl(event) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1161)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+234:__NR_remap_file_pages n/a
+-----------------------------------------------------
+-----------------------------------------------------
+ 96:__NR_set_tid_address 1s 0m
+-----------------------------------------------------
+Syscall param set_tid_address(tidptr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1173)
+
+-----------------------------------------------------
+107:   __NR_timer_create 3s 2m
+-----------------------------------------------------
+Syscall param timer_create(clockid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1177)
+
+Syscall param timer_create(evp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1177)
+
+Syscall param timer_create(timerid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1177)
+
+Syscall param timer_create(evp.sigev_value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1177)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param timer_create(evp.sigev_signo) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1177)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param timer_create(evp.sigev_notify) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1177)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param timer_create(timerid) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1177)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+110:  __NR_timer_settime 4s 2m
+-----------------------------------------------------
+Syscall param timer_settime(timerid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1181)
+
+Syscall param timer_settime(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1181)
+
+Syscall param timer_settime(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1181)
+
+Syscall param timer_settime(ovalue) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1181)
+
+Syscall param timer_settime(value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1181)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param timer_settime(ovalue) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1181)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+108:  __NR_timer_gettime 2s 1m
+-----------------------------------------------------
+Syscall param timer_gettime(timerid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1185)
+
+Syscall param timer_gettime(value) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1185)
+
+Syscall param timer_gettime(value) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1185)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+109:__NR_timer_getoverrun 1s 0m
+-----------------------------------------------------
+Syscall param timer_getoverrun(timerid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1189)
+
+-----------------------------------------------------
+111:   __NR_timer_delete 1s 0m
+-----------------------------------------------------
+Syscall param timer_delete(timerid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1193)
+
+-----------------------------------------------------
+112:  __NR_clock_settime 2s 1m
+-----------------------------------------------------
+Syscall param clock_settime(clk_id) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1197)
+
+Syscall param clock_settime(tp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1197)
+
+Syscall param clock_settime(tp) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1197)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+113:  __NR_clock_gettime 2s 1m
+-----------------------------------------------------
+Syscall param clock_gettime(clk_id) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1201)
+
+Syscall param clock_gettime(tp) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1201)
+
+Syscall param clock_gettime(tp) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1201)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+114:   __NR_clock_getres 2s 1m
+-----------------------------------------------------
+Syscall param clock_getres(clk_id) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1205)
+
+Syscall param clock_getres(res) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1205)
+
+Syscall param clock_getres(res) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1205)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+115:__NR_clock_nanosleep n/a
+-----------------------------------------------------
+-----------------------------------------------------
+131:         __NR_tgkill n/a
+-----------------------------------------------------
+-----------------------------------------------------
+235:          __NR_mbind n/a
+-----------------------------------------------------
+-----------------------------------------------------
+236:  __NR_get_mempolicy n/a
+-----------------------------------------------------
+-----------------------------------------------------
+237:  __NR_set_mempolicy n/a
+-----------------------------------------------------
+-----------------------------------------------------
+180:        __NR_mq_open 4s 3m
+-----------------------------------------------------
+Syscall param mq_open(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1249)
+
+Syscall param mq_open(oflag) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1249)
+
+Syscall param mq_open(mode) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1249)
+
+Syscall param mq_open(attr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1249)
+
+Syscall param mq_open(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1249)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param mq_open(attr->mq_maxmsg) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1249)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param mq_open(attr->mq_msgsize) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1249)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+181:      __NR_mq_unlink 1s 1m
+-----------------------------------------------------
+Syscall param mq_unlink(name) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1253)
+
+Syscall param mq_unlink(name) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1253)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+182:   __NR_mq_timedsend 5s 2m
+-----------------------------------------------------
+Syscall param mq_timedsend(mqdes) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1257)
+
+Syscall param mq_timedsend(msg_ptr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1257)
+
+Syscall param mq_timedsend(msg_len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1257)
+
+Syscall param mq_timedsend(msg_prio) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1257)
+
+Syscall param mq_timedsend(abs_timeout) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1257)
+
+Syscall param mq_timedsend(msg_ptr) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1257)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param mq_timedsend(abs_timeout) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1257)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+183:__NR_mq_timedreceive 5s 3m
+-----------------------------------------------------
+Syscall param mq_timedreceive(mqdes) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1261)
+
+Syscall param mq_timedreceive(msg_ptr) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1261)
+
+Syscall param mq_timedreceive(msg_len) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1261)
+
+Syscall param mq_timedreceive(msg_prio) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1261)
+
+Syscall param mq_timedreceive(abs_timeout) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1261)
+
+Syscall param mq_timedreceive(msg_ptr) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1261)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param mq_timedreceive(msg_prio) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1261)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param mq_timedreceive(abs_timeout) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1261)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+184:      __NR_mq_notify 2s 1m
+-----------------------------------------------------
+Syscall param mq_notify(mqdes) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1265)
+
+Syscall param mq_notify(notification) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1265)
+
+Syscall param mq_notify(notification) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1265)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+185:  __NR_mq_getsetattr 3s 2m
+-----------------------------------------------------
+Syscall param mq_getsetattr(mqdes) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1269)
+
+Syscall param mq_getsetattr(mqstat) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1269)
+
+Syscall param mq_getsetattr(omqstat) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1269)
+
+Syscall param mq_getsetattr(mqstat->mq_flags) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1269)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param mq_getsetattr(omqstat) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1269)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+ 20:  __NR_epoll_create1 1s 0m
+-----------------------------------------------------
+Syscall param epoll_create1(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1277)
+
+-----------------------------------------------------
+270:__NR_process_vm_readv 6s 2m
+-----------------------------------------------------
+Syscall param process_vm_readv(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1281)
+
+Syscall param process_vm_readv(lvec) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1281)
+
+Syscall param process_vm_readv(liovcnt) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1281)
+
+Syscall param process_vm_readv(rvec) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1281)
+
+Syscall param process_vm_readv(riovcnt) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1281)
+
+Syscall param process_vm_readv(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1281)
+
+Syscall param process_vm_readv(lvec) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1281)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param process_vm_readv(rvec) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1281)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+271:__NR_process_vm_writev 6s 2m
+-----------------------------------------------------
+Syscall param process_vm_writev(pid) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1285)
+
+Syscall param process_vm_writev(lvec) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1285)
+
+Syscall param process_vm_writev(liovcnt) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1285)
+
+Syscall param process_vm_writev(rvec) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1285)
+
+Syscall param process_vm_writev(riovcnt) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1285)
+
+Syscall param process_vm_writev(flags) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1285)
+
+Syscall param process_vm_writev(lvec) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1285)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+Syscall param process_vm_writev(rvec) points to unaddressable byte(s)
+   ...
+   by 0x........: main (scalar.c:1285)
+ Address 0x........ is not stack'd, malloc'd or (recently) free'd
+
+-----------------------------------------------------
+9999:                9999 1e
+-----------------------------------------------------
+WARNING: unhandled loongarch64-linux syscall: 9999
+You may be able to write your own handler.
+Read the file README_MISSING_SYSCALL_OR_IOCTL.
+Nevertheless we consider this a bug.  Please report
+it at http://valgrind.org/support/bug_reports.html.
+-----------------------------------------------------
+ 93:           __NR_exit 1s 0m
+-----------------------------------------------------
+Syscall param exit(status) contains uninitialised byte(s)
+   ...
+   by 0x........: main (scalar.c:1293)
+
diff --git a/memcheck/tests/loongarch64-linux/scalar.vgtest b/memcheck/tests/loongarch64-linux/scalar.vgtest
new file mode 100644
index 0000000..53e87e8
--- /dev/null
+++ b/memcheck/tests/loongarch64-linux/scalar.vgtest
@@ -0,0 +1,5 @@
+prog: scalar
+# Do not run under root
+prereq: [ `id -u` -ne 0 ]
+vgopts: -q --error-limit=no
+args: < scalar.c
diff --git a/none/tests/Makefile.am b/none/tests/Makefile.am
index 59be79e..4b3a0a6 100644
--- a/none/tests/Makefile.am
+++ b/none/tests/Makefile.am
@@ -35,7 +35,9 @@ endif
 if VGCONF_ARCHS_INCLUDE_NANOMIPS
 SUBDIRS += nanomips
 endif
-
+if VGCONF_ARCHS_INCLUDE_LOONGARCH64
+SUBDIRS += loongarch64
+endif
 
 # OS-specific tests
 if VGCONF_OS_IS_LINUX
@@ -75,8 +77,9 @@ SUBDIRS += x86-freebsd
 endif
 
 DIST_SUBDIRS = x86 amd64 ppc32 ppc64 arm arm64 s390x mips32 mips64 nanomips \
-               linux darwin solaris freebsd amd64-linux x86-linux amd64-darwin \
-               x86-darwin amd64-solaris x86-solaris x86-freebsd scripts .
+               loongarch64 linux darwin solaris freebsd amd64-linux x86-linux \
+					amd64-darwin x86-darwin amd64-solaris x86-solaris x86-freebsd \
+					scripts .
 
 dist_noinst_SCRIPTS = \
 	filter_cmdline0 \
diff --git a/none/tests/allexec_prepare_prereq b/none/tests/allexec_prepare_prereq
index a541f42..49c45c7 100755
--- a/none/tests/allexec_prepare_prereq
+++ b/none/tests/allexec_prepare_prereq
@@ -28,11 +28,12 @@ pair()
 }
 
 
-pair x86                        amd64
-pair ppc32                      ppc64
-pair s390x_unexisting_in_32bits s390x
-pair arm                        arm64
-pair mips32                     mips64
-pair nanomips                   nanoMIPS_unexisting_in_64bits
+pair x86                            amd64
+pair ppc32                          ppc64
+pair s390x_unexisting_in_32bits     s390x
+pair arm                            arm64
+pair mips32                         mips64
+pair nanomips                       nanoMIPS_unexisting_in_64bits
+pair loongarch_unexisting_in_32bits loongarch64
 
 exit 0
diff --git a/none/tests/loongarch64/Makefile.am b/none/tests/loongarch64/Makefile.am
new file mode 100644
index 0000000..01ec3e6
--- /dev/null
+++ b/none/tests/loongarch64/Makefile.am
@@ -0,0 +1,43 @@
+
+include $(top_srcdir)/Makefile.tool-tests.am
+
+dist_noinst_SCRIPTS = filter_stderr
+
+EXTRA_DIST = \
+	atomic.stdout.exp atomic.stderr.exp atomic.vgtest \
+	branch.stdout.exp branch.stderr.exp branch.vgtest \
+	cpucfg.stdout.exp cpucfg.stderr.exp cpucfg.vgtest \
+	fault.stdout.exp fault.stderr.exp fault.vgtest \
+	fault_fp.stdout.exp fault_fp.stderr.exp fault_fp.vgtest \
+	float.stdout.exp float.stderr.exp float.vgtest \
+	integer.stdout.exp integer.stderr.exp integer.vgtest \
+	llsc.stdout.exp llsc.stderr.exp llsc.vgtest \
+	memory.stdout.exp memory.stderr.exp memory.vgtest \
+	move.stdout.exp move.stderr.exp move.vgtest \
+	pc.stdout.exp pc.stderr.exp pc.vgtest \
+	special.stdout.exp special.stderr.exp special.vgtest \
+	vector128.stdout.exp vector128.stderr.exp vector128.vgtest \
+	vector256.stdout.exp vector256.stderr.exp vector256.vgtest
+
+check_PROGRAMS = \
+	allexec \
+	atomic \
+	branch \
+	cpucfg \
+	fault \
+	fault_fp \
+	float \
+	integer \
+	llsc \
+	memory \
+	move \
+	pc \
+	special \
+	vector128 \
+	vector256
+
+AM_CFLAGS    += @FLAG_M64@
+AM_CXXFLAGS  += @FLAG_M64@
+AM_CCASFLAGS += @FLAG_M64@
+
+allexec_CFLAGS = $(AM_CFLAGS) @FLAG_W_NO_NONNULL@
diff --git a/none/tests/loongarch64/allexec.c b/none/tests/loongarch64/allexec.c
new file mode 120000
index 0000000..6d6a9cf
--- /dev/null
+++ b/none/tests/loongarch64/allexec.c
@@ -0,0 +1 @@
+../allexec.c
\ No newline at end of file
diff --git a/none/tests/loongarch64/atomic.c b/none/tests/loongarch64/atomic.c
new file mode 100644
index 0000000..916d5f7
--- /dev/null
+++ b/none/tests/loongarch64/atomic.c
@@ -0,0 +1,75 @@
+#include <stdio.h>
+
+#define TESTINST_AM(insn, res, val, addr)  \
+   {                                       \
+      __asm__ __volatile__(                \
+         "move $t1, %1        \n\t"        \
+         "move $t2, %2        \n\t"        \
+         insn " $t0, $t1, $t2 \n\t"        \
+         "move %0, $t0        \n\t"        \
+         : "=r" (res)                      \
+         : "r" (val), "r" (addr)           \
+         : "$t0", "$t1", "$t2", "memory"); \
+   }
+
+#define TESTINST_AM_4(insn, v)                      \
+   {                                                \
+      printf(#insn ".w ::\n");                      \
+      TESTINST_AM(#insn ".w", res_i, v, &val_i);    \
+      printf("old: %d new: %d\n", res_i, val_i);    \
+                                                    \
+      printf(#insn "_db.w ::\n");                   \
+      TESTINST_AM(#insn "_db.w", res_i, v, &val_i); \
+      printf("old: %d new: %d\n", res_i, val_i);    \
+                                                    \
+      printf(#insn ".d ::\n");                      \
+      TESTINST_AM(#insn ".d", res_l, v, &val_l);    \
+      printf("old: %ld new: %ld\n", res_l, val_l);  \
+                                                    \
+      printf(#insn "_db.d ::\n");                   \
+      TESTINST_AM(#insn "_db.d", res_l, v, &val_l); \
+      printf("old: %ld new: %ld\n", res_l, val_l);  \
+   }
+
+#define TESTINST_AM_U_4(insn, v)                     \
+   {                                                 \
+      printf(#insn ".wu ::\n");                      \
+      TESTINST_AM(#insn ".wu", res_i, v, &val_i);    \
+      printf("old: %u new: %u\n", res_i, val_i);     \
+                                                     \
+      printf(#insn "_db.wu ::\n");                   \
+      TESTINST_AM(#insn "_db.wu", res_i, v, &val_i); \
+      printf("old: %u new: %u\n", res_i, val_i);     \
+                                                     \
+      printf(#insn ".du ::\n");                      \
+      TESTINST_AM(#insn ".du", res_l, v, &val_l);    \
+      printf("old: %lu new: %lu\n", res_l, val_l);   \
+                                                     \
+      printf(#insn "_db.du ::\n");                   \
+      TESTINST_AM(#insn "_db.du", res_l, v, &val_l); \
+      printf("old: %lu new: %lu\n", res_l, val_l);   \
+   }
+
+void test(void)
+{
+   int res_i;
+   long res_l;
+   int val_i = 1;
+   long val_l = 1;
+
+   TESTINST_AM_4(amswap, 2);
+   TESTINST_AM_4(amadd, 5);
+   TESTINST_AM_4(amand, 3);
+   TESTINST_AM_4(amor, 8);
+   TESTINST_AM_4(amxor, 4);
+   TESTINST_AM_4(ammax, 16);
+   TESTINST_AM_4(ammin, -1);
+   TESTINST_AM_U_4(ammax, 9);
+   TESTINST_AM_U_4(ammin, 6);
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/atomic.stderr.exp b/none/tests/loongarch64/atomic.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/atomic.stdout.exp b/none/tests/loongarch64/atomic.stdout.exp
new file mode 100644
index 0000000..7eab9eb
--- /dev/null
+++ b/none/tests/loongarch64/atomic.stdout.exp
@@ -0,0 +1,72 @@
+amswap.w ::
+old: 1 new: 2
+amswap_db.w ::
+old: 2 new: 2
+amswap.d ::
+old: 1 new: 2
+amswap_db.d ::
+old: 2 new: 2
+amadd.w ::
+old: 2 new: 7
+amadd_db.w ::
+old: 7 new: 12
+amadd.d ::
+old: 2 new: 7
+amadd_db.d ::
+old: 7 new: 12
+amand.w ::
+old: 12 new: 0
+amand_db.w ::
+old: 0 new: 0
+amand.d ::
+old: 12 new: 0
+amand_db.d ::
+old: 0 new: 0
+amor.w ::
+old: 0 new: 8
+amor_db.w ::
+old: 8 new: 8
+amor.d ::
+old: 0 new: 8
+amor_db.d ::
+old: 8 new: 8
+amxor.w ::
+old: 8 new: 12
+amxor_db.w ::
+old: 12 new: 8
+amxor.d ::
+old: 8 new: 12
+amxor_db.d ::
+old: 12 new: 8
+ammax.w ::
+old: 8 new: 16
+ammax_db.w ::
+old: 16 new: 16
+ammax.d ::
+old: 8 new: 16
+ammax_db.d ::
+old: 16 new: 16
+ammin.w ::
+old: 16 new: -1
+ammin_db.w ::
+old: -1 new: -1
+ammin.d ::
+old: 16 new: -1
+ammin_db.d ::
+old: -1 new: -1
+ammax.wu ::
+old: 4294967295 new: 4294967295
+ammax_db.wu ::
+old: 4294967295 new: 4294967295
+ammax.du ::
+old: 18446744073709551615 new: 18446744073709551615
+ammax_db.du ::
+old: 18446744073709551615 new: 18446744073709551615
+ammin.wu ::
+old: 4294967295 new: 6
+ammin_db.wu ::
+old: 6 new: 6
+ammin.du ::
+old: 18446744073709551615 new: 6
+ammin_db.du ::
+old: 6 new: 6
diff --git a/none/tests/loongarch64/atomic.vgtest b/none/tests/loongarch64/atomic.vgtest
new file mode 100644
index 0000000..8fe5ce5
--- /dev/null
+++ b/none/tests/loongarch64/atomic.vgtest
@@ -0,0 +1,3 @@
+prereq: ../../../tests/loongarch64_features lam
+prog: atomic
+vgopts: -q
diff --git a/none/tests/loongarch64/branch.c b/none/tests/loongarch64/branch.c
new file mode 100644
index 0000000..e702d3f
--- /dev/null
+++ b/none/tests/loongarch64/branch.c
@@ -0,0 +1,148 @@
+#include <stdio.h>
+
+#define TESTINST_B_RR(insn, val1, val2)       \
+   {                                          \
+      int res;                                \
+      unsigned long v1 = (unsigned long)val1; \
+      unsigned long v2 = (unsigned long)val2; \
+      __asm__ __volatile__(                   \
+             insn " %1, %2, 1f   \n\t"        \
+         "   move %0, $zero      \n\t"        \
+         "   b 2f                \n\t"        \
+         "1:                     \n\t"        \
+         "   addi.w %0, $zero, 1 \n\t"        \
+         "2:                     \n\t"        \
+         : "=r" (res)                         \
+         : "r" (v1), "r" (v2)                 \
+         : "memory");                         \
+      printf("%s::\n", insn);                 \
+      printf("input: %#lx %#lx\n", v1, v2);   \
+      printf("output: %d\n", res);            \
+   }
+
+#define TESTINST_B_R(insn, val)             \
+   {                                        \
+      int res;                              \
+      unsigned long v = (unsigned long)val; \
+      __asm__ __volatile__(                 \
+             insn " %1, 1f       \n\t"      \
+         "   move %0, $zero      \n\t"      \
+         "   b 2f                \n\t"      \
+         "1:                     \n\t"      \
+         "   addi.w %0, $zero, 1 \n\t"      \
+         "2:                     \n\t"      \
+         : "=r" (res)                       \
+         : "r" (v)                          \
+         : "memory");                       \
+      printf("%s::\n", insn);               \
+      printf("input: %#lx\n", v);           \
+      printf("output: %d\n", res);          \
+   }
+
+#define TESTINST_B_C(insn, val)             \
+   {                                        \
+      int res;                              \
+      unsigned long v = (unsigned long)val; \
+      __asm__ __volatile__(                 \
+         "   movgr2cf $fcc0, %1  \n\t"      \
+             insn " $fcc0, 1f    \n\t"      \
+         "   move %0, $zero      \n\t"      \
+         "   b 2f                \n\t"      \
+         "1:                     \n\t"      \
+         "   addi.w %0, $zero, 1 \n\t"      \
+         "2:                     \n\t"      \
+         : "=r" (res)                       \
+         : "r" (v)                          \
+         : "$fcc0", "memory");              \
+      printf("%s::\n", insn);               \
+      printf("input: %#lx\n", v);           \
+      printf("output: %d\n", res);          \
+   }
+
+#define TESTINST_BL()               \
+   {                                \
+      int res;                      \
+      __asm__ __volatile__(         \
+         "   move %0, $zero   \n\t" \
+         "   bl 1f            \n\t" \
+         "   addi.w %0, %0, 1 \n\t" \
+         "   b  2f            \n\t" \
+         "1:                  \n\t" \
+         "   addi.w %0, %0, 1 \n\t" \
+         "   jr $ra \n\t"           \
+         "2:        \n\t"           \
+         : "=r" (res)               \
+         :                          \
+         : "$ra", "memory");        \
+      printf("bl::\n");             \
+      printf("res: %d\n", res);     \
+   }
+
+#define TESTINST_JIRL(insn)                \
+   {                                       \
+      unsigned long addr1, addr2;          \
+      __asm__ __volatile__(                \
+         "   pcaddi $t0, 2   \n\t"         \
+         "   jirl %0, $t0, 0 \n\t"         \
+         "   pcaddi %1, 0    \n\t"         \
+         : "=r" (addr1), "=r" (addr2)      \
+         :                                 \
+         : "$t0", "memory");               \
+      printf("jirl::\n");                  \
+      printf("res: %d\n", addr1 == addr2); \
+   }
+
+void test(void)
+{
+   /* ---------------- beq rj, rd, offs16 ---------------- */
+   TESTINST_B_RR("beq", 1, 2);
+   TESTINST_B_RR("beq", 1, 1);
+
+   /* ---------------- bne rj, rd, offs16 ---------------- */
+   TESTINST_B_RR("bne", 1, 2);
+   TESTINST_B_RR("bne", 1, 1);
+
+   /* ---------------- blt rj, rd, offs16 ---------------- */
+   TESTINST_B_RR("blt", 1, 2);
+   TESTINST_B_RR("blt", 1, 0);
+
+   /* ---------------- bge rj, rd, offs16 ---------------- */
+   TESTINST_B_RR("bge", 1, 2);
+   TESTINST_B_RR("bge", 0, 0);
+
+   /* ---------------- bltu rj, rd, offs16 ---------------- */
+   TESTINST_B_RR("bltu", -1, 2);
+   TESTINST_B_RR("bltu", 0, 1);
+
+   /* ---------------- bgeu rj, rd, offs16 ---------------- */
+   TESTINST_B_RR("bgeu", -1, 2);
+   TESTINST_B_RR("bgeu", 0, 1);
+
+   /* ---------------- beqz rj, offs21 ---------------- */
+   TESTINST_B_R("beqz", 0);
+   TESTINST_B_R("beqz", -1);
+
+   /* ---------------- bnez rj, offs21 ---------------- */
+   TESTINST_B_R("bnez", 0);
+   TESTINST_B_R("bnez", -1);
+
+   /* ---------------- bceqz cj, offs21 ---------------- */
+   TESTINST_B_C("bceqz", 0);
+   TESTINST_B_C("bceqz", 1);
+
+   /* ---------------- bcnez cj, offs21 ---------------- */
+   TESTINST_B_C("bcnez", 0);
+   TESTINST_B_C("bcnez", 1);
+
+   /* ---------------- bl offs26 ---------------- */
+   TESTINST_BL();
+
+   /* ---------------- jirl rd, rj, offs16 ---------------- */
+   TESTINST_JIRL();
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/branch.stderr.exp b/none/tests/loongarch64/branch.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/branch.stdout.exp b/none/tests/loongarch64/branch.stdout.exp
new file mode 100644
index 0000000..0a32d6a
--- /dev/null
+++ b/none/tests/loongarch64/branch.stdout.exp
@@ -0,0 +1,64 @@
+beq::
+input: 0x1 0x2
+output: 0
+beq::
+input: 0x1 0x1
+output: 1
+bne::
+input: 0x1 0x2
+output: 1
+bne::
+input: 0x1 0x1
+output: 0
+blt::
+input: 0x1 0x2
+output: 1
+blt::
+input: 0x1 0
+output: 0
+bge::
+input: 0x1 0x2
+output: 0
+bge::
+input: 0 0
+output: 1
+bltu::
+input: 0xffffffffffffffff 0x2
+output: 0
+bltu::
+input: 0 0x1
+output: 1
+bgeu::
+input: 0xffffffffffffffff 0x2
+output: 1
+bgeu::
+input: 0 0x1
+output: 0
+beqz::
+input: 0
+output: 1
+beqz::
+input: 0xffffffffffffffff
+output: 0
+bnez::
+input: 0
+output: 0
+bnez::
+input: 0xffffffffffffffff
+output: 1
+bceqz::
+input: 0
+output: 1
+bceqz::
+input: 0x1
+output: 0
+bcnez::
+input: 0
+output: 0
+bcnez::
+input: 0x1
+output: 1
+bl::
+res: 2
+jirl::
+res: 1
diff --git a/none/tests/loongarch64/branch.vgtest b/none/tests/loongarch64/branch.vgtest
new file mode 100644
index 0000000..535c055
--- /dev/null
+++ b/none/tests/loongarch64/branch.vgtest
@@ -0,0 +1,2 @@
+prog: branch
+vgopts: -q
diff --git a/none/tests/loongarch64/cpucfg.c b/none/tests/loongarch64/cpucfg.c
new file mode 100644
index 0000000..f5d0570
--- /dev/null
+++ b/none/tests/loongarch64/cpucfg.c
@@ -0,0 +1,24 @@
+#include <stdio.h>
+
+void test(int reg)
+{
+    int res;
+    __asm__ __volatile__(
+        "cpucfg %0, %1 \n\t"
+        : "=r" (res)
+        : "r" (reg)
+        : "memory");
+    printf("cpucfg ::\n");
+    printf("input: %x\n", (unsigned)reg);
+    printf("output: %x\n", (unsigned)res);
+}
+
+int main(void)
+{
+    int i;
+
+    for (i = 0; i < 24; i++)
+        test(i);
+
+    return 0;
+}
diff --git a/none/tests/loongarch64/cpucfg.stderr.exp b/none/tests/loongarch64/cpucfg.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/cpucfg.stdout.exp b/none/tests/loongarch64/cpucfg.stdout.exp
new file mode 100644
index 0000000..49e0ba7
--- /dev/null
+++ b/none/tests/loongarch64/cpucfg.stdout.exp
@@ -0,0 +1,72 @@
+cpucfg ::
+input: 0
+output: 14c010
+cpucfg ::
+input: 1
+output: 3f2f2fe
+cpucfg ::
+input: 2
+output: 7ccfc7
+cpucfg ::
+input: 3
+output: fcff
+cpucfg ::
+input: 4
+output: 5f5e100
+cpucfg ::
+input: 5
+output: 10001
+cpucfg ::
+input: 6
+output: 7f33
+cpucfg ::
+input: 7
+output: 0
+cpucfg ::
+input: 8
+output: 0
+cpucfg ::
+input: 9
+output: 0
+cpucfg ::
+input: a
+output: 0
+cpucfg ::
+input: b
+output: 0
+cpucfg ::
+input: c
+output: 0
+cpucfg ::
+input: d
+output: 0
+cpucfg ::
+input: e
+output: 0
+cpucfg ::
+input: f
+output: 0
+cpucfg ::
+input: 10
+output: 2c3d
+cpucfg ::
+input: 11
+output: 6080003
+cpucfg ::
+input: 12
+output: 6080003
+cpucfg ::
+input: 13
+output: 608000f
+cpucfg ::
+input: 14
+output: 60e000f
+cpucfg ::
+input: 15
+output: 0
+cpucfg ::
+input: 16
+output: 0
+cpucfg ::
+input: 17
+output: 0
diff --git a/none/tests/loongarch64/cpucfg.vgtest b/none/tests/loongarch64/cpucfg.vgtest
new file mode 100644
index 0000000..fea9644
--- /dev/null
+++ b/none/tests/loongarch64/cpucfg.vgtest
@@ -0,0 +1,3 @@
+prereq: ../../../tests/loongarch64_features cpucfg
+prog: cpucfg
+vgopts: -q
diff --git a/none/tests/loongarch64/fault.c b/none/tests/loongarch64/fault.c
new file mode 100644
index 0000000..2941768
--- /dev/null
+++ b/none/tests/loongarch64/fault.c
@@ -0,0 +1,234 @@
+#include <stdio.h>
+#include <stdbool.h>
+#include <signal.h>
+#include <setjmp.h>
+#include <unistd.h>
+
+#define NUM 24
+
+unsigned long mem[NUM] = {
+   0x121f1e1f0000e680, 0x0000000000010700, 0x000000030000e7dc,
+   0xffffffff0000b0d0, 0x232f2e2f2ab05fd0, 0x242c2b2b0000b6a0,
+   0x252a2e2b0000be80, 0x262d2d2a0000de10, 0x3f343f3e0000df20,
+   0x3e353d3c2ab05fe0, 0x363a3c3b0000dfd0, 0x3b373b3a00010300,
+   0x0000e680121f1e1f, 0x0001070000000000, 0x0000e7dc00000003,
+   0x0000b0d0ffffffff, 0x2ab05fd0232f2e2f, 0x0000b6a0242c2b2b,
+   0x0000be80252a2e2b, 0x0000de10262d2d2a, 0x0000df203f343f3e,
+   0x2ab05fe03e353d3c, 0x0000dfd0363a3c3b, 0x000103003b373b3a
+};
+
+long val1 = 0;
+long val2 = 0xfdecba9087654321UL;
+char *p = (char *)mem;
+
+#define TESTINST_LOAD_RRR(n, insn, addr1, addr2) \
+   void test ## n (void)                         \
+   {                                             \
+      printf("test %d\n", n);                    \
+      printf("%s ::\n", insn);                   \
+      __asm__ __volatile__(                      \
+         insn " %0, %1, %2 \n\t"                 \
+         : "=r" (val1)                           \
+         : "r" (addr1), "r" (addr2)              \
+         : "memory");                            \
+      printf("output: %ld\n", val1);             \
+   }
+
+#define TESTINST_STORE_RRR(n, insn, addr1, addr2) \
+   void test ## n (void)                          \
+   {                                              \
+      printf("test %d\n", n);                     \
+      printf("%s ::\n", insn);                    \
+      printf("input: %ld\n", val2);               \
+      __asm__ __volatile__(                       \
+         insn " %0, %1, %2 \n\t"                  \
+         :                                        \
+         : "r" (val2), "r" (addr1), "r" (addr2)   \
+         : "memory");                             \
+   }
+
+#define TESTINST_RR(n, insn, v1, v2)                  \
+   void test ## n (void)                              \
+   {                                                  \
+      printf("test %d\n", n);                         \
+      printf("%s ::\n", insn);                        \
+      printf("input: %ld %ld\n", (long)v1, (long)v2); \
+      __asm__ __volatile__(                           \
+         insn " %0, %1 \n\t"                          \
+         :                                            \
+         : "r" (v1), "r" (v2)                         \
+         : "memory");                                 \
+   }
+
+#define TESTINST_I(n, insn, imm)   \
+   void test ## n (void)           \
+   {                               \
+      printf("test %d\n", n);      \
+      printf("%s ::\n", insn);     \
+      printf("input: %d\n", imm);  \
+      __asm__ __volatile__(        \
+         insn " " #imm  " \n\t"    \
+         :                         \
+         :                         \
+         : "memory");              \
+   }
+
+static sigjmp_buf escape;
+
+static void handler(int sig, siginfo_t *si, void *uc)
+{
+   fprintf(stderr, "signal: %d\n", sig);
+   fprintf(stderr, "code: %d\n", si->si_code);
+   siglongjmp(escape, 1);
+}
+
+static inline void show(void)
+{
+   int i;
+   printf("memory block:\n");
+   for (i = 0; i < NUM; i++)
+      printf("0x%lx:\t%#018lx\n", i * sizeof(unsigned long), mem[i]);
+}
+
+TESTINST_LOAD_RRR(1,  "ldgt.b", &p[0],  &p[64]);
+TESTINST_LOAD_RRR(2,  "ldgt.b", &p[1],  &p[0] );
+TESTINST_LOAD_RRR(3,  "ldgt.h", &p[1],  &p[0] );
+TESTINST_LOAD_RRR(4,  "ldgt.h", &p[2],  &p[64]);
+TESTINST_LOAD_RRR(5,  "ldgt.h", &p[4],  &p[0] );
+TESTINST_LOAD_RRR(6,  "ldgt.w", &p[2],  &p[0] );
+TESTINST_LOAD_RRR(7,  "ldgt.w", &p[8],  &p[64]);
+TESTINST_LOAD_RRR(8,  "ldgt.w", &p[12], &p[0] );
+TESTINST_LOAD_RRR(9,  "ldgt.d", &p[4],  &p[0] );
+TESTINST_LOAD_RRR(10, "ldgt.d", &p[16], &p[64]);
+TESTINST_LOAD_RRR(11, "ldgt.d", &p[32], &p[0] );
+
+TESTINST_LOAD_RRR(12, "ldle.b", &p[64], &p[0] );
+TESTINST_LOAD_RRR(13, "ldle.b", &p[65], &p[96]);
+TESTINST_LOAD_RRR(14, "ldle.h", &p[65], &p[0] );
+TESTINST_LOAD_RRR(15, "ldle.h", &p[66], &p[0] );
+TESTINST_LOAD_RRR(16, "ldle.h", &p[68], &p[96]);
+TESTINST_LOAD_RRR(17, "ldle.w", &p[66], &p[0] );
+TESTINST_LOAD_RRR(18, "ldle.w", &p[72], &p[0] );
+TESTINST_LOAD_RRR(19, "ldle.w", &p[76], &p[96]);
+TESTINST_LOAD_RRR(20, "ldle.d", &p[68], &p[0] );
+TESTINST_LOAD_RRR(21, "ldle.d", &p[80], &p[0] );
+TESTINST_LOAD_RRR(22, "ldle.d", &p[88], &p[96]);
+
+TESTINST_STORE_RRR(23, "ldgt.b", &p[0],  &p[64]);
+TESTINST_STORE_RRR(24, "ldgt.b", &p[1],  &p[0] );
+TESTINST_STORE_RRR(25, "ldgt.h", &p[1],  &p[0] );
+TESTINST_STORE_RRR(26, "ldgt.h", &p[2],  &p[64]);
+TESTINST_STORE_RRR(27, "ldgt.h", &p[4],  &p[0] );
+TESTINST_STORE_RRR(28, "ldgt.w", &p[2],  &p[0] );
+TESTINST_STORE_RRR(29, "ldgt.w", &p[8],  &p[64]);
+TESTINST_STORE_RRR(30, "ldgt.w", &p[12], &p[0] );
+TESTINST_STORE_RRR(31, "ldgt.d", &p[4],  &p[0] );
+TESTINST_STORE_RRR(32, "ldgt.d", &p[16], &p[64]);
+TESTINST_STORE_RRR(33, "ldgt.d", &p[32], &p[0] );
+
+TESTINST_STORE_RRR(34, "ldle.b", &p[64], &p[0] );
+TESTINST_STORE_RRR(35, "ldle.b", &p[65], &p[96]);
+TESTINST_STORE_RRR(36, "ldle.h", &p[65], &p[0] );
+TESTINST_STORE_RRR(37, "ldle.h", &p[66], &p[0] );
+TESTINST_STORE_RRR(38, "ldle.h", &p[68], &p[96]);
+TESTINST_STORE_RRR(39, "ldle.w", &p[66], &p[0] );
+TESTINST_STORE_RRR(40, "ldle.w", &p[72], &p[0] );
+TESTINST_STORE_RRR(41, "ldle.w", &p[76], &p[96]);
+TESTINST_STORE_RRR(42, "ldle.d", &p[68], &p[0] );
+TESTINST_STORE_RRR(43, "ldle.d", &p[80], &p[0] );
+TESTINST_STORE_RRR(44, "ldle.d", &p[88], &p[96]);
+
+TESTINST_RR(45, "asrtle.d", 123, 456);
+TESTINST_RR(46, "asrtle.d", 789, 0);
+TESTINST_RR(47, "asrtgt.d", 123, 456);
+TESTINST_RR(48, "asrtgt.d", 789, 0);
+
+TESTINST_I(49, "break", 0);
+TESTINST_I(50, "break", 6);
+TESTINST_I(51, "break", 7);
+TESTINST_I(52, "break", 100);
+
+struct test {
+   void (*func)(void);
+   bool show;
+} tests[] = {
+   { test1,  false },
+   { test2,  false },
+   { test3,  false },
+   { test4,  false },
+   { test5,  false },
+   { test6,  false },
+   { test7,  false },
+   { test8,  false },
+   { test9,  false },
+   { test10, false },
+   { test11, true  },
+   { test12, false },
+   { test13, false },
+   { test14, false },
+   { test15, false },
+   { test16, false },
+   { test17, false },
+   { test18, false },
+   { test19, false },
+   { test20, false },
+   { test21, false },
+   { test22, true  },
+   { test23, false },
+   { test24, false },
+   { test25, false },
+   { test26, false },
+   { test27, false },
+   { test28, false },
+   { test29, false },
+   { test30, false },
+   { test31, false },
+   { test32, false },
+   { test33, true  },
+   { test34, false },
+   { test35, false },
+   { test36, false },
+   { test37, false },
+   { test38, false },
+   { test39, false },
+   { test40, false },
+   { test41, false },
+   { test42, false },
+   { test43, false },
+   { test44, true  },
+   { test45, false },
+   { test46, false },
+   { test47, false },
+   { test48, false },
+   { test49, false },
+   { test50, false },
+   { test51, false },
+   { test52, false }
+};
+
+int main(void)
+{
+   int i;
+   struct sigaction sa;
+   int sigs[] = { SIGSYS, SIGBUS, SIGFPE, SIGTRAP };
+
+   sa.sa_sigaction = handler;
+   sa.sa_flags = SA_SIGINFO;
+   sigfillset(&sa.sa_mask);
+
+   for(i = 0; i < sizeof(sigs) / sizeof(sigs[0]); i++)
+      sigaction(sigs[i], &sa, NULL);
+
+   show();
+   for(i = 0; i < sizeof(tests) / sizeof(tests[0]); i++) {
+      if (sigsetjmp(escape, 1) == 0) {
+         fprintf(stderr, "test %d\n", i + 1);
+         tests[i].func();
+         if (tests[i].show)
+            show();
+         fprintf(stderr, "no fault\n");
+      }
+   }
+
+   return 0;
+}
diff --git a/none/tests/loongarch64/fault.stderr.exp b/none/tests/loongarch64/fault.stderr.exp
new file mode 100644
index 0000000..3f56668
--- /dev/null
+++ b/none/tests/loongarch64/fault.stderr.exp
@@ -0,0 +1,138 @@
+test 1
+signal: 31
+code: 128
+test 2
+no fault
+test 3
+signal: 7
+code: 1
+test 4
+signal: 31
+code: 128
+test 5
+no fault
+test 6
+signal: 7
+code: 1
+test 7
+signal: 31
+code: 128
+test 8
+no fault
+test 9
+signal: 7
+code: 1
+test 10
+signal: 31
+code: 128
+test 11
+no fault
+test 12
+signal: 31
+code: 128
+test 13
+no fault
+test 14
+signal: 7
+code: 1
+test 15
+signal: 31
+code: 128
+test 16
+no fault
+test 17
+signal: 7
+code: 1
+test 18
+signal: 31
+code: 128
+test 19
+no fault
+test 20
+signal: 7
+code: 1
+test 21
+signal: 31
+code: 128
+test 22
+no fault
+test 23
+signal: 31
+code: 128
+test 24
+no fault
+test 25
+signal: 7
+code: 1
+test 26
+signal: 31
+code: 128
+test 27
+no fault
+test 28
+signal: 7
+code: 1
+test 29
+signal: 31
+code: 128
+test 30
+no fault
+test 31
+signal: 7
+code: 1
+test 32
+signal: 31
+code: 128
+test 33
+no fault
+test 34
+signal: 31
+code: 128
+test 35
+no fault
+test 36
+signal: 7
+code: 1
+test 37
+signal: 31
+code: 128
+test 38
+no fault
+test 39
+signal: 7
+code: 1
+test 40
+signal: 31
+code: 128
+test 41
+no fault
+test 42
+signal: 7
+code: 1
+test 43
+signal: 31
+code: 128
+test 44
+no fault
+test 45
+no fault
+test 46
+signal: 31
+code: 128
+test 47
+signal: 31
+code: 128
+test 48
+no fault
+test 49
+signal: 5
+code: 1
+test 50
+signal: 8
+code: 2
+test 51
+signal: 8
+code: 1
+test 52
+signal: 5
+code: 1
diff --git a/none/tests/loongarch64/fault.stdout.exp b/none/tests/loongarch64/fault.stdout.exp
new file mode 100644
index 0000000..d2e342d
--- /dev/null
+++ b/none/tests/loongarch64/fault.stdout.exp
@@ -0,0 +1,267 @@
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test 1
+ldgt.b ::
+test 2
+ldgt.b ::
+output: -26
+test 3
+ldgt.h ::
+test 4
+ldgt.h ::
+test 5
+ldgt.h ::
+output: 7711
+test 6
+ldgt.w ::
+test 7
+ldgt.w ::
+test 8
+ldgt.w ::
+output: 0
+test 9
+ldgt.d ::
+test 10
+ldgt.d ::
+test 11
+ldgt.d ::
+output: 2535295895347421136
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test 12
+ldle.b ::
+test 13
+ldle.b ::
+output: -33
+test 14
+ldle.h ::
+test 15
+ldle.h ::
+test 16
+ldle.h ::
+output: 16190
+test 17
+ldle.w ::
+test 18
+ldle.w ::
+test 19
+ldle.w ::
+output: 1043676476
+test 20
+ldle.d ::
+test 21
+ldle.d ::
+test 22
+ldle.d ::
+output: 4266944292251042560
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test 23
+ldgt.b ::
+input: -149539557700451551
+test 24
+ldgt.b ::
+input: -149539557700451551
+test 25
+ldgt.h ::
+input: -149539557700451551
+test 26
+ldgt.h ::
+input: -149539557700451551
+test 27
+ldgt.h ::
+input: -149539557700451551
+test 28
+ldgt.w ::
+input: -149539557700451551
+test 29
+ldgt.w ::
+input: -149539557700451551
+test 30
+ldgt.w ::
+input: -149539557700451551
+test 31
+ldgt.d ::
+input: -149539557700451551
+test 32
+ldgt.d ::
+input: -149539557700451551
+test 33
+ldgt.d ::
+input: -149539557700451551
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test 34
+ldle.b ::
+input: -149539557700451551
+test 35
+ldle.b ::
+input: -149539557700451551
+test 36
+ldle.h ::
+input: -149539557700451551
+test 37
+ldle.h ::
+input: -149539557700451551
+test 38
+ldle.h ::
+input: -149539557700451551
+test 39
+ldle.w ::
+input: -149539557700451551
+test 40
+ldle.w ::
+input: -149539557700451551
+test 41
+ldle.w ::
+input: -149539557700451551
+test 42
+ldle.d ::
+input: -149539557700451551
+test 43
+ldle.d ::
+input: -149539557700451551
+test 44
+ldle.d ::
+input: -149539557700451551
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test 45
+asrtle.d ::
+input: 123 456
+test 46
+asrtle.d ::
+input: 789 0
+test 47
+asrtgt.d ::
+input: 123 456
+test 48
+asrtgt.d ::
+input: 789 0
+test 49
+break ::
+input: 0
+test 50
+break ::
+input: 6
+test 51
+break ::
+input: 7
+test 52
+break ::
+input: 100
diff --git a/none/tests/loongarch64/fault.vgtest b/none/tests/loongarch64/fault.vgtest
new file mode 100644
index 0000000..24bf21a
--- /dev/null
+++ b/none/tests/loongarch64/fault.vgtest
@@ -0,0 +1,2 @@
+prog: fault
+vgopts: -q
diff --git a/none/tests/loongarch64/fault_fp.c b/none/tests/loongarch64/fault_fp.c
new file mode 100644
index 0000000..0d5862d
--- /dev/null
+++ b/none/tests/loongarch64/fault_fp.c
@@ -0,0 +1,163 @@
+#include <stdio.h>
+#include <stdbool.h>
+#include <signal.h>
+#include <setjmp.h>
+#include <unistd.h>
+
+#define NUM 24
+
+unsigned long mem[NUM] = {
+   0x121f1e1f0000e680, 0x0000000000010700, 0x000000030000e7dc,
+   0xffffffff0000b0d0, 0x232f2e2f2ab05fd0, 0x242c2b2b0000b6a0,
+   0x252a2e2b0000be80, 0x262d2d2a0000de10, 0x3f343f3e0000df20,
+   0x3e353d3c2ab05fe0, 0x363a3c3b0000dfd0, 0x3b373b3a00010300,
+   0x0000e680121f1e1f, 0x0001070000000000, 0x0000e7dc00000003,
+   0x0000b0d0ffffffff, 0x2ab05fd0232f2e2f, 0x0000b6a0242c2b2b,
+   0x0000be80252a2e2b, 0x0000de10262d2d2a, 0x0000df203f343f3e,
+   0x2ab05fe03e353d3c, 0x0000dfd0363a3c3b, 0x000103003b373b3a
+};
+
+long val1 = 0;
+long val2 = 0xfdecba9087654321UL;
+char *p = (char *)mem;
+
+#define TESTINST_LOAD_FRR_S(n, insn, addr1, addr2) \
+   void test ## n (void)                           \
+   {                                               \
+      printf("test %d\n", n);                      \
+      printf("%s ::\n", insn);                     \
+      __asm__ __volatile__(                        \
+         insn " %0, %1, %2 \n\t"                   \
+         : "=f" (val1)                             \
+         : "r" (addr1), "r" (addr2)                \
+         : "memory");                              \
+      printf("output: %d\n", (int)val1);           \
+   }
+
+#define TESTINST_LOAD_FRR_D(n, insn, addr1, addr2) \
+   void test ## n (void)                           \
+   {                                               \
+      printf("test %d\n", n);                      \
+      printf("%s ::\n", insn);                     \
+      __asm__ __volatile__(                        \
+         insn " %0, %1, %2 \n\t"                   \
+         : "=f" (val1)                             \
+         : "r" (addr1), "r" (addr2)                \
+         : "memory");                              \
+      printf("output: %ld\n", val1);               \
+   }
+
+#define TESTINST_STORE_FRR(n, insn, addr1, addr2) \
+   void test ## n (void)                          \
+   {                                              \
+      printf("test %d\n", n);                     \
+      printf("%s ::\n", insn);                    \
+      printf("input: %ld\n", val2);               \
+      __asm__ __volatile__(                       \
+         insn " %0, %1, %2 \n\t"                  \
+         :                                        \
+         : "f" (val2), "r" (addr1), "r" (addr2)   \
+         : "memory");                             \
+   }
+
+static sigjmp_buf escape;
+
+static void handler(int sig, siginfo_t *si, void *uc)
+{
+   fprintf(stderr, "signal: %d\n", sig);
+   fprintf(stderr, "code: %d\n", si->si_code);
+   siglongjmp(escape, 1);
+}
+
+static inline void show(void)
+{
+   int i;
+   printf("memory block:\n");
+   for (i = 0; i < NUM; i++)
+      printf("0x%lx:\t%#018lx\n", i * sizeof(unsigned long), mem[i]);
+}
+
+TESTINST_LOAD_FRR_S(1,  "fldgt.s", &p[2],  &p[0] );
+TESTINST_LOAD_FRR_S(2,  "fldgt.s", &p[8],  &p[64]);
+TESTINST_LOAD_FRR_S(3,  "fldgt.s", &p[12], &p[0] );
+TESTINST_LOAD_FRR_D(4,  "fldgt.d", &p[4],  &p[0] );
+TESTINST_LOAD_FRR_D(5,  "fldgt.d", &p[16], &p[64]);
+TESTINST_LOAD_FRR_D(6,  "fldgt.d", &p[32], &p[0] );
+
+TESTINST_LOAD_FRR_S(7,  "fldle.s", &p[66], &p[0] );
+TESTINST_LOAD_FRR_S(8,  "fldle.s", &p[72], &p[0] );
+TESTINST_LOAD_FRR_S(9,  "fldle.s", &p[76], &p[96]);
+TESTINST_LOAD_FRR_D(10, "fldle.d", &p[68], &p[0] );
+TESTINST_LOAD_FRR_D(11, "fldle.d", &p[80], &p[0] );
+TESTINST_LOAD_FRR_D(12, "fldle.d", &p[88], &p[96]);
+
+TESTINST_STORE_FRR(13, "fstgt.s", &p[2],  &p[0] );
+TESTINST_STORE_FRR(14, "fstgt.s", &p[8],  &p[64]);
+TESTINST_STORE_FRR(15, "fstgt.s", &p[12], &p[0] );
+TESTINST_STORE_FRR(16, "fstgt.d", &p[4],  &p[0] );
+TESTINST_STORE_FRR(17, "fstgt.d", &p[16], &p[64]);
+TESTINST_STORE_FRR(18, "fstgt.d", &p[32], &p[0] );
+
+TESTINST_STORE_FRR(19, "fstle.s", &p[66], &p[0] );
+TESTINST_STORE_FRR(20, "fstle.s", &p[72], &p[0] );
+TESTINST_STORE_FRR(21, "fstle.s", &p[76], &p[96]);
+TESTINST_STORE_FRR(22, "fstle.d", &p[68], &p[0] );
+TESTINST_STORE_FRR(23, "fstle.d", &p[80], &p[0] );
+TESTINST_STORE_FRR(24, "fstle.d", &p[88], &p[96]);
+
+struct test {
+   void (*func)(void);
+   bool show;
+} tests[] = {
+   { test1,  false },
+   { test2,  false },
+   { test3,  false },
+   { test4,  false },
+   { test5,  false },
+   { test6,  true  },
+   { test7,  false },
+   { test8,  false },
+   { test9,  false },
+   { test10, false },
+   { test11, false },
+   { test12, true },
+   { test13, false },
+   { test14, false },
+   { test15, false },
+   { test16, false },
+   { test17, false },
+   { test18, true  },
+   { test19, false },
+   { test20, false },
+   { test21, false },
+   { test22, false },
+   { test23, false },
+   { test24, true  }
+};
+
+int main(void)
+{
+   int i;
+   struct sigaction sa;
+   int sigs[] = { SIGSYS, SIGBUS };
+
+   sa.sa_sigaction = handler;
+   sa.sa_flags = SA_SIGINFO;
+   sigfillset(&sa.sa_mask);
+
+   for(i = 0; i < sizeof(sigs) / sizeof(sigs[0]); i++)
+      sigaction(sigs[i], &sa, NULL);
+
+   show();
+   for(i = 0; i < sizeof(tests) / sizeof(tests[0]); i++) {
+      if (sigsetjmp(escape, 1) == 0) {
+         fprintf(stderr, "test %d\n", i + 1);
+         tests[i].func();
+         if (tests[i].show)
+            show();
+         fprintf(stderr, "no fault\n");
+      }
+   }
+
+   return 0;
+}
diff --git a/none/tests/loongarch64/fault_fp.stderr.exp b/none/tests/loongarch64/fault_fp.stderr.exp
new file mode 100644
index 0000000..a983dea
--- /dev/null
+++ b/none/tests/loongarch64/fault_fp.stderr.exp
@@ -0,0 +1,64 @@
+test 1
+signal: 7
+code: 1
+test 2
+signal: 31
+code: 128
+test 3
+no fault
+test 4
+signal: 7
+code: 1
+test 5
+signal: 31
+code: 128
+test 6
+no fault
+test 7
+signal: 7
+code: 1
+test 8
+signal: 31
+code: 128
+test 9
+no fault
+test 10
+signal: 7
+code: 1
+test 11
+signal: 31
+code: 128
+test 12
+no fault
+test 13
+signal: 7
+code: 1
+test 14
+signal: 31
+code: 128
+test 15
+no fault
+test 16
+signal: 7
+code: 1
+test 17
+signal: 31
+code: 128
+test 18
+no fault
+test 19
+signal: 7
+code: 1
+test 20
+signal: 31
+code: 128
+test 21
+no fault
+test 22
+signal: 7
+code: 1
+test 23
+signal: 31
+code: 128
+test 24
+no fault
diff --git a/none/tests/loongarch64/fault_fp.stdout.exp b/none/tests/loongarch64/fault_fp.stdout.exp
new file mode 100644
index 0000000..254a123
--- /dev/null
+++ b/none/tests/loongarch64/fault_fp.stdout.exp
@@ -0,0 +1,189 @@
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test 1
+fldgt.s ::
+test 2
+fldgt.s ::
+test 3
+fldgt.s ::
+output: 0
+test 4
+fldgt.d ::
+test 5
+fldgt.d ::
+test 6
+fldgt.d ::
+output: 2535295895347421136
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test 7
+fldle.s ::
+test 8
+fldle.s ::
+test 9
+fldle.s ::
+output: 1043676476
+test 10
+fldle.d ::
+test 11
+fldle.d ::
+test 12
+fldle.d ::
+output: 4266944292251042560
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test 13
+fstgt.s ::
+input: -149539557700451551
+test 14
+fstgt.s ::
+input: -149539557700451551
+test 15
+fstgt.s ::
+input: -149539557700451551
+test 16
+fstgt.d ::
+input: -149539557700451551
+test 17
+fstgt.d ::
+input: -149539557700451551
+test 18
+fstgt.d ::
+input: -149539557700451551
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x8765432100010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0xfdecba9087654321
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test 19
+fstle.s ::
+input: -149539557700451551
+test 20
+fstle.s ::
+input: -149539557700451551
+test 21
+fstle.s ::
+input: -149539557700451551
+test 22
+fstle.d ::
+input: -149539557700451551
+test 23
+fstle.d ::
+input: -149539557700451551
+test 24
+fstle.d ::
+input: -149539557700451551
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x8765432100010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0xfdecba9087654321
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x876543212ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0xfdecba9087654321
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
diff --git a/none/tests/loongarch64/fault_fp.vgtest b/none/tests/loongarch64/fault_fp.vgtest
new file mode 100644
index 0000000..b750af8
--- /dev/null
+++ b/none/tests/loongarch64/fault_fp.vgtest
@@ -0,0 +1,3 @@
+prereq: ../../../tests/loongarch64_features fpu
+prog: fault_fp
+vgopts: -q
diff --git a/none/tests/loongarch64/filter_stderr b/none/tests/loongarch64/filter_stderr
new file mode 100755
index 0000000..0ae9313
--- /dev/null
+++ b/none/tests/loongarch64/filter_stderr
@@ -0,0 +1,3 @@
+#! /bin/sh
+
+../filter_stderr
diff --git a/none/tests/loongarch64/float.c b/none/tests/loongarch64/float.c
new file mode 100644
index 0000000..7aa1b6c
--- /dev/null
+++ b/none/tests/loongarch64/float.c
@@ -0,0 +1,804 @@
+#include <stdio.h>
+#include <assert.h>
+
+#define NUM 24
+
+const float fj_s[NUM] = {
+   0,         456.25,   3,          -1,
+   1384.5,    -7.25,    1000000000, -5786.5,
+   1752,      0.015625, 0.03125,    -248562.75,
+   -45786.5,  456,      34.03125,   45786.75,
+   1752065,   107,      -45667.25,  -7,
+   -347856.5, 356047.5, -1.0,       23.0625
+};
+
+const double fj_d[NUM] = {
+   0,         456.25,   3,          -1,
+   1384.5,    -7.25,    1000000000, -5786.5,
+   1752,      0.015625, 0.03125,    -248562.75,
+   -45786.5,  456,      34.03125,   45786.75,
+   1752065,   107,      -45667.25,  -7,
+   -347856.5, 356047.5, -1.0,       23.0625
+};
+
+const float fk_s[NUM] = {
+   -4578.5, 456.25,   34.03125, 4578.75,
+   175,     107,      -456.25,  -7.25,
+   -3478.5, 356.5,    -1.0,     23.0625,
+   0,       456.25,   3,        -1,
+   1384.5,  -7,       100,      -5786.5,
+   1752,    0.015625, 0.03125,  -248562.75
+};
+
+const double fk_d[NUM] = {
+   -45786.5,  456.25,   34.03125,   45786.75,
+   1752065,   107,      -45667.25,  -7.25,
+   -347856.5, 356047.5, -1.0,       23.0625,
+   0,         456.25,   3,          -1,
+   1384.5,    -7,       1000000000, -5786.5,
+   1752,      0.015625, 0.03125,    -248562.75
+};
+
+const float fa_s[NUM] = {
+   -347856.5,  356047.5,  -1.0,       23.0625,
+   1752,       0.015625,  0.03125,    -248562.75,
+   1384.5,     -7.25,     1000000000, -5786.5,
+   -347856.75, 356047.75, -1.0,       23.03125,
+   0,          456.25,    3,          -1,
+   -45786.5,   456,       34.03125,   45786.03125
+};
+
+const double fa_d[NUM] = {
+   -347856.5,  356047.5,  -1.0,       23.0625,
+   1752,       0.015625,  0.03125,    -248562.75,
+   1384.5,     -7.25,     1000000000, -5786.5,
+   -347856.75, 356047.75, -1.0,       23.03125,
+   0,          456.25,    3,          -1,
+   -45786.5,   456,       34.03125,   45786.03125
+};
+
+const int fj_w[NUM] = {
+   0,          456,        3,          -1,
+   0xffffffff, 356,        1000000000, -5786,
+   1752,       24575,      10,         -248562,
+   -45786,     456,        34,         45786,
+   1752065,    107,        -45667,     -7,
+   -347856,    0x80000000, 0xfffffff,  23
+};
+
+const long fj_l[NUM] = {
+   18,         25,         3,          -1,
+   0xffffffff, 356,        1000000,    -5786,
+   -1,         24575,      10,         -125458,
+   -486,       456,        34,         45786,
+   0,          1700000,    -45667,     -7,
+   -347856,    0x80000000, 0xfffffff,  23
+};
+
+const int cf[NUM] = {
+   0, 1, 0, 1,
+   1, 0, 1, 0,
+   0, 0, 1, 1,
+   1, 1, 0, 0,
+   0, 0, 0, 0,
+   1, 1, 1, 1
+};
+
+typedef enum {
+   TO_NEAREST = 0,
+   TO_ZERO,
+   TO_PLUS_INFINITY,
+   TO_MINUS_INFINITY
+} round_mode_t;
+
+typedef enum {
+   FADD_S, FADD_D, FSUB_S, FSUB_D,
+   FMUL_S, FMUL_D, FDIV_S, FDIV_D,
+   FMADD_S, FMADD_D, FMSUB_S, FMSUB_D,
+   FNMADD_S, FNMADD_D, FNMSUB_S, FNMSUB_D,
+   FMAX_S, FMAX_D, FMIN_S, FMIN_D,
+   FMAXA_S, FMAXA_D, FMINA_S, FMINA_D,
+   FABS_S, FABS_D, FNEG_S, FNEG_D,
+   FSQRT_S, FSQRT_D,
+   FRECIP_S, FRECIP_D,
+   FRSQRT_S, FRSQRT_D,
+   FSCALEB_S, FSCALEB_D,
+   FLOGB_S, FLOGB_D,
+   FCVT_S_D, FCVT_D_S,
+   FTINTRM_W_S, FTINTRM_W_D, FTINTRM_L_S, FTINTRM_L_D,
+   FTINTRP_W_S, FTINTRP_W_D, FTINTRP_L_S, FTINTRP_L_D,
+   FTINTRZ_W_S, FTINTRZ_W_D, FTINTRZ_L_S, FTINTRZ_L_D,
+   FTINTRNE_W_S, FTINTRNE_W_D, FTINTRNE_L_S, FTINTRNE_L_D,
+   FTINT_W_S, FTINT_W_D, FTINT_L_S, FTINT_L_D,
+   FFINT_S_W, FFINT_S_L, FFINT_D_W, FFINT_D_L,
+   FRINT_S, FRINT_D,
+   FCMP_CAF_S, FCMP_CAF_D, FCMP_SAF_S, FCMP_SAF_D,
+   FCMP_CLT_S, FCMP_CLT_D, FCMP_SLT_S, FCMP_SLT_D,
+   FCMP_CEQ_S, FCMP_CEQ_D, FCMP_SEQ_S, FCMP_SEQ_D,
+   FCMP_CLE_S, FCMP_CLE_D, FCMP_SLE_S, FCMP_SLE_D,
+   FCMP_CUN_S, FCMP_CUN_D, FCMP_SUN_S, FCMP_SUN_D,
+   FCMP_CULT_S, FCMP_CULT_D, FCMP_SULT_S, FCMP_SULT_D,
+   FCMP_CUEQ_S, FCMP_CUEQ_D, FCMP_SUEQ_S, FCMP_SUEQ_D,
+   FCMP_CULE_S, FCMP_CULE_D, FCMP_SULE_S, FCMP_SULE_D,
+   FCMP_CNE_S, FCMP_CNE_D, FCMP_SNE_S, FCMP_SNE_D,
+   FCMP_COR_S, FCMP_COR_D, FCMP_SOR_S, FCMP_SOR_D,
+   FCMP_CUNE_S, FCMP_CUNE_D, FCMP_SUNE_S, FCMP_SUNE_D,
+   FSEL, FMOV_S, FMOV_D
+} op_t;
+
+static inline void set_fcsr(round_mode_t mode)
+{
+   __asm__ __volatile__("movgr2fcsr $r0, %0" : : "r" (mode << 8));
+
+   const char *round_mode_name[] = { "near", "zero", "+inf", "-inf" };
+   printf("roundig mode: %s\n", round_mode_name[mode]);
+}
+
+#define TESTINST_FF_S(insn, v1)       \
+   {                                  \
+      unsigned int fcsr;              \
+      float fd_s;                     \
+      __asm__ __volatile__(           \
+         insn " %0, %2       \n\t"    \
+         "movfcsr2gr %1, $r0 \n\t"    \
+         : "=f" (fd_s), "=r" (fcsr)   \
+         : "f" (v1)                   \
+         : "memory");                 \
+      printf("%s ::\n", insn);        \
+      printf("input: %.6f\n", v1);    \
+      printf("output: %.6f\n", fd_s); \
+      printf("fcsr: %#x\n", fcsr);    \
+   }
+
+#define TESTINST_FF_D(insn, v1)        \
+   {                                   \
+      unsigned int fcsr;               \
+      double fd_d;                     \
+      __asm__ __volatile__(            \
+         insn " %0, %2       \n\t"     \
+         "movfcsr2gr %1, $r0 \n\t"     \
+         : "=f" (fd_d), "=r" (fcsr)    \
+         : "f" (v1)                    \
+         : "memory");                  \
+      printf("%s ::\n", insn);         \
+      printf("input: %.15f\n", v1);    \
+      printf("output: %.15f\n", fd_d); \
+      printf("fcsr: %#x\n", fcsr);     \
+   }
+
+#define TESTINST_FFF_S(insn, v1, v2)        \
+   {                                        \
+      unsigned int fcsr;                    \
+      float fd_s;                           \
+      __asm__ __volatile__(                 \
+         insn " %0, %2, %3   \n\t"          \
+         "movfcsr2gr %1, $r0 \n\t"          \
+         : "=f" (fd_s), "=r" (fcsr)         \
+         : "f" (v1), "f" (v2)               \
+         : "memory");                       \
+      printf("%s ::\n", insn);              \
+      printf("input: %.6f %.6f\n", v1, v2); \
+      printf("output: %.6f\n", fd_s);       \
+      printf("fcsr: %#x\n", fcsr);          \
+   }
+
+#define TESTINST_FFF_D(insn, v1, v2)          \
+   {                                          \
+      unsigned int fcsr;                      \
+      double fd_s;                            \
+      __asm__ __volatile__(                   \
+         insn " %0, %2, %3   \n\t"            \
+         "movfcsr2gr %1, $r0 \n\t"            \
+         : "=f" (fd_s), "=r" (fcsr)           \
+         : "f" (v1), "f" (v2)                 \
+         : "memory");                         \
+      printf("%s ::\n", insn);                \
+      printf("input: %.15f %.15f\n", v1, v2); \
+      printf("output: %.15f\n", fd_s);        \
+      printf("fcsr: %#x\n", fcsr);            \
+   }
+
+#define TESTINST_FFFF_S(insn, v1, v2, v3)            \
+   {                                                 \
+      unsigned int fcsr;                             \
+      float fd_s;                                    \
+      __asm__ __volatile__(                          \
+         insn " %0, %2, %3, %4 \n\t"                 \
+         "movfcsr2gr %1, $r0   \n\t"                 \
+         : "=f" (fd_s), "=r" (fcsr)                  \
+         : "f" (v1), "f" (v2), "f" (v3)              \
+         : "memory");                                \
+      printf("%s ::\n", insn);                       \
+      printf("input: %.6f %.6f %.6f\n", v1, v2, v3); \
+      printf("output: %.6f\n", fd_s);                \
+      printf("fcsr: %#x\n", fcsr);                   \
+   }
+
+#define TESTINST_FFFF_D(insn, v1, v2, v3)               \
+   {                                                    \
+      unsigned int fcsr;                                \
+      double fd_s;                                      \
+      __asm__ __volatile__(                             \
+         insn " %0, %2, %3, %4 \n\t"                    \
+         "movfcsr2gr %1, $r0   \n\t"                    \
+         : "=f" (fd_s), "=r" (fcsr)                     \
+         : "f" (v1), "f" (v2), "f" (v3)                 \
+         : "memory");                                   \
+      printf("%s ::\n", insn);                          \
+      printf("input: %.15f %.15f %.15f\n", v1, v2, v3); \
+      printf("output: %.15f\n", fd_s);                  \
+      printf("fcsr: %#x\n", fcsr);                      \
+   }
+
+#define TESTINST_FF_S_D(insn, v1)     \
+   {                                  \
+      unsigned int fcsr;              \
+      float fd_s;                     \
+      __asm__ __volatile__(           \
+         insn " %0, %2       \n\t"    \
+         "movfcsr2gr %1, $r0 \n\t"    \
+         : "=f" (fd_s), "=r" (fcsr)   \
+         : "f" (v1)                   \
+         : "memory");                 \
+      printf("%s ::\n", insn);        \
+      printf("input: %.15f\n", v1);   \
+      printf("output: %.6f\n", fd_s); \
+      printf("fcsr: %#x\n", fcsr);    \
+   }
+
+#define TESTINST_FF_D_S(insn, v1)      \
+   {                                   \
+      unsigned int fcsr;               \
+      double fd_d;                     \
+      __asm__ __volatile__(            \
+         insn " %0, %2       \n\t"     \
+         "movfcsr2gr %1, $r0 \n\t"     \
+         : "=f" (fd_d), "=r" (fcsr)    \
+         : "f" (v1)                    \
+         : "memory");                  \
+      printf("%s ::\n", insn);         \
+      printf("input: %.6f\n", v1);     \
+      printf("output: %.15f\n", fd_d); \
+      printf("fcsr: %#x\n", fcsr);     \
+   }
+
+#define TESTINST_FF_W_S(insn, v1)   \
+   {                                \
+      unsigned int fcsr;            \
+      int fd_w;                     \
+      __asm__ __volatile__(         \
+         insn " %0, %2       \n\t"  \
+         "movfcsr2gr %1, $r0 \n\t"  \
+         : "=f" (fd_w), "=r" (fcsr) \
+         : "f" (v1)                 \
+         : "memory");               \
+      printf("%s ::\n", insn);      \
+      printf("input: %.6f\n", v1);  \
+      printf("output: %d\n", fd_w); \
+      printf("fcsr: %#x\n", fcsr);  \
+   }
+
+#define TESTINST_FF_W_D(insn, v1)   \
+   {                                \
+      unsigned int fcsr;            \
+      int fd_w;                     \
+      __asm__ __volatile__(         \
+         insn " %0, %2       \n\t"  \
+         "movfcsr2gr %1, $r0 \n\t"  \
+         : "=f" (fd_w), "=r" (fcsr) \
+         : "f" (v1)                 \
+         : "memory");               \
+      printf("%s ::\n", insn);      \
+      printf("input: %.15f\n", v1); \
+      printf("output: %d\n", fd_w); \
+      printf("fcsr: %#x\n", fcsr);  \
+   }
+#define TESTINST_FF_L_S(insn, v1)    \
+   {                                 \
+      unsigned int fcsr;             \
+      long fd_l;                     \
+      __asm__ __volatile__(          \
+         insn " %0, %2       \n\t"   \
+         "movfcsr2gr %1, $r0 \n\t"   \
+         : "=f" (fd_l), "=r" (fcsr)  \
+         : "f" (v1)                  \
+         : "memory");                \
+      printf("%s ::\n", insn);       \
+      printf("input: %.6f\n", v1);   \
+      printf("output: %ld\n", fd_l); \
+      printf("fcsr: %#x\n", fcsr);   \
+   }
+
+#define TESTINST_FF_L_D(insn, v1)     \
+   {                                  \
+      unsigned int fcsr;              \
+      long fd_l;                      \
+      __asm__ __volatile__(           \
+         insn " %0, %2       \n\t"    \
+         "movfcsr2gr %1, $r0 \n\t"    \
+         : "=f" (fd_l), "=r" (fcsr)   \
+         : "f" (v1)                   \
+         : "memory");                 \
+      printf("%s ::\n", insn);        \
+      printf("input: %.15f\n", v1);   \
+      printf("output: %ld\n", fd_l);  \
+      printf("fcsr: %#x\n", fcsr);    \
+   }
+
+#define TESTINST_FF_S_W(insn, v1)     \
+   {                                  \
+      unsigned int fcsr;              \
+      float fd_s;                     \
+      __asm__ __volatile__(           \
+         insn " %0, %2       \n\t"    \
+         "movfcsr2gr %1, $r0 \n\t"    \
+         : "=f" (fd_s), "=r" (fcsr)   \
+         : "f" (v1)                   \
+         : "memory");                 \
+      printf("%s ::\n", insn);        \
+      printf("input: %d\n", v1);      \
+      printf("output: %.6f\n", fd_s); \
+      printf("fcsr: %#x\n", fcsr);    \
+   }
+
+#define TESTINST_FF_S_L(insn, v1)     \
+   {                                  \
+      unsigned int fcsr;              \
+      float fd_s;                     \
+      __asm__ __volatile__(           \
+         insn " %0, %2       \n\t"    \
+         "movfcsr2gr %1, $r0 \n\t"    \
+         : "=f" (fd_s), "=r" (fcsr)   \
+         : "f" (v1)                   \
+         : "memory");                 \
+      printf("%s ::\n", insn);        \
+      printf("input: %ld\n", v1);     \
+      printf("output: %.6f\n", fd_s); \
+      printf("fcsr: %#x\n", fcsr);    \
+   }
+
+#define TESTINST_FF_D_W(insn, v1)      \
+   {                                   \
+      unsigned int fcsr;               \
+      double fd_d;                     \
+      __asm__ __volatile__(            \
+         insn " %0, %2       \n\t"     \
+         "movfcsr2gr %1, $r0 \n\t"     \
+         : "=f" (fd_d), "=r" (fcsr)    \
+         : "f" (v1)                    \
+         : "memory");                  \
+      printf("%s ::\n", insn);         \
+      printf("input: %d\n", v1);       \
+      printf("output: %.15f\n", fd_d); \
+      printf("fcsr: %#x\n", fcsr);     \
+   }
+
+#define TESTINST_FF_D_L(insn, v1)      \
+   {                                   \
+      unsigned int fcsr;               \
+      double fd_d;                     \
+      __asm__ __volatile__(            \
+         insn " %0, %2       \n\t"     \
+         "movfcsr2gr %1, $r0 \n\t"     \
+         : "=f" (fd_d), "=r" (fcsr)    \
+         : "f" (v1)                    \
+         : "memory");                  \
+      printf("%s ::\n", insn);         \
+      printf("input: %ld\n", v1);      \
+      printf("output: %.15f\n", fd_d); \
+      printf("fcsr: %#x\n", fcsr);     \
+   }
+
+#define TESTINST_FFC_S(insn, v1, v2)        \
+   {                                        \
+      unsigned int fcsr;                    \
+      int fcc;                              \
+      __asm__ __volatile__(                 \
+         insn " $fcc0, %2, %3   \n\t"       \
+         "movcf2gr %0, $fcc0    \n\t"       \
+         "movfcsr2gr %1, $r0    \n\t"       \
+         : "=r" (fcc), "=r" (fcsr)          \
+         : "f" (v1), "f" (v2)               \
+         : "$fcc0", "memory");              \
+      printf("%s ::\n", insn);              \
+      printf("input: %.6f %.6f\n", v1, v2); \
+      printf("output: %d\n", fcc);          \
+      printf("fcsr: %#x\n", fcsr);          \
+   }
+
+#define TESTINST_FFC_D(insn, v1, v2)          \
+   {                                          \
+      unsigned int fcsr;                      \
+      int fcc;                                \
+      __asm__ __volatile__(                   \
+         insn " $fcc0, %2, %3   \n\t"         \
+         "movcf2gr %0, $fcc0    \n\t"         \
+         "movfcsr2gr %1, $r0    \n\t"         \
+         : "=r" (fcc), "=r" (fcsr)            \
+         : "f" (v1), "f" (v2)                 \
+         : "$fcc0", "memory");                \
+      printf("%s ::\n", insn);                \
+      printf("input: %.15f %.15f\n", v1, v2); \
+      printf("output: %d\n", fcc);            \
+      printf("fcsr: %#x\n", fcsr);            \
+   }
+
+#define TESTINST_FFFC(insn, v1, v2, v3)              \
+   {                                                 \
+      unsigned int fcsr;                             \
+      double fd_s;                                   \
+      __asm__ __volatile__(                          \
+         "movgr2cf $fcc0, %4      \n\t"              \
+         insn " %0, %2, %3, $fcc0 \n\t"              \
+         "movfcsr2gr %1, $r0      \n\t"              \
+         : "=f" (fd_s), "=r" (fcsr)                  \
+         : "f" (v1), "f" (v2), "r" (v3)              \
+         : "memory");                                \
+      printf("%s ::\n", insn);                       \
+      printf("input: %.15f %.15f %d\n", v1, v2, v3); \
+      printf("output: %.15f\n", fd_s);               \
+      printf("fcsr: %#x\n", fcsr);                   \
+   }
+
+void test(op_t op)
+{
+   int i;
+   round_mode_t mode;
+   for (mode = TO_NEAREST; mode <= TO_MINUS_INFINITY; mode++) {
+      for (i = 0; i < NUM; i++) {
+         set_fcsr(mode);
+         switch (op) {
+            case FADD_S:
+               TESTINST_FFF_S("fadd.s", fj_s[i], fk_s[i]);
+               break;
+            case FADD_D:
+               TESTINST_FFF_D("fadd.d", fj_d[i], fk_d[i]);
+               break;
+            case FSUB_S:
+               TESTINST_FFF_S("fsub.s", fj_s[i], fk_s[i]);
+               break;
+            case FSUB_D:
+               TESTINST_FFF_D("fsub.d", fj_d[i], fk_d[i]);
+               break;
+            case FMUL_S:
+               TESTINST_FFF_S("fmul.s", fj_s[i], fk_s[i]);
+               break;
+            case FMUL_D:
+               TESTINST_FFF_D("fmul.d", fj_d[i], fk_d[i]);
+               break;
+            case FDIV_S:
+               TESTINST_FFF_S("fdiv.s", fj_s[i], fk_s[i]);
+               break;
+            case FDIV_D:
+               TESTINST_FFF_D("fdiv.d", fj_d[i], fk_d[i]);
+               break;
+            case FMADD_S:
+               TESTINST_FFFF_S("fmadd.s", fj_s[i], fk_s[i], fa_s[i]);
+               break;
+            case FMADD_D:
+               TESTINST_FFFF_D("fmadd.d", fj_d[i], fk_d[i], fa_d[i]);
+               break;
+            case FMSUB_S:
+               TESTINST_FFFF_S("fmsub.s", fj_s[i], fk_s[i], fa_s[i]);
+               break;
+            case FMSUB_D:
+               TESTINST_FFFF_D("fmsub.d", fj_d[i], fk_d[i], fa_d[i]);
+               break;
+            case FNMADD_S:
+               TESTINST_FFFF_S("fnmadd.s", fj_s[i], fk_s[i], fa_s[i]);
+               break;
+            case FNMADD_D:
+               TESTINST_FFFF_D("fnmadd.d", fj_d[i], fk_d[i], fa_d[i]);
+               break;
+            case FNMSUB_S:
+               TESTINST_FFFF_S("fnmsub.s", fj_s[i], fk_s[i], fa_s[i]);
+               break;
+            case FNMSUB_D:
+               TESTINST_FFFF_D("fnmsub.d", fj_d[i], fk_d[i], fa_d[i]);
+               break;
+            case FMAX_S:
+               TESTINST_FFF_S("fmax.s", fj_s[i], fk_s[i]);
+               break;
+            case FMAX_D:
+               TESTINST_FFF_D("fmax.d", fj_d[i], fk_d[i]);
+               break;
+            case FMIN_S:
+               TESTINST_FFF_S("fmin.s", fj_s[i], fk_s[i]);
+               break;
+            case FMIN_D:
+               TESTINST_FFF_D("fmin.d", fj_d[i], fk_d[i]);
+               break;
+            case FMAXA_S:
+               TESTINST_FFF_S("fmaxa.s", fj_s[i], fk_s[i]);
+               break;
+            case FMAXA_D:
+               TESTINST_FFF_D("fmaxa.d", fj_d[i], fk_d[i]);
+               break;
+            case FMINA_S:
+               TESTINST_FFF_S("fmina.s", fj_s[i], fk_s[i]);
+               break;
+            case FMINA_D:
+               TESTINST_FFF_D("fmina.d", fj_d[i], fk_d[i]);
+               break;
+            case FABS_S:
+               TESTINST_FF_S("fabs.s", fj_s[i]);
+               break;
+            case FABS_D:
+               TESTINST_FF_D("fabs.d", fj_d[i]);
+               break;
+            case FNEG_S:
+               TESTINST_FF_S("fneg.s", fj_s[i]);
+               break;
+            case FNEG_D:
+               TESTINST_FF_D("fneg.d", fj_d[i]);
+               break;
+            case FSQRT_S:
+               TESTINST_FF_S("fsqrt.s", fj_s[i]);
+               break;
+            case FSQRT_D:
+               TESTINST_FF_D("fsqrt.d", fj_d[i]);
+               break;
+            case FRECIP_S:
+               TESTINST_FF_S("frecip.s", fj_s[i]);
+               break;
+            case FRECIP_D:
+               TESTINST_FF_D("frecip.d", fj_d[i]);
+               break;
+            case FRSQRT_S:
+               TESTINST_FF_S("frsqrt.s", fj_s[i]);
+               break;
+            case FRSQRT_D:
+               TESTINST_FF_D("frsqrt.d", fj_d[i]);
+               break;
+            case FSCALEB_S:
+               TESTINST_FFF_S("fscaleb.s", fj_s[i], fk_s[i]);
+               break;
+            case FSCALEB_D:
+               TESTINST_FFF_D("fscaleb.d", fj_d[i], fk_d[i]);
+               break;
+            case FLOGB_S:
+               TESTINST_FF_S("flogb.s", fj_s[i]);
+               break;
+            case FLOGB_D:
+               TESTINST_FF_D("flogb.d", fj_d[i]);
+               break;
+            case FCVT_S_D:
+               TESTINST_FF_S_D("fcvt.s.d", fj_d[i]);
+               break;
+            case FCVT_D_S:
+               TESTINST_FF_D_S("fcvt.d.s", fj_s[i]);
+               break;
+            case FTINTRM_W_S:
+               TESTINST_FF_W_S("ftintrm.w.s", fj_s[i]);
+               break;
+            case FTINTRM_W_D:
+               TESTINST_FF_W_D("ftintrm.w.d", fj_d[i]);
+               break;
+            case FTINTRM_L_S:
+               TESTINST_FF_L_S("ftintrm.l.s", fj_s[i]);
+               break;
+            case FTINTRM_L_D:
+               TESTINST_FF_L_D("ftintrm.l.d", fj_d[i]);
+               break;
+            case FTINTRP_W_S:
+               TESTINST_FF_W_S("ftintrp.w.s", fj_s[i]);
+               break;
+            case FTINTRP_W_D:
+               TESTINST_FF_W_D("ftintrp.w.d", fj_d[i]);
+               break;
+            case FTINTRP_L_S:
+               TESTINST_FF_L_S("ftintrp.l.s", fj_s[i]);
+               break;
+            case FTINTRP_L_D:
+               TESTINST_FF_L_D("ftintrp.l.d", fj_d[i]);
+               break;
+            case FTINTRZ_W_S:
+               TESTINST_FF_W_S("ftintrz.w.s", fj_s[i]);
+               break;
+            case FTINTRZ_W_D:
+               TESTINST_FF_W_D("ftintrz.w.d", fj_d[i]);
+               break;
+            case FTINTRZ_L_S:
+               TESTINST_FF_L_S("ftintrz.l.s", fj_s[i]);
+               break;
+            case FTINTRZ_L_D:
+               TESTINST_FF_L_D("ftintrz.l.d", fj_d[i]);
+               break;
+            case FTINTRNE_W_S:
+               TESTINST_FF_W_S("ftintrne.w.s", fj_s[i]);
+               break;
+            case FTINTRNE_W_D:
+               TESTINST_FF_W_D("ftintrne.w.d", fj_d[i]);
+               break;
+            case FTINTRNE_L_S:
+               TESTINST_FF_L_S("ftintrne.l.s", fj_s[i]);
+               break;
+            case FTINTRNE_L_D:
+               TESTINST_FF_L_D("ftintrne.l.d", fj_d[i]);
+               break;
+            case FTINT_W_S:
+               TESTINST_FF_W_S("ftint.w.s", fj_s[i]);
+               break;
+            case FTINT_W_D:
+               TESTINST_FF_W_D("ftint.w.d", fj_d[i]);
+               break;
+            case FTINT_L_S:
+               TESTINST_FF_L_S("ftint.l.s", fj_s[i]);
+               break;
+            case FTINT_L_D:
+               TESTINST_FF_L_D("ftint.l.d", fj_d[i]);
+               break;
+            case FFINT_S_W:
+               TESTINST_FF_S_W("ffint.s.w", fj_w[i]);
+               break;
+            case FFINT_S_L:
+               TESTINST_FF_S_L("ffint.s.l", fj_l[i]);
+               break;
+            case FFINT_D_W:
+               TESTINST_FF_D_W("ffint.d.w", fj_w[i]);
+               break;
+            case FFINT_D_L:
+               TESTINST_FF_D_L("ffint.d.l", fj_l[i]);
+               break;
+            case FRINT_S:
+               TESTINST_FF_S("frint.s", fj_s[i]);
+               break;
+            case FRINT_D:
+               TESTINST_FF_D("frint.d", fj_d[i]);
+               break;
+            case FCMP_CAF_S:
+               TESTINST_FFC_S("fcmp.caf.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CAF_D:
+               TESTINST_FFC_D("fcmp.caf.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SAF_S:
+               TESTINST_FFC_S("fcmp.saf.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SAF_D:
+               TESTINST_FFC_D("fcmp.saf.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_CLT_S:
+               TESTINST_FFC_S("fcmp.clt.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CLT_D:
+               TESTINST_FFC_D("fcmp.clt.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SLT_S:
+               TESTINST_FFC_S("fcmp.slt.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SLT_D:
+               TESTINST_FFC_D("fcmp.slt.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_CEQ_S:
+               TESTINST_FFC_S("fcmp.ceq.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CEQ_D:
+               TESTINST_FFC_D("fcmp.ceq.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SEQ_S:
+               TESTINST_FFC_S("fcmp.seq.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SEQ_D:
+               TESTINST_FFC_D("fcmp.seq.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_CLE_S:
+               TESTINST_FFC_S("fcmp.cle.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CLE_D:
+               TESTINST_FFC_D("fcmp.cle.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SLE_S:
+               TESTINST_FFC_S("fcmp.sle.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SLE_D:
+               TESTINST_FFC_D("fcmp.sle.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_CUN_S:
+               TESTINST_FFC_S("fcmp.cun.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CUN_D:
+               TESTINST_FFC_D("fcmp.cun.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SUN_S:
+               TESTINST_FFC_S("fcmp.sun.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SUN_D:
+               TESTINST_FFC_D("fcmp.sun.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_CULT_S:
+               TESTINST_FFC_S("fcmp.cult.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CULT_D:
+               TESTINST_FFC_D("fcmp.cult.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SULT_S:
+               TESTINST_FFC_S("fcmp.sult.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SULT_D:
+               TESTINST_FFC_D("fcmp.sult.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_CUEQ_S:
+               TESTINST_FFC_S("fcmp.cueq.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CUEQ_D:
+               TESTINST_FFC_D("fcmp.cueq.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SUEQ_S:
+               TESTINST_FFC_S("fcmp.sueq.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SUEQ_D:
+               TESTINST_FFC_D("fcmp.sueq.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_CULE_S:
+               TESTINST_FFC_S("fcmp.cule.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CULE_D:
+               TESTINST_FFC_D("fcmp.cule.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SULE_S:
+               TESTINST_FFC_S("fcmp.sule.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SULE_D:
+               TESTINST_FFC_D("fcmp.sule.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_CNE_S:
+               TESTINST_FFC_S("fcmp.cne.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CNE_D:
+               TESTINST_FFC_D("fcmp.cne.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SNE_S:
+               TESTINST_FFC_S("fcmp.sne.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SNE_D:
+               TESTINST_FFC_D("fcmp.sne.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_COR_S:
+               TESTINST_FFC_S("fcmp.cor.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_COR_D:
+               TESTINST_FFC_D("fcmp.cor.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SOR_S:
+               TESTINST_FFC_S("fcmp.sor.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SOR_D:
+               TESTINST_FFC_D("fcmp.sor.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_CUNE_S:
+               TESTINST_FFC_S("fcmp.cune.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_CUNE_D:
+               TESTINST_FFC_D("fcmp.cune.d", fj_d[i], fk_d[i]);
+               break;
+            case FCMP_SUNE_S:
+               TESTINST_FFC_S("fcmp.sune.s", fj_s[i], fk_s[i]);
+               break;
+            case FCMP_SUNE_D:
+               TESTINST_FFC_D("fcmp.sune.d", fj_d[i], fk_d[i]);
+               break;
+            case FSEL:
+               TESTINST_FFFC("fsel", fj_d[i], fk_d[i], cf[i]);
+               break;
+            case FMOV_S:
+               TESTINST_FF_S("fmov.s", fj_s[i]);
+               break;
+            case FMOV_D:
+               TESTINST_FF_D("fmov.d", fj_d[i]);
+               break;
+            default:
+               assert(0);
+               break;
+         }
+      }
+   }
+}
+
+int main(void)
+{
+   op_t op;
+   for (op = FADD_S; op <= FMOV_D; op++)
+      test(op);
+   return 0;
+}
diff --git a/none/tests/loongarch64/float.stderr.exp b/none/tests/loongarch64/float.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/float.stdout.exp b/none/tests/loongarch64/float.stdout.exp
new file mode 100644
index 0000000..f4914ff
--- /dev/null
+++ b/none/tests/loongarch64/float.stdout.exp
@@ -0,0 +1,54240 @@
+roundig mode: near
+fadd.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 456.250000 456.250000
+output: 912.500000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 3.000000 34.031250
+output: 37.031250
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: -1.000000 4578.750000
+output: 4577.750000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 1384.500000 175.000000
+output: 1559.500000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: -7.250000 107.000000
+output: 99.750000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 1000000000.000000 -456.250000
+output: 999999552.000000
+fcsr: 0x1010000
+roundig mode: near
+fadd.s ::
+input: -5786.500000 -7.250000
+output: -5793.750000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 1752.000000 -3478.500000
+output: -1726.500000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 0.015625 356.500000
+output: 356.515625
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 0.031250 -1.000000
+output: -0.968750
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: -248562.750000 23.062500
+output: -248539.687500
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 456.000000 456.250000
+output: 912.250000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 34.031250 3.000000
+output: 37.031250
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 45786.750000 -1.000000
+output: 45785.750000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 1752065.000000 1384.500000
+output: 1753449.500000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 107.000000 -7.000000
+output: 100.000000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: -45667.250000 100.000000
+output: -45567.250000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: -7.000000 -5786.500000
+output: -5793.500000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: -347856.500000 1752.000000
+output: -346104.500000
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x1010000
+roundig mode: near
+fadd.s ::
+input: -1.000000 0.031250
+output: -0.968750
+fcsr: 0
+roundig mode: near
+fadd.s ::
+input: 23.062500 -248562.750000
+output: -248539.687500
+fcsr: 0
+roundig mode: zero
+fadd.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 456.250000 456.250000
+output: 912.500000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 3.000000 34.031250
+output: 37.031250
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: -1.000000 4578.750000
+output: 4577.750000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 1384.500000 175.000000
+output: 1559.500000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: -7.250000 107.000000
+output: 99.750000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 1000000000.000000 -456.250000
+output: 999999488.000000
+fcsr: 0x1010100
+roundig mode: zero
+fadd.s ::
+input: -5786.500000 -7.250000
+output: -5793.750000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 1752.000000 -3478.500000
+output: -1726.500000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 0.015625 356.500000
+output: 356.515625
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 0.031250 -1.000000
+output: -0.968750
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: -248562.750000 23.062500
+output: -248539.687500
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 456.000000 456.250000
+output: 912.250000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 34.031250 3.000000
+output: 37.031250
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 45786.750000 -1.000000
+output: 45785.750000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 1752065.000000 1384.500000
+output: 1753449.500000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 107.000000 -7.000000
+output: 100.000000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: -45667.250000 100.000000
+output: -45567.250000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: -7.000000 -5786.500000
+output: -5793.500000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: -347856.500000 1752.000000
+output: -346104.500000
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x1010100
+roundig mode: zero
+fadd.s ::
+input: -1.000000 0.031250
+output: -0.968750
+fcsr: 0x100
+roundig mode: zero
+fadd.s ::
+input: 23.062500 -248562.750000
+output: -248539.687500
+fcsr: 0x100
+roundig mode: +inf
+fadd.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 456.250000 456.250000
+output: 912.500000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 3.000000 34.031250
+output: 37.031250
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: -1.000000 4578.750000
+output: 4577.750000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 1384.500000 175.000000
+output: 1559.500000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: -7.250000 107.000000
+output: 99.750000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 1000000000.000000 -456.250000
+output: 999999552.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fadd.s ::
+input: -5786.500000 -7.250000
+output: -5793.750000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 1752.000000 -3478.500000
+output: -1726.500000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 0.015625 356.500000
+output: 356.515625
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 0.031250 -1.000000
+output: -0.968750
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: -248562.750000 23.062500
+output: -248539.687500
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 456.000000 456.250000
+output: 912.250000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 34.031250 3.000000
+output: 37.031250
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 45786.750000 -1.000000
+output: 45785.750000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 1752065.000000 1384.500000
+output: 1753449.500000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 107.000000 -7.000000
+output: 100.000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: -45667.250000 100.000000
+output: -45567.250000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: -7.000000 -5786.500000
+output: -5793.500000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: -347856.500000 1752.000000
+output: -346104.500000
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 356047.500000 0.015625
+output: 356047.531250
+fcsr: 0x1010200
+roundig mode: +inf
+fadd.s ::
+input: -1.000000 0.031250
+output: -0.968750
+fcsr: 0x200
+roundig mode: +inf
+fadd.s ::
+input: 23.062500 -248562.750000
+output: -248539.687500
+fcsr: 0x200
+roundig mode: -inf
+fadd.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 456.250000 456.250000
+output: 912.500000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 3.000000 34.031250
+output: 37.031250
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: -1.000000 4578.750000
+output: 4577.750000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 1384.500000 175.000000
+output: 1559.500000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: -7.250000 107.000000
+output: 99.750000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 1000000000.000000 -456.250000
+output: 999999488.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fadd.s ::
+input: -5786.500000 -7.250000
+output: -5793.750000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 1752.000000 -3478.500000
+output: -1726.500000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 0.015625 356.500000
+output: 356.515625
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 0.031250 -1.000000
+output: -0.968750
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: -248562.750000 23.062500
+output: -248539.687500
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 456.000000 456.250000
+output: 912.250000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 34.031250 3.000000
+output: 37.031250
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 45786.750000 -1.000000
+output: 45785.750000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 1752065.000000 1384.500000
+output: 1753449.500000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 107.000000 -7.000000
+output: 100.000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: -45667.250000 100.000000
+output: -45567.250000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: -7.000000 -5786.500000
+output: -5793.500000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: -347856.500000 1752.000000
+output: -346104.500000
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x1010300
+roundig mode: -inf
+fadd.s ::
+input: -1.000000 0.031250
+output: -0.968750
+fcsr: 0x300
+roundig mode: -inf
+fadd.s ::
+input: 23.062500 -248562.750000
+output: -248539.687500
+fcsr: 0x300
+roundig mode: near
+fadd.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 456.250000000000000 456.250000000000000
+output: 912.500000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 3.000000000000000 34.031250000000000
+output: 37.031250000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45785.750000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1753449.500000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: -7.250000000000000 107.000000000000000
+output: 99.750000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 999954332.750000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5793.750000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -346104.500000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.515625000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.968750000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248539.687500000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 456.000000000000000 456.250000000000000
+output: 912.250000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 34.031250000000000 3.000000000000000
+output: 37.031250000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45785.750000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1753449.500000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 100.000000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 999954332.750000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5793.500000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -346104.500000000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.515625000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: -1.000000000000000 0.031250000000000
+output: -0.968750000000000
+fcsr: 0
+roundig mode: near
+fadd.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248539.687500000000000
+fcsr: 0
+roundig mode: zero
+fadd.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 456.250000000000000 456.250000000000000
+output: 912.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 3.000000000000000 34.031250000000000
+output: 37.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45785.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1753449.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: -7.250000000000000 107.000000000000000
+output: 99.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 999954332.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5793.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -346104.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.515625000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.968750000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248539.687500000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 456.000000000000000 456.250000000000000
+output: 912.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 34.031250000000000 3.000000000000000
+output: 37.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45785.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1753449.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 100.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 999954332.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5793.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -346104.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.515625000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: -1.000000000000000 0.031250000000000
+output: -0.968750000000000
+fcsr: 0x100
+roundig mode: zero
+fadd.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248539.687500000000000
+fcsr: 0x100
+roundig mode: +inf
+fadd.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 456.250000000000000 456.250000000000000
+output: 912.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 3.000000000000000 34.031250000000000
+output: 37.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45785.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1753449.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: -7.250000000000000 107.000000000000000
+output: 99.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 999954332.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5793.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -346104.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.515625000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.968750000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248539.687500000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 456.000000000000000 456.250000000000000
+output: 912.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 34.031250000000000 3.000000000000000
+output: 37.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45785.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1753449.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 100.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 999954332.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5793.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -346104.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.515625000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: -1.000000000000000 0.031250000000000
+output: -0.968750000000000
+fcsr: 0x200
+roundig mode: +inf
+fadd.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248539.687500000000000
+fcsr: 0x200
+roundig mode: -inf
+fadd.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 456.250000000000000 456.250000000000000
+output: 912.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 3.000000000000000 34.031250000000000
+output: 37.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45785.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1753449.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: -7.250000000000000 107.000000000000000
+output: 99.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 999954332.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5793.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -346104.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.515625000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.968750000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248539.687500000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 456.000000000000000 456.250000000000000
+output: 912.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 34.031250000000000 3.000000000000000
+output: 37.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45785.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1753449.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 100.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 999954332.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5793.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -346104.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.515625000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: -1.000000000000000 0.031250000000000
+output: -0.968750000000000
+fcsr: 0x300
+roundig mode: -inf
+fadd.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248539.687500000000000
+fcsr: 0x300
+roundig mode: near
+fsub.s ::
+input: 0.000000 -4578.500000
+output: 4578.500000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 456.250000 456.250000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 3.000000 34.031250
+output: -31.031250
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: -1.000000 4578.750000
+output: -4579.750000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 1384.500000 175.000000
+output: 1209.500000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: -7.250000 107.000000
+output: -114.250000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000448.000000
+fcsr: 0x1010000
+roundig mode: near
+fsub.s ::
+input: -5786.500000 -7.250000
+output: -5779.250000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 1752.000000 -3478.500000
+output: 5230.500000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 0.015625 356.500000
+output: -356.484375
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 0.031250 -1.000000
+output: 1.031250
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: -248562.750000 23.062500
+output: -248585.812500
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 456.000000 456.250000
+output: -0.250000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 34.031250 3.000000
+output: 31.031250
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 45786.750000 -1.000000
+output: 45787.750000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 1752065.000000 1384.500000
+output: 1750680.500000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 107.000000 -7.000000
+output: 114.000000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: -45667.250000 100.000000
+output: -45767.250000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: -7.000000 -5786.500000
+output: 5779.500000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: -347856.500000 1752.000000
+output: -349608.500000
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x1010000
+roundig mode: near
+fsub.s ::
+input: -1.000000 0.031250
+output: -1.031250
+fcsr: 0
+roundig mode: near
+fsub.s ::
+input: 23.062500 -248562.750000
+output: 248585.812500
+fcsr: 0
+roundig mode: zero
+fsub.s ::
+input: 0.000000 -4578.500000
+output: 4578.500000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 456.250000 456.250000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 3.000000 34.031250
+output: -31.031250
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: -1.000000 4578.750000
+output: -4579.750000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 1384.500000 175.000000
+output: 1209.500000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: -7.250000 107.000000
+output: -114.250000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000448.000000
+fcsr: 0x1010100
+roundig mode: zero
+fsub.s ::
+input: -5786.500000 -7.250000
+output: -5779.250000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 1752.000000 -3478.500000
+output: 5230.500000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 0.015625 356.500000
+output: -356.484375
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 0.031250 -1.000000
+output: 1.031250
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: -248562.750000 23.062500
+output: -248585.812500
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 456.000000 456.250000
+output: -0.250000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 34.031250 3.000000
+output: 31.031250
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 45786.750000 -1.000000
+output: 45787.750000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 1752065.000000 1384.500000
+output: 1750680.500000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 107.000000 -7.000000
+output: 114.000000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: -45667.250000 100.000000
+output: -45767.250000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: -7.000000 -5786.500000
+output: 5779.500000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: -347856.500000 1752.000000
+output: -349608.500000
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 356047.500000 0.015625
+output: 356047.468750
+fcsr: 0x1010100
+roundig mode: zero
+fsub.s ::
+input: -1.000000 0.031250
+output: -1.031250
+fcsr: 0x100
+roundig mode: zero
+fsub.s ::
+input: 23.062500 -248562.750000
+output: 248585.812500
+fcsr: 0x100
+roundig mode: +inf
+fsub.s ::
+input: 0.000000 -4578.500000
+output: 4578.500000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 456.250000 456.250000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 3.000000 34.031250
+output: -31.031250
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: -1.000000 4578.750000
+output: -4579.750000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 1384.500000 175.000000
+output: 1209.500000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: -7.250000 107.000000
+output: -114.250000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000512.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fsub.s ::
+input: -5786.500000 -7.250000
+output: -5779.250000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 1752.000000 -3478.500000
+output: 5230.500000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 0.015625 356.500000
+output: -356.484375
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 0.031250 -1.000000
+output: 1.031250
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: -248562.750000 23.062500
+output: -248585.812500
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 456.000000 456.250000
+output: -0.250000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 34.031250 3.000000
+output: 31.031250
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 45786.750000 -1.000000
+output: 45787.750000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 1752065.000000 1384.500000
+output: 1750680.500000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 107.000000 -7.000000
+output: 114.000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: -45667.250000 100.000000
+output: -45767.250000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: -7.000000 -5786.500000
+output: 5779.500000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: -347856.500000 1752.000000
+output: -349608.500000
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x1010200
+roundig mode: +inf
+fsub.s ::
+input: -1.000000 0.031250
+output: -1.031250
+fcsr: 0x200
+roundig mode: +inf
+fsub.s ::
+input: 23.062500 -248562.750000
+output: 248585.812500
+fcsr: 0x200
+roundig mode: -inf
+fsub.s ::
+input: 0.000000 -4578.500000
+output: 4578.500000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 456.250000 456.250000
+output: -0.000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 3.000000 34.031250
+output: -31.031250
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: -1.000000 4578.750000
+output: -4579.750000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 1384.500000 175.000000
+output: 1209.500000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: -7.250000 107.000000
+output: -114.250000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000448.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fsub.s ::
+input: -5786.500000 -7.250000
+output: -5779.250000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 1752.000000 -3478.500000
+output: 5230.500000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 0.015625 356.500000
+output: -356.484375
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 0.031250 -1.000000
+output: 1.031250
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: -248562.750000 23.062500
+output: -248585.812500
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 456.000000 456.250000
+output: -0.250000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 34.031250 3.000000
+output: 31.031250
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 45786.750000 -1.000000
+output: 45787.750000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 1752065.000000 1384.500000
+output: 1750680.500000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 107.000000 -7.000000
+output: 114.000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: -45667.250000 100.000000
+output: -45767.250000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: -7.000000 -5786.500000
+output: 5779.500000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: -347856.500000 1752.000000
+output: -349608.500000
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 356047.500000 0.015625
+output: 356047.468750
+fcsr: 0x1010300
+roundig mode: -inf
+fsub.s ::
+input: -1.000000 0.031250
+output: -1.031250
+fcsr: 0x300
+roundig mode: -inf
+fsub.s ::
+input: 23.062500 -248562.750000
+output: 248585.812500
+fcsr: 0x300
+roundig mode: near
+fsub.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 3.000000000000000 34.031250000000000
+output: -31.031250000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -45787.750000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: -1750680.500000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: -7.250000000000000 107.000000000000000
+output: -114.250000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000045667.250000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5779.250000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 349608.500000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 0.015625000000000 356047.500000000000000
+output: -356047.484375000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1.031250000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248585.812500000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 456.000000000000000 456.250000000000000
+output: -0.250000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 34.031250000000000 3.000000000000000
+output: 31.031250000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45787.750000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1750680.500000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 114.000000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -1000045667.250000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 5779.500000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -349608.500000000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.484375000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.031250000000000
+fcsr: 0
+roundig mode: near
+fsub.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 248585.812500000000000
+fcsr: 0
+roundig mode: zero
+fsub.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 3.000000000000000 34.031250000000000
+output: -31.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -45787.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: -1750680.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: -7.250000000000000 107.000000000000000
+output: -114.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000045667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5779.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 349608.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 0.015625000000000 356047.500000000000000
+output: -356047.484375000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248585.812500000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 456.000000000000000 456.250000000000000
+output: -0.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 34.031250000000000 3.000000000000000
+output: 31.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45787.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1750680.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 114.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -1000045667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 5779.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -349608.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.484375000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fsub.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 248585.812500000000000
+fcsr: 0x100
+roundig mode: +inf
+fsub.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 3.000000000000000 34.031250000000000
+output: -31.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -45787.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: -1750680.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: -7.250000000000000 107.000000000000000
+output: -114.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000045667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5779.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 349608.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 0.015625000000000 356047.500000000000000
+output: -356047.484375000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248585.812500000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 456.000000000000000 456.250000000000000
+output: -0.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 34.031250000000000 3.000000000000000
+output: 31.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45787.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1750680.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 114.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -1000045667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 5779.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -349608.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.484375000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fsub.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 248585.812500000000000
+fcsr: 0x200
+roundig mode: -inf
+fsub.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 456.250000000000000 456.250000000000000
+output: -0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 3.000000000000000 34.031250000000000
+output: -31.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -45787.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: -1750680.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: -7.250000000000000 107.000000000000000
+output: -114.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000045667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5779.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 349608.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 0.015625000000000 356047.500000000000000
+output: -356047.484375000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248585.812500000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 456.000000000000000 456.250000000000000
+output: -0.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 34.031250000000000 3.000000000000000
+output: 31.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45787.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1750680.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 114.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -1000045667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 5779.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -349608.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.484375000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fsub.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 248585.812500000000000
+fcsr: 0x300
+roundig mode: near
+fmul.s ::
+input: 0.000000 -4578.500000
+output: -0.000000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 456.250000 456.250000
+output: 208164.062500
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 3.000000 34.031250
+output: 102.093750
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: -1.000000 4578.750000
+output: -4578.750000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 1384.500000 175.000000
+output: 242287.500000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: -7.250000 107.000000
+output: -775.750000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 1000000000.000000 -456.250000
+output: -456249999360.000000
+fcsr: 0x1010000
+roundig mode: near
+fmul.s ::
+input: -5786.500000 -7.250000
+output: 41952.125000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 1752.000000 -3478.500000
+output: -6094332.000000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 0.015625 356.500000
+output: 5.570312
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 0.031250 -1.000000
+output: -0.031250
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: -248562.750000 23.062500
+output: -5732478.500000
+fcsr: 0x1010000
+roundig mode: near
+fmul.s ::
+input: -45786.500000 0.000000
+output: -0.000000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 456.000000 456.250000
+output: 208050.000000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 34.031250 3.000000
+output: 102.093750
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 45786.750000 -1.000000
+output: -45786.750000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 1752065.000000 1384.500000
+output: 2425733888.000000
+fcsr: 0x1010000
+roundig mode: near
+fmul.s ::
+input: 107.000000 -7.000000
+output: -749.000000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: -45667.250000 100.000000
+output: -4566725.000000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: -7.000000 -5786.500000
+output: 40505.500000
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: -347856.500000 1752.000000
+output: -609444608.000000
+fcsr: 0x1010000
+roundig mode: near
+fmul.s ::
+input: 356047.500000 0.015625
+output: 5563.242188
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: -1.000000 0.031250
+output: -0.031250
+fcsr: 0
+roundig mode: near
+fmul.s ::
+input: 23.062500 -248562.750000
+output: -5732478.500000
+fcsr: 0x1010000
+roundig mode: zero
+fmul.s ::
+input: 0.000000 -4578.500000
+output: -0.000000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 456.250000 456.250000
+output: 208164.062500
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 3.000000 34.031250
+output: 102.093750
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: -1.000000 4578.750000
+output: -4578.750000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 1384.500000 175.000000
+output: 242287.500000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: -7.250000 107.000000
+output: -775.750000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 1000000000.000000 -456.250000
+output: -456249999360.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmul.s ::
+input: -5786.500000 -7.250000
+output: 41952.125000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 1752.000000 -3478.500000
+output: -6094332.000000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 0.015625 356.500000
+output: 5.570312
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 0.031250 -1.000000
+output: -0.031250
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: -248562.750000 23.062500
+output: -5732478.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmul.s ::
+input: -45786.500000 0.000000
+output: -0.000000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 456.000000 456.250000
+output: 208050.000000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 34.031250 3.000000
+output: 102.093750
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 45786.750000 -1.000000
+output: -45786.750000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 1752065.000000 1384.500000
+output: 2425733888.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmul.s ::
+input: 107.000000 -7.000000
+output: -749.000000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: -45667.250000 100.000000
+output: -4566725.000000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: -7.000000 -5786.500000
+output: 40505.500000
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: -347856.500000 1752.000000
+output: -609444544.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmul.s ::
+input: 356047.500000 0.015625
+output: 5563.242187
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: -1.000000 0.031250
+output: -0.031250
+fcsr: 0x100
+roundig mode: zero
+fmul.s ::
+input: 23.062500 -248562.750000
+output: -5732478.000000
+fcsr: 0x1010100
+roundig mode: +inf
+fmul.s ::
+input: 0.000000 -4578.500000
+output: -0.000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 456.250000 456.250000
+output: 208164.062500
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 3.000000 34.031250
+output: 102.093750
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: -1.000000 4578.750000
+output: -4578.750000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 1384.500000 175.000000
+output: 242287.500000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: -7.250000 107.000000
+output: -775.750000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 1000000000.000000 -456.250000
+output: -456249999360.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmul.s ::
+input: -5786.500000 -7.250000
+output: 41952.125000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 1752.000000 -3478.500000
+output: -6094332.000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 0.015625 356.500000
+output: 5.570313
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 0.031250 -1.000000
+output: -0.031250
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: -248562.750000 23.062500
+output: -5732478.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmul.s ::
+input: -45786.500000 0.000000
+output: -0.000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 456.000000 456.250000
+output: 208050.000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 34.031250 3.000000
+output: 102.093750
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 45786.750000 -1.000000
+output: -45786.750000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 1752065.000000 1384.500000
+output: 2425734144.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmul.s ::
+input: 107.000000 -7.000000
+output: -749.000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: -45667.250000 100.000000
+output: -4566725.000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: -7.000000 -5786.500000
+output: 40505.500000
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: -347856.500000 1752.000000
+output: -609444544.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmul.s ::
+input: 356047.500000 0.015625
+output: 5563.242188
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: -1.000000 0.031250
+output: -0.031250
+fcsr: 0x200
+roundig mode: +inf
+fmul.s ::
+input: 23.062500 -248562.750000
+output: -5732478.000000
+fcsr: 0x1010200
+roundig mode: -inf
+fmul.s ::
+input: 0.000000 -4578.500000
+output: -0.000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 456.250000 456.250000
+output: 208164.062500
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 3.000000 34.031250
+output: 102.093750
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: -1.000000 4578.750000
+output: -4578.750000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 1384.500000 175.000000
+output: 242287.500000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: -7.250000 107.000000
+output: -775.750000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 1000000000.000000 -456.250000
+output: -456250032128.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmul.s ::
+input: -5786.500000 -7.250000
+output: 41952.125000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 1752.000000 -3478.500000
+output: -6094332.000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 0.015625 356.500000
+output: 5.570312
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 0.031250 -1.000000
+output: -0.031250
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: -248562.750000 23.062500
+output: -5732478.500000
+fcsr: 0x1010300
+roundig mode: -inf
+fmul.s ::
+input: -45786.500000 0.000000
+output: -0.000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 456.000000 456.250000
+output: 208050.000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 34.031250 3.000000
+output: 102.093750
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 45786.750000 -1.000000
+output: -45786.750000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 1752065.000000 1384.500000
+output: 2425733888.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmul.s ::
+input: 107.000000 -7.000000
+output: -749.000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: -45667.250000 100.000000
+output: -4566725.000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: -7.000000 -5786.500000
+output: 40505.500000
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: -347856.500000 1752.000000
+output: -609444608.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmul.s ::
+input: 356047.500000 0.015625
+output: 5563.242187
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: -1.000000 0.031250
+output: -0.031250
+fcsr: 0x300
+roundig mode: -inf
+fmul.s ::
+input: 23.062500 -248562.750000
+output: -5732478.500000
+fcsr: 0x1010300
+roundig mode: near
+fmul.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -0.000000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 456.250000000000000 456.250000000000000
+output: 208164.062500000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 3.000000000000000 34.031250000000000
+output: 102.093750000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -45786.750000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: -7.250000000000000 107.000000000000000
+output: -775.750000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667250000000.000000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 41952.125000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -609444588.000000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 5563.242187500000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.031250000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -5732478.421875000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -0.000000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 456.000000000000000 456.250000000000000
+output: 208050.000000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 34.031250000000000 3.000000000000000
+output: 102.093750000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -45786.750000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 2425733992.500000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -749.000000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667250000000.000000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 40505.500000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -609444588.000000000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 5563.242187500000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: -1.000000000000000 0.031250000000000
+output: -0.031250000000000
+fcsr: 0
+roundig mode: near
+fmul.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -5732478.421875000000000
+fcsr: 0
+roundig mode: zero
+fmul.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 456.250000000000000 456.250000000000000
+output: 208164.062500000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 3.000000000000000 34.031250000000000
+output: 102.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: -7.250000000000000 107.000000000000000
+output: -775.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667250000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 41952.125000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -609444588.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 5563.242187500000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -5732478.421875000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 456.000000000000000 456.250000000000000
+output: 208050.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 34.031250000000000 3.000000000000000
+output: 102.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 2425733992.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -749.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667250000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 40505.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -609444588.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 5563.242187500000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: -1.000000000000000 0.031250000000000
+output: -0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmul.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -5732478.421875000000000
+fcsr: 0x100
+roundig mode: +inf
+fmul.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 456.250000000000000 456.250000000000000
+output: 208164.062500000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 3.000000000000000 34.031250000000000
+output: 102.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: -7.250000000000000 107.000000000000000
+output: -775.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667250000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 41952.125000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -609444588.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 5563.242187500000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -5732478.421875000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 456.000000000000000 456.250000000000000
+output: 208050.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 34.031250000000000 3.000000000000000
+output: 102.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 2425733992.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -749.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667250000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 40505.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -609444588.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 5563.242187500000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: -1.000000000000000 0.031250000000000
+output: -0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmul.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -5732478.421875000000000
+fcsr: 0x200
+roundig mode: -inf
+fmul.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 456.250000000000000 456.250000000000000
+output: 208164.062500000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 3.000000000000000 34.031250000000000
+output: 102.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: -7.250000000000000 107.000000000000000
+output: -775.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667250000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 41952.125000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -609444588.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 5563.242187500000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -5732478.421875000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 456.000000000000000 456.250000000000000
+output: 208050.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 34.031250000000000 3.000000000000000
+output: 102.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 2425733992.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -749.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667250000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 40505.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -609444588.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 5563.242187500000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: -1.000000000000000 0.031250000000000
+output: -0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmul.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -5732478.421875000000000
+fcsr: 0x300
+roundig mode: near
+fdiv.s ::
+input: 0.000000 -4578.500000
+output: -0.000000
+fcsr: 0
+roundig mode: near
+fdiv.s ::
+input: 456.250000 456.250000
+output: 1.000000
+fcsr: 0
+roundig mode: near
+fdiv.s ::
+input: 3.000000 34.031250
+output: 0.088154
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: -1.000000 4578.750000
+output: -0.000218
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: 1384.500000 175.000000
+output: 7.911428
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: -7.250000 107.000000
+output: -0.067757
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: 1000000000.000000 -456.250000
+output: -2191780.750000
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: -5786.500000 -7.250000
+output: 798.137939
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: 1752.000000 -3478.500000
+output: -0.503665
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: 0.015625 356.500000
+output: 0.000044
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: 0.031250 -1.000000
+output: -0.031250
+fcsr: 0
+roundig mode: near
+fdiv.s ::
+input: -248562.750000 23.062500
+output: -10777.789062
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: -45786.500000 0.000000
+output: -inf
+fcsr: 0x8080000
+roundig mode: near
+fdiv.s ::
+input: 456.000000 456.250000
+output: 0.999452
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: 34.031250 3.000000
+output: 11.343750
+fcsr: 0
+roundig mode: near
+fdiv.s ::
+input: 45786.750000 -1.000000
+output: -45786.750000
+fcsr: 0
+roundig mode: near
+fdiv.s ::
+input: 1752065.000000 1384.500000
+output: 1265.485718
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: 107.000000 -7.000000
+output: -15.285714
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: -45667.250000 100.000000
+output: -456.672485
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: -7.000000 -5786.500000
+output: 0.001210
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: -347856.500000 1752.000000
+output: -198.548233
+fcsr: 0x1010000
+roundig mode: near
+fdiv.s ::
+input: 356047.500000 0.015625
+output: 22787040.000000
+fcsr: 0
+roundig mode: near
+fdiv.s ::
+input: -1.000000 0.031250
+output: -32.000000
+fcsr: 0
+roundig mode: near
+fdiv.s ::
+input: 23.062500 -248562.750000
+output: -0.000093
+fcsr: 0x1010000
+roundig mode: zero
+fdiv.s ::
+input: 0.000000 -4578.500000
+output: -0.000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.s ::
+input: 456.250000 456.250000
+output: 1.000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.s ::
+input: 3.000000 34.031250
+output: 0.088154
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: -1.000000 4578.750000
+output: -0.000218
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: 1384.500000 175.000000
+output: 7.911428
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: -7.250000 107.000000
+output: -0.067757
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: 1000000000.000000 -456.250000
+output: -2191780.750000
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: -5786.500000 -7.250000
+output: 798.137878
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: 1752.000000 -3478.500000
+output: -0.503665
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: 0.015625 356.500000
+output: 0.000043
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: 0.031250 -1.000000
+output: -0.031250
+fcsr: 0x100
+roundig mode: zero
+fdiv.s ::
+input: -248562.750000 23.062500
+output: -10777.788085
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: -45786.500000 0.000000
+output: -inf
+fcsr: 0x8080100
+roundig mode: zero
+fdiv.s ::
+input: 456.000000 456.250000
+output: 0.999452
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: 34.031250 3.000000
+output: 11.343750
+fcsr: 0x100
+roundig mode: zero
+fdiv.s ::
+input: 45786.750000 -1.000000
+output: -45786.750000
+fcsr: 0x100
+roundig mode: zero
+fdiv.s ::
+input: 1752065.000000 1384.500000
+output: 1265.485717
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: 107.000000 -7.000000
+output: -15.285714
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: -45667.250000 100.000000
+output: -456.672485
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: -7.000000 -5786.500000
+output: 0.001209
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: -347856.500000 1752.000000
+output: -198.548217
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.s ::
+input: 356047.500000 0.015625
+output: 22787040.000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.s ::
+input: -1.000000 0.031250
+output: -32.000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.s ::
+input: 23.062500 -248562.750000
+output: -0.000092
+fcsr: 0x1010100
+roundig mode: +inf
+fdiv.s ::
+input: 0.000000 -4578.500000
+output: -0.000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.s ::
+input: 456.250000 456.250000
+output: 1.000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.s ::
+input: 3.000000 34.031250
+output: 0.088155
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: -1.000000 4578.750000
+output: -0.000218
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: 1384.500000 175.000000
+output: 7.911429
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: -7.250000 107.000000
+output: -0.067757
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: 1000000000.000000 -456.250000
+output: -2191780.750000
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: -5786.500000 -7.250000
+output: 798.137940
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: 1752.000000 -3478.500000
+output: -0.503665
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: 0.015625 356.500000
+output: 0.000044
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: 0.031250 -1.000000
+output: -0.031250
+fcsr: 0x200
+roundig mode: +inf
+fdiv.s ::
+input: -248562.750000 23.062500
+output: -10777.788085
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: -45786.500000 0.000000
+output: -inf
+fcsr: 0x8080200
+roundig mode: +inf
+fdiv.s ::
+input: 456.000000 456.250000
+output: 0.999453
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: 34.031250 3.000000
+output: 11.343750
+fcsr: 0x200
+roundig mode: +inf
+fdiv.s ::
+input: 45786.750000 -1.000000
+output: -45786.750000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.s ::
+input: 1752065.000000 1384.500000
+output: 1265.485840
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: 107.000000 -7.000000
+output: -15.285714
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: -45667.250000 100.000000
+output: -456.672485
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: -7.000000 -5786.500000
+output: 0.001210
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: -347856.500000 1752.000000
+output: -198.548217
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.s ::
+input: 356047.500000 0.015625
+output: 22787040.000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.s ::
+input: -1.000000 0.031250
+output: -32.000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.s ::
+input: 23.062500 -248562.750000
+output: -0.000092
+fcsr: 0x1010200
+roundig mode: -inf
+fdiv.s ::
+input: 0.000000 -4578.500000
+output: -0.000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.s ::
+input: 456.250000 456.250000
+output: 1.000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.s ::
+input: 3.000000 34.031250
+output: 0.088154
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: -1.000000 4578.750000
+output: -0.000219
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: 1384.500000 175.000000
+output: 7.911428
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: -7.250000 107.000000
+output: -0.067758
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: 1000000000.000000 -456.250000
+output: -2191781.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: -5786.500000 -7.250000
+output: 798.137878
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: 1752.000000 -3478.500000
+output: -0.503666
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: 0.015625 356.500000
+output: 0.000043
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: 0.031250 -1.000000
+output: -0.031250
+fcsr: 0x300
+roundig mode: -inf
+fdiv.s ::
+input: -248562.750000 23.062500
+output: -10777.789063
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: -45786.500000 0.000000
+output: -inf
+fcsr: 0x8080300
+roundig mode: -inf
+fdiv.s ::
+input: 456.000000 456.250000
+output: 0.999452
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: 34.031250 3.000000
+output: 11.343750
+fcsr: 0x300
+roundig mode: -inf
+fdiv.s ::
+input: 45786.750000 -1.000000
+output: -45786.750000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.s ::
+input: 1752065.000000 1384.500000
+output: 1265.485717
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: 107.000000 -7.000000
+output: -15.285716
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: -45667.250000 100.000000
+output: -456.672516
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: -7.000000 -5786.500000
+output: 0.001209
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: -347856.500000 1752.000000
+output: -198.548234
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.s ::
+input: 356047.500000 0.015625
+output: 22787040.000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.s ::
+input: -1.000000 0.031250
+output: -32.000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.s ::
+input: 23.062500 -248562.750000
+output: -0.000093
+fcsr: 0x1010300
+roundig mode: near
+fdiv.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -0.000000000000000
+fcsr: 0
+roundig mode: near
+fdiv.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1.000000000000000
+fcsr: 0
+roundig mode: near
+fdiv.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0.088154269972452
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -0.000021840379586
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0.000790210408860
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: -7.250000000000000 107.000000000000000
+output: -0.067757009345794
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -21897.530505997186992
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 798.137931034482790
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -0.005036559615819
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.000000043884594
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.031250000000000
+fcsr: 0
+roundig mode: near
+fdiv.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -10777.788617886179054
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -inf
+fcsr: 0x8080000
+roundig mode: near
+fdiv.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0.999452054794521
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: 34.031250000000000 3.000000000000000
+output: 11.343750000000000
+fcsr: 0
+roundig mode: near
+fdiv.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -45786.750000000000000
+fcsr: 0
+roundig mode: near
+fdiv.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1265.485734922354595
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -15.285714285714286
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -0.000045667250000
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0.001209712261298
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -198.548230593607315
+fcsr: 0x1010000
+roundig mode: near
+fdiv.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 22787040.000000000000000
+fcsr: 0
+roundig mode: near
+fdiv.d ::
+input: -1.000000000000000 0.031250000000000
+output: -32.000000000000000
+fcsr: 0
+roundig mode: near
+fdiv.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -0.000092783411835
+fcsr: 0x1010000
+roundig mode: zero
+fdiv.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0.088154269972451
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -0.000021840379585
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0.000790210408860
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: -7.250000000000000 107.000000000000000
+output: -0.067757009345794
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -21897.530505997183354
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 798.137931034482676
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -0.005036559615818
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.000000043884594
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -10777.788617886177235
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -inf
+fcsr: 0x8080100
+roundig mode: zero
+fdiv.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0.999452054794520
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: 34.031250000000000 3.000000000000000
+output: 11.343750000000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1265.485734922354595
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -15.285714285714284
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -0.000045667249999
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0.001209712261297
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -198.548230593607286
+fcsr: 0x1010100
+roundig mode: zero
+fdiv.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 22787040.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.d ::
+input: -1.000000000000000 0.031250000000000
+output: -32.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fdiv.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -0.000092783411834
+fcsr: 0x1010100
+roundig mode: +inf
+fdiv.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0.088154269972452
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -0.000021840379585
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0.000790210408861
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: -7.250000000000000 107.000000000000000
+output: -0.067757009345794
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -21897.530505997183354
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 798.137931034482790
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -0.005036559615818
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.000000043884595
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -10777.788617886177235
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -inf
+fcsr: 0x8080200
+roundig mode: +inf
+fdiv.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0.999452054794521
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: 34.031250000000000 3.000000000000000
+output: 11.343750000000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1265.485734922354823
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -15.285714285714284
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -0.000045667249999
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0.001209712261298
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -198.548230593607286
+fcsr: 0x1010200
+roundig mode: +inf
+fdiv.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 22787040.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.d ::
+input: -1.000000000000000 0.031250000000000
+output: -32.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fdiv.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -0.000092783411834
+fcsr: 0x1010200
+roundig mode: -inf
+fdiv.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0.088154269972451
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -0.000021840379586
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0.000790210408860
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: -7.250000000000000 107.000000000000000
+output: -0.067757009345795
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -21897.530505997186993
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 798.137931034482676
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -0.005036559615819
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.000000043884594
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -10777.788617886179055
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -inf
+fcsr: 0x8080300
+roundig mode: -inf
+fdiv.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0.999452054794520
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: 34.031250000000000 3.000000000000000
+output: 11.343750000000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1265.485734922354595
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -15.285714285714287
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -0.000045667250001
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0.001209712261297
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -198.548230593607315
+fcsr: 0x1010300
+roundig mode: -inf
+fdiv.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 22787040.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.d ::
+input: -1.000000000000000 0.031250000000000
+output: -32.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fdiv.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -0.000092783411835
+fcsr: 0x1010300
+roundig mode: near
+fmadd.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: -347856.500000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 456.250000 456.250000 356047.500000
+output: 564211.562500
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 3.000000 34.031250 -1.000000
+output: 101.093750
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: -1.000000 4578.750000 23.062500
+output: -4555.687500
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 1384.500000 175.000000 1752.000000
+output: 244039.500000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: -7.250000 107.000000 0.015625
+output: -775.734375
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: -456249999360.000000
+fcsr: 0x1010000
+roundig mode: near
+fmadd.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: -206610.625000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: -6092947.500000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 0.015625 356.500000 -7.250000
+output: -1.679688
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x1010000
+roundig mode: near
+fmadd.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: -5738265.000000
+fcsr: 0x1010000
+roundig mode: near
+fmadd.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: -347856.750000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 456.000000 456.250000 356047.750000
+output: 564097.750000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 34.031250 3.000000 -1.000000
+output: 101.093750
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 45786.750000 -1.000000 23.031250
+output: -45763.718750
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: 2425733888.000000
+fcsr: 0x1010000
+roundig mode: near
+fmadd.s ::
+input: 107.000000 -7.000000 456.250000
+output: -292.750000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: -45667.250000 100.000000 3.000000
+output: -4566722.000000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: 40504.500000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: -609490368.000000
+fcsr: 0x1010000
+roundig mode: near
+fmadd.s ::
+input: 356047.500000 0.015625 456.000000
+output: 6019.242188
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: -1.000000 0.031250 34.031250
+output: 34.000000
+fcsr: 0
+roundig mode: near
+fmadd.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: -5686692.500000
+fcsr: 0x1010000
+roundig mode: zero
+fmadd.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: -347856.500000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 456.250000 456.250000 356047.500000
+output: 564211.562500
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 3.000000 34.031250 -1.000000
+output: 101.093750
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: -1.000000 4578.750000 23.062500
+output: -4555.687500
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 1384.500000 175.000000 1752.000000
+output: 244039.500000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: -7.250000 107.000000 0.015625
+output: -775.734375
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: -456249999360.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmadd.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: -206610.625000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: -6092947.500000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 0.015625 356.500000 -7.250000
+output: -1.679687
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: 999999936.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmadd.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: -5738264.500000
+fcsr: 0x1010100
+roundig mode: zero
+fmadd.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: -347856.750000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 456.000000 456.250000 356047.750000
+output: 564097.750000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 34.031250 3.000000 -1.000000
+output: 101.093750
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 45786.750000 -1.000000 23.031250
+output: -45763.718750
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: 2425733888.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmadd.s ::
+input: 107.000000 -7.000000 456.250000
+output: -292.750000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: -45667.250000 100.000000 3.000000
+output: -4566722.000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: 40504.500000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: -609490368.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmadd.s ::
+input: 356047.500000 0.015625 456.000000
+output: 6019.242187
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: -1.000000 0.031250 34.031250
+output: 34.000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: -5686692.000000
+fcsr: 0x1010100
+roundig mode: +inf
+fmadd.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: -347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 456.250000 456.250000 356047.500000
+output: 564211.562500
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 3.000000 34.031250 -1.000000
+output: 101.093750
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: -1.000000 4578.750000 23.062500
+output: -4555.687500
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 1384.500000 175.000000 1752.000000
+output: 244039.500000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: -7.250000 107.000000 0.015625
+output: -775.734375
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: -456249999360.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmadd.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: -206610.625000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: -6092947.500000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 0.015625 356.500000 -7.250000
+output: -1.679687
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmadd.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: -5738264.500000
+fcsr: 0x1010200
+roundig mode: +inf
+fmadd.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: -347856.750000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 456.000000 456.250000 356047.750000
+output: 564097.750000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 34.031250 3.000000 -1.000000
+output: 101.093750
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 45786.750000 -1.000000 23.031250
+output: -45763.718750
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: 2425734144.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmadd.s ::
+input: 107.000000 -7.000000 456.250000
+output: -292.750000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: -45667.250000 100.000000 3.000000
+output: -4566722.000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: 40504.500000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: -609490368.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmadd.s ::
+input: 356047.500000 0.015625 456.000000
+output: 6019.242188
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: -1.000000 0.031250 34.031250
+output: 34.000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: -5686692.000000
+fcsr: 0x1010200
+roundig mode: -inf
+fmadd.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: -347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 456.250000 456.250000 356047.500000
+output: 564211.562500
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 3.000000 34.031250 -1.000000
+output: 101.093750
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: -1.000000 4578.750000 23.062500
+output: -4555.687500
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 1384.500000 175.000000 1752.000000
+output: 244039.500000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: -7.250000 107.000000 0.015625
+output: -775.734375
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: -456250032128.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmadd.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: -206610.625000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: -6092947.500000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 0.015625 356.500000 -7.250000
+output: -1.679688
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: 999999936.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmadd.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: -5738265.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmadd.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: -347856.750000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 456.000000 456.250000 356047.750000
+output: 564097.750000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 34.031250 3.000000 -1.000000
+output: 101.093750
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 45786.750000 -1.000000 23.031250
+output: -45763.718750
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: 2425733888.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmadd.s ::
+input: 107.000000 -7.000000 456.250000
+output: -292.750000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: -45667.250000 100.000000 3.000000
+output: -4566722.000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: 40504.500000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: -609490432.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmadd.s ::
+input: 356047.500000 0.015625 456.000000
+output: 6019.242187
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: -1.000000 0.031250 34.031250
+output: 34.000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: -5686692.500000
+fcsr: 0x1010300
+roundig mode: near
+fmadd.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: 564211.562500000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: 101.093750000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: -45763.687500000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: 2425735744.500000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: -775.734375000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: -45667249999999.968750000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: -206610.625000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: -609443203.500000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: 5555.992187500000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: 999999999.968750000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: -5738264.921875000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: -347856.750000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: 564097.750000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: 101.093750000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: -45763.718750000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: -292.750000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: -45667249999997.000000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: 40504.500000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: -609490374.500000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: 6019.242187500000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: 34.000000000000000
+fcsr: 0
+roundig mode: near
+fmadd.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: -5686692.390625000000000
+fcsr: 0
+roundig mode: zero
+fmadd.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: 564211.562500000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: 101.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: -45763.687500000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: 2425735744.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: -775.734375000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: -45667249999999.968750000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: -206610.625000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: -609443203.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: 5555.992187500000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: 999999999.968750000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: -5738264.921875000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: -347856.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: 564097.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: 101.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: -45763.718750000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: -292.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: -45667249999997.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: 40504.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: -609490374.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: 6019.242187500000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: 34.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmadd.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: -5686692.390625000000000
+fcsr: 0x100
+roundig mode: +inf
+fmadd.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: 564211.562500000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: 101.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: -45763.687500000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: 2425735744.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: -775.734375000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: -45667249999999.968750000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: -206610.625000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: -609443203.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: 5555.992187500000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: 999999999.968750000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: -5738264.921875000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: -347856.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: 564097.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: 101.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: -45763.718750000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: -292.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: -45667249999997.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: 40504.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: -609490374.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: 6019.242187500000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: 34.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmadd.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: -5686692.390625000000000
+fcsr: 0x200
+roundig mode: -inf
+fmadd.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: 564211.562500000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: 101.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: -45763.687500000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: 2425735744.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: -775.734375000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: -45667249999999.968750000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: -206610.625000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: -609443203.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: 5555.992187500000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: 999999999.968750000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: -5738264.921875000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: -347856.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: 564097.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: 101.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: -45763.718750000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: -292.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: -45667249999997.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: 40504.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: -609490374.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: 6019.242187500000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: 34.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmadd.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: -5686692.390625000000000
+fcsr: 0x300
+roundig mode: near
+fmsub.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: 347856.500000
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 456.250000 456.250000 356047.500000
+output: -147883.437500
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 3.000000 34.031250 -1.000000
+output: 103.093750
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: -1.000000 4578.750000 23.062500
+output: -4601.812500
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 1384.500000 175.000000 1752.000000
+output: 240535.500000
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: -7.250000 107.000000 0.015625
+output: -775.765625
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: -456249999360.000000
+fcsr: 0x1010000
+roundig mode: near
+fmsub.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: 290514.875000
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: -6095716.500000
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 0.015625 356.500000 -7.250000
+output: 12.820312
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: -1000000000.000000
+fcsr: 0x1010000
+roundig mode: near
+fmsub.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: -5726692.000000
+fcsr: 0x1010000
+roundig mode: near
+fmsub.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: 347856.750000
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 456.000000 456.250000 356047.750000
+output: -147997.750000
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 34.031250 3.000000 -1.000000
+output: 103.093750
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 45786.750000 -1.000000 23.031250
+output: -45809.781250
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: 2425733888.000000
+fcsr: 0x1010000
+roundig mode: near
+fmsub.s ::
+input: 107.000000 -7.000000 456.250000
+output: -1205.250000
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: -45667.250000 100.000000 3.000000
+output: -4566728.000000
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: 40506.500000
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: -609398784.000000
+fcsr: 0x1010000
+roundig mode: near
+fmsub.s ::
+input: 356047.500000 0.015625 456.000000
+output: 5107.242188
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: -1.000000 0.031250 34.031250
+output: -34.062500
+fcsr: 0
+roundig mode: near
+fmsub.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: -5778264.500000
+fcsr: 0x1010000
+roundig mode: zero
+fmsub.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: 347856.500000
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 456.250000 456.250000 356047.500000
+output: -147883.437500
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 3.000000 34.031250 -1.000000
+output: 103.093750
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: -1.000000 4578.750000 23.062500
+output: -4601.812500
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 1384.500000 175.000000 1752.000000
+output: 240535.500000
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: -7.250000 107.000000 0.015625
+output: -775.765625
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: -456249999360.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmsub.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: 290514.875000
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: -6095716.500000
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 0.015625 356.500000 -7.250000
+output: 12.820312
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: -1000000000.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmsub.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: -5726691.500000
+fcsr: 0x1010100
+roundig mode: zero
+fmsub.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: 347856.750000
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 456.000000 456.250000 356047.750000
+output: -147997.750000
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 34.031250 3.000000 -1.000000
+output: 103.093750
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 45786.750000 -1.000000 23.031250
+output: -45809.781250
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: 2425733888.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmsub.s ::
+input: 107.000000 -7.000000 456.250000
+output: -1205.250000
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: -45667.250000 100.000000 3.000000
+output: -4566728.000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: 40506.500000
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: -609398784.000000
+fcsr: 0x1010100
+roundig mode: zero
+fmsub.s ::
+input: 356047.500000 0.015625 456.000000
+output: 5107.242187
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: -1.000000 0.031250 34.031250
+output: -34.062500
+fcsr: 0x100
+roundig mode: zero
+fmsub.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: -5778264.000000
+fcsr: 0x1010100
+roundig mode: +inf
+fmsub.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: 347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 456.250000 456.250000 356047.500000
+output: -147883.437500
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 3.000000 34.031250 -1.000000
+output: 103.093750
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: -1.000000 4578.750000 23.062500
+output: -4601.812500
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 1384.500000 175.000000 1752.000000
+output: 240535.500000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: -7.250000 107.000000 0.015625
+output: -775.765625
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: -456249999360.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmsub.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: 290514.875000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: -6095716.500000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 0.015625 356.500000 -7.250000
+output: 12.820313
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: -1000000000.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmsub.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: -5726691.500000
+fcsr: 0x1010200
+roundig mode: +inf
+fmsub.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: 347856.750000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 456.000000 456.250000 356047.750000
+output: -147997.750000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 34.031250 3.000000 -1.000000
+output: 103.093750
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 45786.750000 -1.000000 23.031250
+output: -45809.781250
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: 2425734144.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmsub.s ::
+input: 107.000000 -7.000000 456.250000
+output: -1205.250000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: -45667.250000 100.000000 3.000000
+output: -4566728.000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: 40506.500000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: -609398784.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fmsub.s ::
+input: 356047.500000 0.015625 456.000000
+output: 5107.242188
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: -1.000000 0.031250 34.031250
+output: -34.062500
+fcsr: 0x200
+roundig mode: +inf
+fmsub.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: -5778264.000000
+fcsr: 0x1010200
+roundig mode: -inf
+fmsub.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: 347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 456.250000 456.250000 356047.500000
+output: -147883.437500
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 3.000000 34.031250 -1.000000
+output: 103.093750
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: -1.000000 4578.750000 23.062500
+output: -4601.812500
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 1384.500000 175.000000 1752.000000
+output: 240535.500000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: -7.250000 107.000000 0.015625
+output: -775.765625
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: -456250032128.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmsub.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: 290514.875000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: -6095716.500000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 0.015625 356.500000 -7.250000
+output: 12.820312
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: -1000000064.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmsub.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: -5726692.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmsub.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: 347856.750000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 456.000000 456.250000 356047.750000
+output: -147997.750000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 34.031250 3.000000 -1.000000
+output: 103.093750
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 45786.750000 -1.000000 23.031250
+output: -45809.781250
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: 2425733888.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmsub.s ::
+input: 107.000000 -7.000000 456.250000
+output: -1205.250000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: -45667.250000 100.000000 3.000000
+output: -4566728.000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: 40506.500000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: -609398848.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fmsub.s ::
+input: 356047.500000 0.015625 456.000000
+output: 5107.242187
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: -1.000000 0.031250 34.031250
+output: -34.062500
+fcsr: 0x300
+roundig mode: -inf
+fmsub.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: -5778264.500000
+fcsr: 0x1010300
+roundig mode: near
+fmsub.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: -147883.437500000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: 103.093750000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: -45809.812500000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: 2425732240.500000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: -775.765625000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: -45667250000000.031250000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: 290514.875000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: -609445972.500000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: 5570.492187500000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: -1000000000.031250000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: -5726691.921875000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: 347856.750000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: -147997.750000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: 103.093750000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: -45809.781250000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: -1205.250000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: -45667250000003.000000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: 40506.500000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: -609398801.500000000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: 5107.242187500000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: -34.062500000000000
+fcsr: 0
+roundig mode: near
+fmsub.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: -5778264.453125000000000
+fcsr: 0
+roundig mode: zero
+fmsub.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: -147883.437500000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: 103.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: -45809.812500000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: 2425732240.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: -775.765625000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: -45667250000000.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: 290514.875000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: -609445972.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: 5570.492187500000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: -1000000000.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: -5726691.921875000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: 347856.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: -147997.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: 103.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: -45809.781250000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: -1205.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: -45667250000003.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: 40506.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: -609398801.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: 5107.242187500000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: -34.062500000000000
+fcsr: 0x100
+roundig mode: zero
+fmsub.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: -5778264.453125000000000
+fcsr: 0x100
+roundig mode: +inf
+fmsub.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: -147883.437500000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: 103.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: -45809.812500000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: 2425732240.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: -775.765625000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: -45667250000000.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: 290514.875000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: -609445972.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: 5570.492187500000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: -1000000000.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: -5726691.921875000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: 347856.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: -147997.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: 103.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: -45809.781250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: -1205.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: -45667250000003.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: 40506.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: -609398801.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: 5107.242187500000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: -34.062500000000000
+fcsr: 0x200
+roundig mode: +inf
+fmsub.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: -5778264.453125000000000
+fcsr: 0x200
+roundig mode: -inf
+fmsub.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: -147883.437500000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: 103.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: -45809.812500000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: 2425732240.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: -775.765625000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: -45667250000000.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: 290514.875000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: -609445972.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: 5570.492187500000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: -1000000000.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: -5726691.921875000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: 347856.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: -147997.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: 103.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: -45809.781250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: 2425733992.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: -1205.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: -45667250000003.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: 40506.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: -609398801.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: 5107.242187500000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: -34.062500000000000
+fcsr: 0x300
+roundig mode: -inf
+fmsub.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: -5778264.453125000000000
+fcsr: 0x300
+roundig mode: near
+fnmadd.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: 347856.500000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 456.250000 456.250000 356047.500000
+output: -564211.562500
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 3.000000 34.031250 -1.000000
+output: -101.093750
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: -1.000000 4578.750000 23.062500
+output: 4555.687500
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 1384.500000 175.000000 1752.000000
+output: -244039.500000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: -7.250000 107.000000 0.015625
+output: 775.734375
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: 456249999360.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmadd.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: 206610.625000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: 6092947.500000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 0.015625 356.500000 -7.250000
+output: 1.679688
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: -1000000000.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmadd.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: 5738265.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmadd.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: 347856.750000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 456.000000 456.250000 356047.750000
+output: -564097.750000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 34.031250 3.000000 -1.000000
+output: -101.093750
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 45786.750000 -1.000000 23.031250
+output: 45763.718750
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: -2425733888.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmadd.s ::
+input: 107.000000 -7.000000 456.250000
+output: 292.750000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: -45667.250000 100.000000 3.000000
+output: 4566722.000000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: -40504.500000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: 609490368.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmadd.s ::
+input: 356047.500000 0.015625 456.000000
+output: -6019.242188
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: -1.000000 0.031250 34.031250
+output: -34.000000
+fcsr: 0
+roundig mode: near
+fnmadd.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: 5686692.500000
+fcsr: 0x1010000
+roundig mode: zero
+fnmadd.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: 347856.500000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 456.250000 456.250000 356047.500000
+output: -564211.562500
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 3.000000 34.031250 -1.000000
+output: -101.093750
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: -1.000000 4578.750000 23.062500
+output: 4555.687500
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 1384.500000 175.000000 1752.000000
+output: -244039.500000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: -7.250000 107.000000 0.015625
+output: 775.734375
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: 456249999360.000000
+fcsr: 0x1010100
+roundig mode: zero
+fnmadd.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: 206610.625000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: 6092947.500000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 0.015625 356.500000 -7.250000
+output: 1.679687
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: -999999936.000000
+fcsr: 0x1010100
+roundig mode: zero
+fnmadd.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: 5738264.500000
+fcsr: 0x1010100
+roundig mode: zero
+fnmadd.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: 347856.750000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 456.000000 456.250000 356047.750000
+output: -564097.750000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 34.031250 3.000000 -1.000000
+output: -101.093750
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 45786.750000 -1.000000 23.031250
+output: 45763.718750
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: -2425733888.000000
+fcsr: 0x1010100
+roundig mode: zero
+fnmadd.s ::
+input: 107.000000 -7.000000 456.250000
+output: 292.750000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: -45667.250000 100.000000 3.000000
+output: 4566722.000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: -40504.500000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: 609490368.000000
+fcsr: 0x1010100
+roundig mode: zero
+fnmadd.s ::
+input: 356047.500000 0.015625 456.000000
+output: -6019.242187
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: -1.000000 0.031250 34.031250
+output: -34.000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: 5686692.000000
+fcsr: 0x1010100
+roundig mode: +inf
+fnmadd.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: 347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 456.250000 456.250000 356047.500000
+output: -564211.562500
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 3.000000 34.031250 -1.000000
+output: -101.093750
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: -1.000000 4578.750000 23.062500
+output: 4555.687500
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 1384.500000 175.000000 1752.000000
+output: -244039.500000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: -7.250000 107.000000 0.015625
+output: 775.734375
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: 456249999360.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmadd.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: 206610.625000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: 6092947.500000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 0.015625 356.500000 -7.250000
+output: 1.679688
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: -1000000000.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmadd.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: 5738264.500000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmadd.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: 347856.750000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 456.000000 456.250000 356047.750000
+output: -564097.750000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 34.031250 3.000000 -1.000000
+output: -101.093750
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 45786.750000 -1.000000 23.031250
+output: 45763.718750
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: -2425734144.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmadd.s ::
+input: 107.000000 -7.000000 456.250000
+output: 292.750000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: -45667.250000 100.000000 3.000000
+output: 4566722.000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: -40504.500000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: 609490368.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmadd.s ::
+input: 356047.500000 0.015625 456.000000
+output: -6019.242187
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: -1.000000 0.031250 34.031250
+output: -34.000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: 5686692.000000
+fcsr: 0x1010200
+roundig mode: -inf
+fnmadd.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: 347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 456.250000 456.250000 356047.500000
+output: -564211.562500
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 3.000000 34.031250 -1.000000
+output: -101.093750
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: -1.000000 4578.750000 23.062500
+output: 4555.687500
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 1384.500000 175.000000 1752.000000
+output: -244039.500000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: -7.250000 107.000000 0.015625
+output: 775.734375
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: 456250032128.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmadd.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: 206610.625000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: 6092947.500000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 0.015625 356.500000 -7.250000
+output: 1.679687
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: -999999936.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmadd.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: 5738265.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmadd.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: 347856.750000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 456.000000 456.250000 356047.750000
+output: -564097.750000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 34.031250 3.000000 -1.000000
+output: -101.093750
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 45786.750000 -1.000000 23.031250
+output: 45763.718750
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: -2425733888.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmadd.s ::
+input: 107.000000 -7.000000 456.250000
+output: 292.750000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: -45667.250000 100.000000 3.000000
+output: 4566722.000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: -40504.500000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: 609490432.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmadd.s ::
+input: 356047.500000 0.015625 456.000000
+output: -6019.242188
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: -1.000000 0.031250 34.031250
+output: -34.000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: 5686692.500000
+fcsr: 0x1010300
+roundig mode: near
+fnmadd.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: -564211.562500000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: -101.093750000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: 45763.687500000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: -2425735744.500000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: 775.734375000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: 45667249999999.968750000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: 206610.625000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: 609443203.500000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: -5555.992187500000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: -999999999.968750000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: 5738264.921875000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: 347856.750000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: -564097.750000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: -101.093750000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: 45763.718750000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: -2425733992.500000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: 292.750000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: 45667249999997.000000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: -40504.500000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: 609490374.500000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: -6019.242187500000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: -34.000000000000000
+fcsr: 0
+roundig mode: near
+fnmadd.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: 5686692.390625000000000
+fcsr: 0
+roundig mode: zero
+fnmadd.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: -564211.562500000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: -101.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: 45763.687500000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: -2425735744.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: 775.734375000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: 45667249999999.968750000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: 206610.625000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: 609443203.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: -5555.992187500000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: -999999999.968750000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: 5738264.921875000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: 347856.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: -564097.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: -101.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: 45763.718750000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: -2425733992.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: 292.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: 45667249999997.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: -40504.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: 609490374.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: -6019.242187500000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: -34.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmadd.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: 5686692.390625000000000
+fcsr: 0x100
+roundig mode: +inf
+fnmadd.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: -564211.562500000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: -101.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: 45763.687500000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: -2425735744.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: 775.734375000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: 45667249999999.968750000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: 206610.625000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: 609443203.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: -5555.992187500000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: -999999999.968750000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: 5738264.921875000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: 347856.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: -564097.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: -101.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: 45763.718750000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: -2425733992.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: 292.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: 45667249999997.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: -40504.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: 609490374.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: -6019.242187500000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: -34.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmadd.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: 5686692.390625000000000
+fcsr: 0x200
+roundig mode: -inf
+fnmadd.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: -564211.562500000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: -101.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: 45763.687500000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: -2425735744.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: 775.734375000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: 45667249999999.968750000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: 206610.625000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: 609443203.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: -5555.992187500000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: -999999999.968750000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: 5738264.921875000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: 347856.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: -564097.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: -101.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: 45763.718750000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: -2425733992.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: 292.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: 45667249999997.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: -40504.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: 609490374.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: -6019.242187500000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: -34.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmadd.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: 5686692.390625000000000
+fcsr: 0x300
+roundig mode: near
+fnmsub.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: -347856.500000
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 456.250000 456.250000 356047.500000
+output: 147883.437500
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 3.000000 34.031250 -1.000000
+output: -103.093750
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: -1.000000 4578.750000 23.062500
+output: 4601.812500
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 1384.500000 175.000000 1752.000000
+output: -240535.500000
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: -7.250000 107.000000 0.015625
+output: 775.765625
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: 456249999360.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmsub.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: -290514.875000
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: 6095716.500000
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 0.015625 356.500000 -7.250000
+output: -12.820312
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmsub.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: 5726692.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmsub.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: -347856.750000
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 456.000000 456.250000 356047.750000
+output: 147997.750000
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 34.031250 3.000000 -1.000000
+output: -103.093750
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 45786.750000 -1.000000 23.031250
+output: 45809.781250
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: -2425733888.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmsub.s ::
+input: 107.000000 -7.000000 456.250000
+output: 1205.250000
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: -45667.250000 100.000000 3.000000
+output: 4566728.000000
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: -40506.500000
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: 609398784.000000
+fcsr: 0x1010000
+roundig mode: near
+fnmsub.s ::
+input: 356047.500000 0.015625 456.000000
+output: -5107.242188
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: -1.000000 0.031250 34.031250
+output: 34.062500
+fcsr: 0
+roundig mode: near
+fnmsub.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: 5778264.500000
+fcsr: 0x1010000
+roundig mode: zero
+fnmsub.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: -347856.500000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 456.250000 456.250000 356047.500000
+output: 147883.437500
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 3.000000 34.031250 -1.000000
+output: -103.093750
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: -1.000000 4578.750000 23.062500
+output: 4601.812500
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 1384.500000 175.000000 1752.000000
+output: -240535.500000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: -7.250000 107.000000 0.015625
+output: 775.765625
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: 456249999360.000000
+fcsr: 0x1010100
+roundig mode: zero
+fnmsub.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: -290514.875000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: 6095716.500000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 0.015625 356.500000 -7.250000
+output: -12.820312
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x1010100
+roundig mode: zero
+fnmsub.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: 5726691.500000
+fcsr: 0x1010100
+roundig mode: zero
+fnmsub.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: -347856.750000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 456.000000 456.250000 356047.750000
+output: 147997.750000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 34.031250 3.000000 -1.000000
+output: -103.093750
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 45786.750000 -1.000000 23.031250
+output: 45809.781250
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: -2425733888.000000
+fcsr: 0x1010100
+roundig mode: zero
+fnmsub.s ::
+input: 107.000000 -7.000000 456.250000
+output: 1205.250000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: -45667.250000 100.000000 3.000000
+output: 4566728.000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: -40506.500000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: 609398784.000000
+fcsr: 0x1010100
+roundig mode: zero
+fnmsub.s ::
+input: 356047.500000 0.015625 456.000000
+output: -5107.242187
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: -1.000000 0.031250 34.031250
+output: 34.062500
+fcsr: 0x100
+roundig mode: zero
+fnmsub.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: 5778264.000000
+fcsr: 0x1010100
+roundig mode: +inf
+fnmsub.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: -347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 456.250000 456.250000 356047.500000
+output: 147883.437500
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 3.000000 34.031250 -1.000000
+output: -103.093750
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: -1.000000 4578.750000 23.062500
+output: 4601.812500
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 1384.500000 175.000000 1752.000000
+output: -240535.500000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: -7.250000 107.000000 0.015625
+output: 775.765625
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: 456249999360.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmsub.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: -290514.875000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: 6095716.500000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 0.015625 356.500000 -7.250000
+output: -12.820312
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmsub.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: 5726691.500000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmsub.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: -347856.750000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 456.000000 456.250000 356047.750000
+output: 147997.750000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 34.031250 3.000000 -1.000000
+output: -103.093750
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 45786.750000 -1.000000 23.031250
+output: 45809.781250
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: -2425734144.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmsub.s ::
+input: 107.000000 -7.000000 456.250000
+output: 1205.250000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: -45667.250000 100.000000 3.000000
+output: 4566728.000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: -40506.500000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: 609398784.000000
+fcsr: 0x1010200
+roundig mode: +inf
+fnmsub.s ::
+input: 356047.500000 0.015625 456.000000
+output: -5107.242187
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: -1.000000 0.031250 34.031250
+output: 34.062500
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: 5778264.000000
+fcsr: 0x1010200
+roundig mode: -inf
+fnmsub.s ::
+input: 0.000000 -4578.500000 -347856.500000
+output: -347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 456.250000 456.250000 356047.500000
+output: 147883.437500
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 3.000000 34.031250 -1.000000
+output: -103.093750
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: -1.000000 4578.750000 23.062500
+output: 4601.812500
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 1384.500000 175.000000 1752.000000
+output: -240535.500000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: -7.250000 107.000000 0.015625
+output: 775.765625
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 1000000000.000000 -456.250000 0.031250
+output: 456250032128.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmsub.s ::
+input: -5786.500000 -7.250000 -248562.750000
+output: -290514.875000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 1752.000000 -3478.500000 1384.500000
+output: 6095716.500000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 0.015625 356.500000 -7.250000
+output: -12.820313
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 0.031250 -1.000000 1000000000.000000
+output: 1000000064.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmsub.s ::
+input: -248562.750000 23.062500 -5786.500000
+output: 5726692.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmsub.s ::
+input: -45786.500000 0.000000 -347856.750000
+output: -347856.750000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 456.000000 456.250000 356047.750000
+output: 147997.750000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 34.031250 3.000000 -1.000000
+output: -103.093750
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 45786.750000 -1.000000 23.031250
+output: 45809.781250
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 1752065.000000 1384.500000 0.000000
+output: -2425733888.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmsub.s ::
+input: 107.000000 -7.000000 456.250000
+output: 1205.250000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: -45667.250000 100.000000 3.000000
+output: 4566728.000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: -7.000000 -5786.500000 -1.000000
+output: -40506.500000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: -347856.500000 1752.000000 -45786.500000
+output: 609398848.000000
+fcsr: 0x1010300
+roundig mode: -inf
+fnmsub.s ::
+input: 356047.500000 0.015625 456.000000
+output: -5107.242188
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: -1.000000 0.031250 34.031250
+output: 34.062500
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.s ::
+input: 23.062500 -248562.750000 45786.031250
+output: 5778264.500000
+fcsr: 0x1010300
+roundig mode: near
+fnmsub.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: 147883.437500000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: -103.093750000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: 45809.812500000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: -2425732240.500000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: 775.765625000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: 45667250000000.031250000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: -290514.875000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: 609445972.500000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: -5570.492187500000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: 1000000000.031250000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: 5726691.921875000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: -347856.750000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: 147997.750000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: -103.093750000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: 45809.781250000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: -2425733992.500000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: 1205.250000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: 45667250000003.000000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: -40506.500000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: 609398801.500000000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: -5107.242187500000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: 34.062500000000000
+fcsr: 0
+roundig mode: near
+fnmsub.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: 5778264.453125000000000
+fcsr: 0
+roundig mode: zero
+fnmsub.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: 147883.437500000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: -103.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: 45809.812500000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: -2425732240.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: 775.765625000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: 45667250000000.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: -290514.875000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: 609445972.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: -5570.492187500000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: 1000000000.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: 5726691.921875000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: -347856.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: 147997.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: -103.093750000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: 45809.781250000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: -2425733992.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: 1205.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: 45667250000003.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: -40506.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: 609398801.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: -5107.242187500000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: 34.062500000000000
+fcsr: 0x100
+roundig mode: zero
+fnmsub.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: 5778264.453125000000000
+fcsr: 0x100
+roundig mode: +inf
+fnmsub.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: 147883.437500000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: -103.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: 45809.812500000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: -2425732240.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: 775.765625000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: 45667250000000.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: -290514.875000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: 609445972.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: -5570.492187500000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: 1000000000.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: 5726691.921875000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: -347856.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: 147997.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: -103.093750000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: 45809.781250000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: -2425733992.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: 1205.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: 45667250000003.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: -40506.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: 609398801.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: -5107.242187500000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: 34.062500000000000
+fcsr: 0x200
+roundig mode: +inf
+fnmsub.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: 5778264.453125000000000
+fcsr: 0x200
+roundig mode: -inf
+fnmsub.d ::
+input: 0.000000000000000 -45786.500000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 456.250000000000000 456.250000000000000 356047.500000000000000
+output: 147883.437500000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 3.000000000000000 34.031250000000000 -1.000000000000000
+output: -103.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: -1.000000000000000 45786.750000000000000 23.062500000000000
+output: 45809.812500000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 1384.500000000000000 1752065.000000000000000 1752.000000000000000
+output: -2425732240.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: -7.250000000000000 107.000000000000000 0.015625000000000
+output: 775.765625000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 1000000000.000000000000000 -45667.250000000000000 0.031250000000000
+output: 45667250000000.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: -5786.500000000000000 -7.250000000000000 -248562.750000000000000
+output: -290514.875000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 1752.000000000000000 -347856.500000000000000 1384.500000000000000
+output: 609445972.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 0.015625000000000 356047.500000000000000 -7.250000000000000
+output: -5570.492187500000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 0.031250000000000 -1.000000000000000 1000000000.000000000000000
+output: 1000000000.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: -248562.750000000000000 23.062500000000000 -5786.500000000000000
+output: 5726691.921875000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: -45786.500000000000000 0.000000000000000 -347856.750000000000000
+output: -347856.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 456.000000000000000 456.250000000000000 356047.750000000000000
+output: 147997.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 34.031250000000000 3.000000000000000 -1.000000000000000
+output: -103.093750000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 45786.750000000000000 -1.000000000000000 23.031250000000000
+output: 45809.781250000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 1752065.000000000000000 1384.500000000000000 0.000000000000000
+output: -2425733992.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 107.000000000000000 -7.000000000000000 456.250000000000000
+output: 1205.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: -45667.250000000000000 1000000000.000000000000000 3.000000000000000
+output: 45667250000003.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: -7.000000000000000 -5786.500000000000000 -1.000000000000000
+output: -40506.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: -347856.500000000000000 1752.000000000000000 -45786.500000000000000
+output: 609398801.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 356047.500000000000000 0.015625000000000 456.000000000000000
+output: -5107.242187500000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: -1.000000000000000 0.031250000000000 34.031250000000000
+output: 34.062500000000000
+fcsr: 0x300
+roundig mode: -inf
+fnmsub.d ::
+input: 23.062500000000000 -248562.750000000000000 45786.031250000000000
+output: 5778264.453125000000000
+fcsr: 0x300
+roundig mode: near
+fmax.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 3.000000 34.031250
+output: 34.031250
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: -1.000000 4578.750000
+output: 4578.750000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 1384.500000 175.000000
+output: 1384.500000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: -7.250000 107.000000
+output: 107.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000000.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: -5786.500000 -7.250000
+output: -7.250000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 1752.000000 -3478.500000
+output: 1752.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 0.015625 356.500000
+output: 356.500000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 0.031250 -1.000000
+output: 0.031250
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: -248562.750000 23.062500
+output: 23.062500
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: -45786.500000 0.000000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 456.000000 456.250000
+output: 456.250000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 34.031250 3.000000
+output: 34.031250
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 45786.750000 -1.000000
+output: 45786.750000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 1752065.000000 1384.500000
+output: 1752065.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 107.000000 -7.000000
+output: 107.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: -45667.250000 100.000000
+output: 100.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: -7.000000 -5786.500000
+output: -7.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: -347856.500000 1752.000000
+output: 1752.000000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: -1.000000 0.031250
+output: 0.031250
+fcsr: 0
+roundig mode: near
+fmax.s ::
+input: 23.062500 -248562.750000
+output: 23.062500
+fcsr: 0
+roundig mode: zero
+fmax.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 3.000000 34.031250
+output: 34.031250
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: -1.000000 4578.750000
+output: 4578.750000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 1384.500000 175.000000
+output: 1384.500000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: -7.250000 107.000000
+output: 107.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000000.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: -5786.500000 -7.250000
+output: -7.250000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 1752.000000 -3478.500000
+output: 1752.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 0.015625 356.500000
+output: 356.500000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 0.031250 -1.000000
+output: 0.031250
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: -248562.750000 23.062500
+output: 23.062500
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: -45786.500000 0.000000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 456.000000 456.250000
+output: 456.250000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 34.031250 3.000000
+output: 34.031250
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 45786.750000 -1.000000
+output: 45786.750000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 1752065.000000 1384.500000
+output: 1752065.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 107.000000 -7.000000
+output: 107.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: -45667.250000 100.000000
+output: 100.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: -7.000000 -5786.500000
+output: -7.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: -347856.500000 1752.000000
+output: 1752.000000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: -1.000000 0.031250
+output: 0.031250
+fcsr: 0x100
+roundig mode: zero
+fmax.s ::
+input: 23.062500 -248562.750000
+output: 23.062500
+fcsr: 0x100
+roundig mode: +inf
+fmax.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 3.000000 34.031250
+output: 34.031250
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: -1.000000 4578.750000
+output: 4578.750000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 1384.500000 175.000000
+output: 1384.500000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: -7.250000 107.000000
+output: 107.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000000.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: -5786.500000 -7.250000
+output: -7.250000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 1752.000000 -3478.500000
+output: 1752.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 0.015625 356.500000
+output: 356.500000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 0.031250 -1.000000
+output: 0.031250
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: -248562.750000 23.062500
+output: 23.062500
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: -45786.500000 0.000000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 456.000000 456.250000
+output: 456.250000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 34.031250 3.000000
+output: 34.031250
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 45786.750000 -1.000000
+output: 45786.750000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 1752065.000000 1384.500000
+output: 1752065.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 107.000000 -7.000000
+output: 107.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: -45667.250000 100.000000
+output: 100.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: -7.000000 -5786.500000
+output: -7.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: -347856.500000 1752.000000
+output: 1752.000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: -1.000000 0.031250
+output: 0.031250
+fcsr: 0x200
+roundig mode: +inf
+fmax.s ::
+input: 23.062500 -248562.750000
+output: 23.062500
+fcsr: 0x200
+roundig mode: -inf
+fmax.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 3.000000 34.031250
+output: 34.031250
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: -1.000000 4578.750000
+output: 4578.750000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 1384.500000 175.000000
+output: 1384.500000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: -7.250000 107.000000
+output: 107.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000000.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: -5786.500000 -7.250000
+output: -7.250000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 1752.000000 -3478.500000
+output: 1752.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 0.015625 356.500000
+output: 356.500000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 0.031250 -1.000000
+output: 0.031250
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: -248562.750000 23.062500
+output: 23.062500
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: -45786.500000 0.000000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 456.000000 456.250000
+output: 456.250000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 34.031250 3.000000
+output: 34.031250
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 45786.750000 -1.000000
+output: 45786.750000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 1752065.000000 1384.500000
+output: 1752065.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 107.000000 -7.000000
+output: 107.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: -45667.250000 100.000000
+output: 100.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: -7.000000 -5786.500000
+output: -7.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: -347856.500000 1752.000000
+output: 1752.000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: -1.000000 0.031250
+output: 0.031250
+fcsr: 0x300
+roundig mode: -inf
+fmax.s ::
+input: 23.062500 -248562.750000
+output: 23.062500
+fcsr: 0x300
+roundig mode: near
+fmax.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 3.000000000000000 34.031250000000000
+output: 34.031250000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: -7.250000000000000 107.000000000000000
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -7.250000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.031250000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 23.062500000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 34.031250000000000 3.000000000000000
+output: 34.031250000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45786.750000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.500000000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0.031250000000000
+fcsr: 0
+roundig mode: near
+fmax.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 23.062500000000000
+fcsr: 0
+roundig mode: zero
+fmax.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 3.000000000000000 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: -7.250000000000000 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -7.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 34.031250000000000 3.000000000000000
+output: 34.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmax.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 23.062500000000000
+fcsr: 0x100
+roundig mode: +inf
+fmax.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 3.000000000000000 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: -7.250000000000000 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -7.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 34.031250000000000 3.000000000000000
+output: 34.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmax.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 23.062500000000000
+fcsr: 0x200
+roundig mode: -inf
+fmax.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 3.000000000000000 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: -7.250000000000000 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -7.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 34.031250000000000 3.000000000000000
+output: 34.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmax.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 23.062500000000000
+fcsr: 0x300
+roundig mode: near
+fmin.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 3.000000 34.031250
+output: 3.000000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: -1.000000 4578.750000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 1384.500000 175.000000
+output: 175.000000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: -7.250000 107.000000
+output: -7.250000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 1000000000.000000 -456.250000
+output: -456.250000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: -5786.500000 -7.250000
+output: -5786.500000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 1752.000000 -3478.500000
+output: -3478.500000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 0.015625 356.500000
+output: 0.015625
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 0.031250 -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: -248562.750000 23.062500
+output: -248562.750000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 456.000000 456.250000
+output: 456.000000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 34.031250 3.000000
+output: 3.000000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 45786.750000 -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 1752065.000000 1384.500000
+output: 1384.500000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 107.000000 -7.000000
+output: -7.000000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: -45667.250000 100.000000
+output: -45667.250000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: -7.000000 -5786.500000
+output: -5786.500000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: -347856.500000 1752.000000
+output: -347856.500000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 356047.500000 0.015625
+output: 0.015625
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: -1.000000 0.031250
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmin.s ::
+input: 23.062500 -248562.750000
+output: -248562.750000
+fcsr: 0
+roundig mode: zero
+fmin.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 3.000000 34.031250
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: -1.000000 4578.750000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 1384.500000 175.000000
+output: 175.000000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: -7.250000 107.000000
+output: -7.250000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 1000000000.000000 -456.250000
+output: -456.250000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: -5786.500000 -7.250000
+output: -5786.500000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 1752.000000 -3478.500000
+output: -3478.500000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 0.015625 356.500000
+output: 0.015625
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 0.031250 -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: -248562.750000 23.062500
+output: -248562.750000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 456.000000 456.250000
+output: 456.000000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 34.031250 3.000000
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 45786.750000 -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 1752065.000000 1384.500000
+output: 1384.500000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 107.000000 -7.000000
+output: -7.000000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: -45667.250000 100.000000
+output: -45667.250000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: -7.000000 -5786.500000
+output: -5786.500000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: -347856.500000 1752.000000
+output: -347856.500000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 356047.500000 0.015625
+output: 0.015625
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: -1.000000 0.031250
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmin.s ::
+input: 23.062500 -248562.750000
+output: -248562.750000
+fcsr: 0x100
+roundig mode: +inf
+fmin.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 3.000000 34.031250
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: -1.000000 4578.750000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 1384.500000 175.000000
+output: 175.000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: -7.250000 107.000000
+output: -7.250000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 1000000000.000000 -456.250000
+output: -456.250000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: -5786.500000 -7.250000
+output: -5786.500000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 1752.000000 -3478.500000
+output: -3478.500000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 0.015625 356.500000
+output: 0.015625
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 0.031250 -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: -248562.750000 23.062500
+output: -248562.750000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 456.000000 456.250000
+output: 456.000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 34.031250 3.000000
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 45786.750000 -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 1752065.000000 1384.500000
+output: 1384.500000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 107.000000 -7.000000
+output: -7.000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: -45667.250000 100.000000
+output: -45667.250000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: -7.000000 -5786.500000
+output: -5786.500000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: -347856.500000 1752.000000
+output: -347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 356047.500000 0.015625
+output: 0.015625
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: -1.000000 0.031250
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.s ::
+input: 23.062500 -248562.750000
+output: -248562.750000
+fcsr: 0x200
+roundig mode: -inf
+fmin.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 3.000000 34.031250
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: -1.000000 4578.750000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 1384.500000 175.000000
+output: 175.000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: -7.250000 107.000000
+output: -7.250000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 1000000000.000000 -456.250000
+output: -456.250000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: -5786.500000 -7.250000
+output: -5786.500000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 1752.000000 -3478.500000
+output: -3478.500000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 0.015625 356.500000
+output: 0.015625
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 0.031250 -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: -248562.750000 23.062500
+output: -248562.750000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 456.000000 456.250000
+output: 456.000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 34.031250 3.000000
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 45786.750000 -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 1752065.000000 1384.500000
+output: 1384.500000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 107.000000 -7.000000
+output: -7.000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: -45667.250000 100.000000
+output: -45667.250000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: -7.000000 -5786.500000
+output: -5786.500000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: -347856.500000 1752.000000
+output: -347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 356047.500000 0.015625
+output: 0.015625
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: -1.000000 0.031250
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.s ::
+input: 23.062500 -248562.750000
+output: -248562.750000
+fcsr: 0x300
+roundig mode: near
+fmin.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 3.000000000000000 34.031250000000000
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1384.500000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: -7.250000000000000 107.000000000000000
+output: -7.250000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5786.500000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.015625000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248562.750000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.000000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 34.031250000000000 3.000000000000000
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667.250000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -347856.500000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0.015625000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmin.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0
+roundig mode: zero
+fmin.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 3.000000000000000 34.031250000000000
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1384.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: -7.250000000000000 107.000000000000000
+output: -7.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248562.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 34.031250000000000 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmin.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0x100
+roundig mode: +inf
+fmin.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 3.000000000000000 34.031250000000000
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1384.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: -7.250000000000000 107.000000000000000
+output: -7.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248562.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 34.031250000000000 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmin.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0x200
+roundig mode: -inf
+fmin.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 3.000000000000000 34.031250000000000
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1384.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: -7.250000000000000 107.000000000000000
+output: -7.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248562.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 34.031250000000000 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmin.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0x300
+roundig mode: near
+fmaxa.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 3.000000 34.031250
+output: 34.031250
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: -1.000000 4578.750000
+output: 4578.750000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 1384.500000 175.000000
+output: 1384.500000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: -7.250000 107.000000
+output: 107.000000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000000.000000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: -5786.500000 -7.250000
+output: -5786.500000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 1752.000000 -3478.500000
+output: -3478.500000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 0.015625 356.500000
+output: 356.500000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 0.031250 -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: -248562.750000 23.062500
+output: -248562.750000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 456.000000 456.250000
+output: 456.250000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 34.031250 3.000000
+output: 34.031250
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 45786.750000 -1.000000
+output: 45786.750000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 1752065.000000 1384.500000
+output: 1752065.000000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 107.000000 -7.000000
+output: 107.000000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: -45667.250000 100.000000
+output: -45667.250000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: -7.000000 -5786.500000
+output: -5786.500000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: -347856.500000 1752.000000
+output: -347856.500000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: -1.000000 0.031250
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmaxa.s ::
+input: 23.062500 -248562.750000
+output: -248562.750000
+fcsr: 0
+roundig mode: zero
+fmaxa.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 3.000000 34.031250
+output: 34.031250
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: -1.000000 4578.750000
+output: 4578.750000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 1384.500000 175.000000
+output: 1384.500000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: -7.250000 107.000000
+output: 107.000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000000.000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: -5786.500000 -7.250000
+output: -5786.500000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 1752.000000 -3478.500000
+output: -3478.500000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 0.015625 356.500000
+output: 356.500000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 0.031250 -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: -248562.750000 23.062500
+output: -248562.750000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 456.000000 456.250000
+output: 456.250000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 34.031250 3.000000
+output: 34.031250
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 45786.750000 -1.000000
+output: 45786.750000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 1752065.000000 1384.500000
+output: 1752065.000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 107.000000 -7.000000
+output: 107.000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: -45667.250000 100.000000
+output: -45667.250000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: -7.000000 -5786.500000
+output: -5786.500000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: -347856.500000 1752.000000
+output: -347856.500000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: -1.000000 0.031250
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.s ::
+input: 23.062500 -248562.750000
+output: -248562.750000
+fcsr: 0x100
+roundig mode: +inf
+fmaxa.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 3.000000 34.031250
+output: 34.031250
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: -1.000000 4578.750000
+output: 4578.750000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 1384.500000 175.000000
+output: 1384.500000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: -7.250000 107.000000
+output: 107.000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000000.000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: -5786.500000 -7.250000
+output: -5786.500000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 1752.000000 -3478.500000
+output: -3478.500000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 0.015625 356.500000
+output: 356.500000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 0.031250 -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: -248562.750000 23.062500
+output: -248562.750000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 456.000000 456.250000
+output: 456.250000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 34.031250 3.000000
+output: 34.031250
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 45786.750000 -1.000000
+output: 45786.750000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 1752065.000000 1384.500000
+output: 1752065.000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 107.000000 -7.000000
+output: 107.000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: -45667.250000 100.000000
+output: -45667.250000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: -7.000000 -5786.500000
+output: -5786.500000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: -347856.500000 1752.000000
+output: -347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: -1.000000 0.031250
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.s ::
+input: 23.062500 -248562.750000
+output: -248562.750000
+fcsr: 0x200
+roundig mode: -inf
+fmaxa.s ::
+input: 0.000000 -4578.500000
+output: -4578.500000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 3.000000 34.031250
+output: 34.031250
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: -1.000000 4578.750000
+output: 4578.750000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 1384.500000 175.000000
+output: 1384.500000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: -7.250000 107.000000
+output: 107.000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 1000000000.000000 -456.250000
+output: 1000000000.000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: -5786.500000 -7.250000
+output: -5786.500000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 1752.000000 -3478.500000
+output: -3478.500000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 0.015625 356.500000
+output: 356.500000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 0.031250 -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: -248562.750000 23.062500
+output: -248562.750000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 456.000000 456.250000
+output: 456.250000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 34.031250 3.000000
+output: 34.031250
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 45786.750000 -1.000000
+output: 45786.750000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 1752065.000000 1384.500000
+output: 1752065.000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 107.000000 -7.000000
+output: 107.000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: -45667.250000 100.000000
+output: -45667.250000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: -7.000000 -5786.500000
+output: -5786.500000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: -347856.500000 1752.000000
+output: -347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 356047.500000 0.015625
+output: 356047.500000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: -1.000000 0.031250
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.s ::
+input: 23.062500 -248562.750000
+output: -248562.750000
+fcsr: 0x300
+roundig mode: near
+fmaxa.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 3.000000000000000 34.031250000000000
+output: 34.031250000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: -7.250000000000000 107.000000000000000
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5786.500000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248562.750000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 34.031250000000000 3.000000000000000
+output: 34.031250000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45786.750000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -347856.500000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.500000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmaxa.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0
+roundig mode: zero
+fmaxa.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 3.000000000000000 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: -7.250000000000000 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248562.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 34.031250000000000 3.000000000000000
+output: 34.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmaxa.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0x100
+roundig mode: +inf
+fmaxa.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 3.000000000000000 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: -7.250000000000000 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248562.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 34.031250000000000 3.000000000000000
+output: 34.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmaxa.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0x200
+roundig mode: -inf
+fmaxa.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 3.000000000000000 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: -7.250000000000000 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -5786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 0.031250000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -248562.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 34.031250000000000 3.000000000000000
+output: 34.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 356047.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: -1.000000000000000 0.031250000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmaxa.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0x300
+roundig mode: near
+fmina.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 3.000000 34.031250
+output: 3.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: -1.000000 4578.750000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 1384.500000 175.000000
+output: 175.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: -7.250000 107.000000
+output: -7.250000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 1000000000.000000 -456.250000
+output: -456.250000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: -5786.500000 -7.250000
+output: -7.250000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 1752.000000 -3478.500000
+output: 1752.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 0.015625 356.500000
+output: 0.015625
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 0.031250 -1.000000
+output: 0.031250
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: -248562.750000 23.062500
+output: 23.062500
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: -45786.500000 0.000000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 456.000000 456.250000
+output: 456.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 34.031250 3.000000
+output: 3.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 45786.750000 -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 1752065.000000 1384.500000
+output: 1384.500000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 107.000000 -7.000000
+output: -7.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: -45667.250000 100.000000
+output: 100.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: -7.000000 -5786.500000
+output: -7.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: -347856.500000 1752.000000
+output: 1752.000000
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 356047.500000 0.015625
+output: 0.015625
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: -1.000000 0.031250
+output: 0.031250
+fcsr: 0
+roundig mode: near
+fmina.s ::
+input: 23.062500 -248562.750000
+output: 23.062500
+fcsr: 0
+roundig mode: zero
+fmina.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 3.000000 34.031250
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: -1.000000 4578.750000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 1384.500000 175.000000
+output: 175.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: -7.250000 107.000000
+output: -7.250000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 1000000000.000000 -456.250000
+output: -456.250000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: -5786.500000 -7.250000
+output: -7.250000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 1752.000000 -3478.500000
+output: 1752.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 0.015625 356.500000
+output: 0.015625
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 0.031250 -1.000000
+output: 0.031250
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: -248562.750000 23.062500
+output: 23.062500
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: -45786.500000 0.000000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 456.000000 456.250000
+output: 456.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 34.031250 3.000000
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 45786.750000 -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 1752065.000000 1384.500000
+output: 1384.500000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 107.000000 -7.000000
+output: -7.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: -45667.250000 100.000000
+output: 100.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: -7.000000 -5786.500000
+output: -7.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: -347856.500000 1752.000000
+output: 1752.000000
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 356047.500000 0.015625
+output: 0.015625
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: -1.000000 0.031250
+output: 0.031250
+fcsr: 0x100
+roundig mode: zero
+fmina.s ::
+input: 23.062500 -248562.750000
+output: 23.062500
+fcsr: 0x100
+roundig mode: +inf
+fmina.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 3.000000 34.031250
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: -1.000000 4578.750000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 1384.500000 175.000000
+output: 175.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: -7.250000 107.000000
+output: -7.250000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 1000000000.000000 -456.250000
+output: -456.250000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: -5786.500000 -7.250000
+output: -7.250000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 1752.000000 -3478.500000
+output: 1752.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 0.015625 356.500000
+output: 0.015625
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 0.031250 -1.000000
+output: 0.031250
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: -248562.750000 23.062500
+output: 23.062500
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: -45786.500000 0.000000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 456.000000 456.250000
+output: 456.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 34.031250 3.000000
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 45786.750000 -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 1752065.000000 1384.500000
+output: 1384.500000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 107.000000 -7.000000
+output: -7.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: -45667.250000 100.000000
+output: 100.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: -7.000000 -5786.500000
+output: -7.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: -347856.500000 1752.000000
+output: 1752.000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 356047.500000 0.015625
+output: 0.015625
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: -1.000000 0.031250
+output: 0.031250
+fcsr: 0x200
+roundig mode: +inf
+fmina.s ::
+input: 23.062500 -248562.750000
+output: 23.062500
+fcsr: 0x200
+roundig mode: -inf
+fmina.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 456.250000 456.250000
+output: 456.250000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 3.000000 34.031250
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: -1.000000 4578.750000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 1384.500000 175.000000
+output: 175.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: -7.250000 107.000000
+output: -7.250000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 1000000000.000000 -456.250000
+output: -456.250000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: -5786.500000 -7.250000
+output: -7.250000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 1752.000000 -3478.500000
+output: 1752.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 0.015625 356.500000
+output: 0.015625
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 0.031250 -1.000000
+output: 0.031250
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: -248562.750000 23.062500
+output: 23.062500
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: -45786.500000 0.000000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 456.000000 456.250000
+output: 456.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 34.031250 3.000000
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 45786.750000 -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 1752065.000000 1384.500000
+output: 1384.500000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 107.000000 -7.000000
+output: -7.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: -45667.250000 100.000000
+output: 100.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: -7.000000 -5786.500000
+output: -7.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: -347856.500000 1752.000000
+output: 1752.000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 356047.500000 0.015625
+output: 0.015625
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: -1.000000 0.031250
+output: 0.031250
+fcsr: 0x300
+roundig mode: -inf
+fmina.s ::
+input: 23.062500 -248562.750000
+output: 23.062500
+fcsr: 0x300
+roundig mode: near
+fmina.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 3.000000000000000 34.031250000000000
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1384.500000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: -7.250000000000000 107.000000000000000
+output: -7.250000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -7.250000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.015625000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.031250000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 23.062500000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 34.031250000000000 3.000000000000000
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667.250000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0.015625000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0.031250000000000
+fcsr: 0
+roundig mode: near
+fmina.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 23.062500000000000
+fcsr: 0
+roundig mode: zero
+fmina.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 3.000000000000000 34.031250000000000
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1384.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: -7.250000000000000 107.000000000000000
+output: -7.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -7.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 34.031250000000000 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmina.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 23.062500000000000
+fcsr: 0x100
+roundig mode: +inf
+fmina.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 3.000000000000000 34.031250000000000
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1384.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: -7.250000000000000 107.000000000000000
+output: -7.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -7.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 34.031250000000000 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmina.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 23.062500000000000
+fcsr: 0x200
+roundig mode: -inf
+fmina.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 456.250000000000000 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 3.000000000000000 34.031250000000000
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1384.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: -7.250000000000000 107.000000000000000
+output: -7.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -7.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 456.000000000000000 456.250000000000000
+output: 456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 34.031250000000000 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 107.000000000000000 -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmina.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 23.062500000000000
+fcsr: 0x300
+roundig mode: near
+fabs.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 456.250000
+output: 456.250000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 1384.500000
+output: 1384.500000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: -7.250000
+output: 7.250000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: -5786.500000
+output: 5786.500000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 0.015625
+output: 0.015625
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 0.031250
+output: 0.031250
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: -248562.750000
+output: 248562.750000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: -45786.500000
+output: 45786.500000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 34.031250
+output: 34.031250
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 45786.750000
+output: 45786.750000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: -45667.250000
+output: 45667.250000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: -7.000000
+output: 7.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: -347856.500000
+output: 347856.500000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 356047.500000
+output: 356047.500000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0
+roundig mode: near
+fabs.s ::
+input: 23.062500
+output: 23.062500
+fcsr: 0
+roundig mode: zero
+fabs.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 456.250000
+output: 456.250000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 1384.500000
+output: 1384.500000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: -7.250000
+output: 7.250000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: -5786.500000
+output: 5786.500000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 0.015625
+output: 0.015625
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 0.031250
+output: 0.031250
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: -248562.750000
+output: 248562.750000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: -45786.500000
+output: 45786.500000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 34.031250
+output: 34.031250
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 45786.750000
+output: 45786.750000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: -45667.250000
+output: 45667.250000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: -7.000000
+output: 7.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: -347856.500000
+output: 347856.500000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 356047.500000
+output: 356047.500000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x100
+roundig mode: zero
+fabs.s ::
+input: 23.062500
+output: 23.062500
+fcsr: 0x100
+roundig mode: +inf
+fabs.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 456.250000
+output: 456.250000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 1384.500000
+output: 1384.500000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: -7.250000
+output: 7.250000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: -5786.500000
+output: 5786.500000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 0.015625
+output: 0.015625
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 0.031250
+output: 0.031250
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: -248562.750000
+output: 248562.750000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: -45786.500000
+output: 45786.500000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 34.031250
+output: 34.031250
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 45786.750000
+output: 45786.750000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: -45667.250000
+output: 45667.250000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: -7.000000
+output: 7.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: -347856.500000
+output: 347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 356047.500000
+output: 356047.500000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.s ::
+input: 23.062500
+output: 23.062500
+fcsr: 0x200
+roundig mode: -inf
+fabs.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 456.250000
+output: 456.250000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 1384.500000
+output: 1384.500000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: -7.250000
+output: 7.250000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: -5786.500000
+output: 5786.500000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 0.015625
+output: 0.015625
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 0.031250
+output: 0.031250
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: -248562.750000
+output: 248562.750000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: -45786.500000
+output: 45786.500000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 34.031250
+output: 34.031250
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 45786.750000
+output: 45786.750000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: -45667.250000
+output: 45667.250000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: -7.000000
+output: 7.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: -347856.500000
+output: 347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 356047.500000
+output: 356047.500000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.s ::
+input: 23.062500
+output: 23.062500
+fcsr: 0x300
+roundig mode: near
+fabs.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 456.250000000000000
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: -7.250000000000000
+output: 7.250000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: -5786.500000000000000
+output: 5786.500000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 0.015625000000000
+output: 0.015625000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 0.031250000000000
+output: 0.031250000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: -248562.750000000000000
+output: 248562.750000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 34.031250000000000
+output: 34.031250000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: -45667.250000000000000
+output: 45667.250000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: -7.000000000000000
+output: 7.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0
+roundig mode: near
+fabs.d ::
+input: 23.062500000000000
+output: 23.062500000000000
+fcsr: 0
+roundig mode: zero
+fabs.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: -7.250000000000000
+output: 7.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: -5786.500000000000000
+output: 5786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: -248562.750000000000000
+output: 248562.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: -45667.250000000000000
+output: 45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: -7.000000000000000
+output: 7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fabs.d ::
+input: 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x100
+roundig mode: +inf
+fabs.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: -7.250000000000000
+output: 7.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: -5786.500000000000000
+output: 5786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: -248562.750000000000000
+output: 248562.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: -45667.250000000000000
+output: 45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: -7.000000000000000
+output: 7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fabs.d ::
+input: 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x200
+roundig mode: -inf
+fabs.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: -7.250000000000000
+output: 7.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: -5786.500000000000000
+output: 5786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: -248562.750000000000000
+output: 248562.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: -45667.250000000000000
+output: 45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: -7.000000000000000
+output: 7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fabs.d ::
+input: 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x300
+roundig mode: near
+fneg.s ::
+input: 0.000000
+output: -0.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 456.250000
+output: -456.250000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 3.000000
+output: -3.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 1384.500000
+output: -1384.500000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: -7.250000
+output: 7.250000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 1000000000.000000
+output: -1000000000.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: -5786.500000
+output: 5786.500000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 1752.000000
+output: -1752.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 0.015625
+output: -0.015625
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 0.031250
+output: -0.031250
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: -248562.750000
+output: 248562.750000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: -45786.500000
+output: 45786.500000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 456.000000
+output: -456.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 34.031250
+output: -34.031250
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 45786.750000
+output: -45786.750000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 1752065.000000
+output: -1752065.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 107.000000
+output: -107.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: -45667.250000
+output: 45667.250000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: -7.000000
+output: 7.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: -347856.500000
+output: 347856.500000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 356047.500000
+output: -356047.500000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0
+roundig mode: near
+fneg.s ::
+input: 23.062500
+output: -23.062500
+fcsr: 0
+roundig mode: zero
+fneg.s ::
+input: 0.000000
+output: -0.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 456.250000
+output: -456.250000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 3.000000
+output: -3.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 1384.500000
+output: -1384.500000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: -7.250000
+output: 7.250000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 1000000000.000000
+output: -1000000000.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: -5786.500000
+output: 5786.500000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 1752.000000
+output: -1752.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 0.015625
+output: -0.015625
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 0.031250
+output: -0.031250
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: -248562.750000
+output: 248562.750000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: -45786.500000
+output: 45786.500000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 456.000000
+output: -456.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 34.031250
+output: -34.031250
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 45786.750000
+output: -45786.750000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 1752065.000000
+output: -1752065.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 107.000000
+output: -107.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: -45667.250000
+output: 45667.250000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: -7.000000
+output: 7.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: -347856.500000
+output: 347856.500000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 356047.500000
+output: -356047.500000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x100
+roundig mode: zero
+fneg.s ::
+input: 23.062500
+output: -23.062500
+fcsr: 0x100
+roundig mode: +inf
+fneg.s ::
+input: 0.000000
+output: -0.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 456.250000
+output: -456.250000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 3.000000
+output: -3.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 1384.500000
+output: -1384.500000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: -7.250000
+output: 7.250000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 1000000000.000000
+output: -1000000000.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: -5786.500000
+output: 5786.500000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 1752.000000
+output: -1752.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 0.015625
+output: -0.015625
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 0.031250
+output: -0.031250
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: -248562.750000
+output: 248562.750000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: -45786.500000
+output: 45786.500000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 456.000000
+output: -456.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 34.031250
+output: -34.031250
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 45786.750000
+output: -45786.750000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 1752065.000000
+output: -1752065.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 107.000000
+output: -107.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: -45667.250000
+output: 45667.250000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: -7.000000
+output: 7.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: -347856.500000
+output: 347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 356047.500000
+output: -356047.500000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.s ::
+input: 23.062500
+output: -23.062500
+fcsr: 0x200
+roundig mode: -inf
+fneg.s ::
+input: 0.000000
+output: -0.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 456.250000
+output: -456.250000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 3.000000
+output: -3.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 1384.500000
+output: -1384.500000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: -7.250000
+output: 7.250000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 1000000000.000000
+output: -1000000000.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: -5786.500000
+output: 5786.500000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 1752.000000
+output: -1752.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 0.015625
+output: -0.015625
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 0.031250
+output: -0.031250
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: -248562.750000
+output: 248562.750000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: -45786.500000
+output: 45786.500000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 456.000000
+output: -456.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 34.031250
+output: -34.031250
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 45786.750000
+output: -45786.750000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 1752065.000000
+output: -1752065.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 107.000000
+output: -107.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: -45667.250000
+output: 45667.250000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: -7.000000
+output: 7.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: -347856.500000
+output: 347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 356047.500000
+output: -356047.500000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: -1.000000
+output: 1.000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.s ::
+input: 23.062500
+output: -23.062500
+fcsr: 0x300
+roundig mode: near
+fneg.d ::
+input: 0.000000000000000
+output: -0.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 456.250000000000000
+output: -456.250000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 3.000000000000000
+output: -3.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 1384.500000000000000
+output: -1384.500000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: -7.250000000000000
+output: 7.250000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 1000000000.000000000000000
+output: -1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: -5786.500000000000000
+output: 5786.500000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 1752.000000000000000
+output: -1752.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 0.015625000000000
+output: -0.015625000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 0.031250000000000
+output: -0.031250000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: -248562.750000000000000
+output: 248562.750000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 456.000000000000000
+output: -456.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 34.031250000000000
+output: -34.031250000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 45786.750000000000000
+output: -45786.750000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 1752065.000000000000000
+output: -1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 107.000000000000000
+output: -107.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: -45667.250000000000000
+output: 45667.250000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: -7.000000000000000
+output: 7.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 356047.500000000000000
+output: -356047.500000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0
+roundig mode: near
+fneg.d ::
+input: 23.062500000000000
+output: -23.062500000000000
+fcsr: 0
+roundig mode: zero
+fneg.d ::
+input: 0.000000000000000
+output: -0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 456.250000000000000
+output: -456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 3.000000000000000
+output: -3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 1384.500000000000000
+output: -1384.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: -7.250000000000000
+output: 7.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 1000000000.000000000000000
+output: -1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: -5786.500000000000000
+output: 5786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 1752.000000000000000
+output: -1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 0.015625000000000
+output: -0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 0.031250000000000
+output: -0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: -248562.750000000000000
+output: 248562.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 456.000000000000000
+output: -456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 34.031250000000000
+output: -34.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 45786.750000000000000
+output: -45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 1752065.000000000000000
+output: -1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 107.000000000000000
+output: -107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: -45667.250000000000000
+output: 45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: -7.000000000000000
+output: 7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 356047.500000000000000
+output: -356047.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fneg.d ::
+input: 23.062500000000000
+output: -23.062500000000000
+fcsr: 0x100
+roundig mode: +inf
+fneg.d ::
+input: 0.000000000000000
+output: -0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 456.250000000000000
+output: -456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 3.000000000000000
+output: -3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 1384.500000000000000
+output: -1384.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: -7.250000000000000
+output: 7.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 1000000000.000000000000000
+output: -1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: -5786.500000000000000
+output: 5786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 1752.000000000000000
+output: -1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 0.015625000000000
+output: -0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 0.031250000000000
+output: -0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: -248562.750000000000000
+output: 248562.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 456.000000000000000
+output: -456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 34.031250000000000
+output: -34.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 45786.750000000000000
+output: -45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 1752065.000000000000000
+output: -1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 107.000000000000000
+output: -107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: -45667.250000000000000
+output: 45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: -7.000000000000000
+output: 7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 356047.500000000000000
+output: -356047.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fneg.d ::
+input: 23.062500000000000
+output: -23.062500000000000
+fcsr: 0x200
+roundig mode: -inf
+fneg.d ::
+input: 0.000000000000000
+output: -0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 456.250000000000000
+output: -456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 3.000000000000000
+output: -3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 1384.500000000000000
+output: -1384.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: -7.250000000000000
+output: 7.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 1000000000.000000000000000
+output: -1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: -5786.500000000000000
+output: 5786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 1752.000000000000000
+output: -1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 0.015625000000000
+output: -0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 0.031250000000000
+output: -0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: -248562.750000000000000
+output: 248562.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: -45786.500000000000000
+output: 45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 456.000000000000000
+output: -456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 34.031250000000000
+output: -34.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 45786.750000000000000
+output: -45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 1752065.000000000000000
+output: -1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 107.000000000000000
+output: -107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: -45667.250000000000000
+output: 45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: -7.000000000000000
+output: 7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: -347856.500000000000000
+output: 347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 356047.500000000000000
+output: -356047.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: -1.000000000000000
+output: 1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fneg.d ::
+input: 23.062500000000000
+output: -23.062500000000000
+fcsr: 0x300
+roundig mode: near
+fsqrt.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fsqrt.s ::
+input: 456.250000
+output: 21.360010
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: 3.000000
+output: 1.732051
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.s ::
+input: 1384.500000
+output: 37.208870
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.s ::
+input: 1000000000.000000
+output: 31622.777344
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.s ::
+input: 1752.000000
+output: 41.856899
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: 0.015625
+output: 0.125000
+fcsr: 0
+roundig mode: near
+fsqrt.s ::
+input: 0.031250
+output: 0.176777
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.s ::
+input: 456.000000
+output: 21.354156
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: 34.031250
+output: 5.833631
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: 45786.750000
+output: 213.978394
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: 1752065.000000
+output: 1323.655884
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: 107.000000
+output: 10.344080
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.s ::
+input: 356047.500000
+output: 596.697144
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.s ::
+input: 23.062500
+output: 4.802343
+fcsr: 0x1010000
+roundig mode: zero
+fsqrt.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fsqrt.s ::
+input: 456.250000
+output: 21.360008
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: 3.000000
+output: 1.732050
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.s ::
+input: 1384.500000
+output: 37.208866
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.s ::
+input: 1000000000.000000
+output: 31622.775390
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.s ::
+input: 1752.000000
+output: 41.856895
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: 0.015625
+output: 0.125000
+fcsr: 0x100
+roundig mode: zero
+fsqrt.s ::
+input: 0.031250
+output: 0.176776
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.s ::
+input: 456.000000
+output: 21.354156
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: 34.031250
+output: 5.833630
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: 45786.750000
+output: 213.978378
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: 1752065.000000
+output: 1323.655883
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: 107.000000
+output: 10.344079
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.s ::
+input: 356047.500000
+output: 596.697143
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.s ::
+input: 23.062500
+output: 4.802342
+fcsr: 0x1010100
+roundig mode: +inf
+fsqrt.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fsqrt.s ::
+input: 456.250000
+output: 21.360011
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: 3.000000
+output: 1.732051
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.s ::
+input: 1384.500000
+output: 37.208870
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.s ::
+input: 1000000000.000000
+output: 31622.777344
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.s ::
+input: 1752.000000
+output: 41.856900
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: 0.015625
+output: 0.125000
+fcsr: 0x200
+roundig mode: +inf
+fsqrt.s ::
+input: 0.031250
+output: 0.176777
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.s ::
+input: 456.000000
+output: 21.354159
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: 34.031250
+output: 5.833632
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: 45786.750000
+output: 213.978394
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: 1752065.000000
+output: 1323.656006
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: 107.000000
+output: 10.344081
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.s ::
+input: 356047.500000
+output: 596.697205
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.s ::
+input: 23.062500
+output: 4.802344
+fcsr: 0x1010200
+roundig mode: -inf
+fsqrt.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+fsqrt.s ::
+input: 456.250000
+output: 21.360008
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: 3.000000
+output: 1.732050
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.s ::
+input: 1384.500000
+output: 37.208866
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.s ::
+input: 1000000000.000000
+output: 31622.775390
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.s ::
+input: 1752.000000
+output: 41.856895
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: 0.015625
+output: 0.125000
+fcsr: 0x300
+roundig mode: -inf
+fsqrt.s ::
+input: 0.031250
+output: 0.176776
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.s ::
+input: 456.000000
+output: 21.354156
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: 34.031250
+output: 5.833630
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: 45786.750000
+output: 213.978378
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: 1752065.000000
+output: 1323.655883
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: 107.000000
+output: 10.344079
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.s ::
+input: 356047.500000
+output: 596.697143
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.s ::
+input: 23.062500
+output: 4.802342
+fcsr: 0x1010300
+roundig mode: near
+fsqrt.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fsqrt.d ::
+input: 456.250000000000000
+output: 21.360009363293827
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: 3.000000000000000
+output: 1.732050807568877
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.d ::
+input: 1384.500000000000000
+output: 37.208869910278111
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.d ::
+input: 1000000000.000000000000000
+output: 31622.776601683792251
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.d ::
+input: 1752.000000000000000
+output: 41.856899072912697
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: 0.015625000000000
+output: 0.125000000000000
+fcsr: 0
+roundig mode: near
+fsqrt.d ::
+input: 0.031250000000000
+output: 0.176776695296637
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.d ::
+input: 456.000000000000000
+output: 21.354156504062622
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: 34.031250000000000
+output: 5.833630944789017
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: 45786.750000000000000
+output: 213.978386759036965
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: 1752065.000000000000000
+output: 1323.655922058296937
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: 107.000000000000000
+output: 10.344080432788601
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.d ::
+input: 356047.500000000000000
+output: 596.697159369809583
+fcsr: 0x1010000
+roundig mode: near
+fsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+fsqrt.d ::
+input: 23.062500000000000
+output: 4.802343178074636
+fcsr: 0x1010000
+roundig mode: zero
+fsqrt.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsqrt.d ::
+input: 456.250000000000000
+output: 21.360009363293826
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: 3.000000000000000
+output: 1.732050807568877
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.d ::
+input: 1384.500000000000000
+output: 37.208869910278110
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.d ::
+input: 1000000000.000000000000000
+output: 31622.776601683792250
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.d ::
+input: 1752.000000000000000
+output: 41.856899072912696
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: 0.015625000000000
+output: 0.125000000000000
+fcsr: 0x100
+roundig mode: zero
+fsqrt.d ::
+input: 0.031250000000000
+output: 0.176776695296636
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.d ::
+input: 456.000000000000000
+output: 21.354156504062618
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: 34.031250000000000
+output: 5.833630944789016
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: 45786.750000000000000
+output: 213.978386759036936
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: 1752065.000000000000000
+output: 1323.655922058296710
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: 107.000000000000000
+output: 10.344080432788599
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.d ::
+input: 356047.500000000000000
+output: 596.697159369809583
+fcsr: 0x1010100
+roundig mode: zero
+fsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+fsqrt.d ::
+input: 23.062500000000000
+output: 4.802343178074636
+fcsr: 0x1010100
+roundig mode: +inf
+fsqrt.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsqrt.d ::
+input: 456.250000000000000
+output: 21.360009363293831
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: 3.000000000000000
+output: 1.732050807568878
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.d ::
+input: 1384.500000000000000
+output: 37.208869910278118
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.d ::
+input: 1000000000.000000000000000
+output: 31622.776601683795889
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.d ::
+input: 1752.000000000000000
+output: 41.856899072912704
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: 0.015625000000000
+output: 0.125000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsqrt.d ::
+input: 0.031250000000000
+output: 0.176776695296637
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.d ::
+input: 456.000000000000000
+output: 21.354156504062623
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: 34.031250000000000
+output: 5.833630944789018
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: 45786.750000000000000
+output: 213.978386759036966
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: 1752065.000000000000000
+output: 1323.655922058296938
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: 107.000000000000000
+output: 10.344080432788602
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.d ::
+input: 356047.500000000000000
+output: 596.697159369809697
+fcsr: 0x1010200
+roundig mode: +inf
+fsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+fsqrt.d ::
+input: 23.062500000000000
+output: 4.802343178074638
+fcsr: 0x1010200
+roundig mode: -inf
+fsqrt.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsqrt.d ::
+input: 456.250000000000000
+output: 21.360009363293826
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: 3.000000000000000
+output: 1.732050807568877
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.d ::
+input: 1384.500000000000000
+output: 37.208869910278110
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.d ::
+input: 1000000000.000000000000000
+output: 31622.776601683792250
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.d ::
+input: 1752.000000000000000
+output: 41.856899072912696
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: 0.015625000000000
+output: 0.125000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsqrt.d ::
+input: 0.031250000000000
+output: 0.176776695296636
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.d ::
+input: 456.000000000000000
+output: 21.354156504062618
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: 34.031250000000000
+output: 5.833630944789016
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: 45786.750000000000000
+output: 213.978386759036936
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: 1752065.000000000000000
+output: 1323.655922058296710
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: 107.000000000000000
+output: 10.344080432788599
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.d ::
+input: 356047.500000000000000
+output: 596.697159369809583
+fcsr: 0x1010300
+roundig mode: -inf
+fsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+fsqrt.d ::
+input: 23.062500000000000
+output: 4.802343178074636
+fcsr: 0x1010300
+roundig mode: near
+frecip.s ::
+input: 0.000000
+output: inf
+fcsr: 0x8080000
+roundig mode: near
+frecip.s ::
+input: 456.250000
+output: 0.002192
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 3.000000
+output: 0.333333
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+frecip.s ::
+input: 1384.500000
+output: 0.000722
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: -7.250000
+output: -0.137931
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 1000000000.000000
+output: 0.000000
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: -5786.500000
+output: -0.000173
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 1752.000000
+output: 0.000571
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 0.015625
+output: 64.000000
+fcsr: 0
+roundig mode: near
+frecip.s ::
+input: 0.031250
+output: 32.000000
+fcsr: 0
+roundig mode: near
+frecip.s ::
+input: -248562.750000
+output: -0.000004
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: -45786.500000
+output: -0.000022
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 456.000000
+output: 0.002193
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 34.031250
+output: 0.029385
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 45786.750000
+output: 0.000022
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 1752065.000000
+output: 0.000001
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 107.000000
+output: 0.009346
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: -45667.250000
+output: -0.000022
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: -7.000000
+output: -0.142857
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: -347856.500000
+output: -0.000003
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: 356047.500000
+output: 0.000003
+fcsr: 0x1010000
+roundig mode: near
+frecip.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+frecip.s ::
+input: 23.062500
+output: 0.043360
+fcsr: 0x1010000
+roundig mode: zero
+frecip.s ::
+input: 0.000000
+output: inf
+fcsr: 0x8080100
+roundig mode: zero
+frecip.s ::
+input: 456.250000
+output: 0.002191
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 3.000000
+output: 0.333333
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+frecip.s ::
+input: 1384.500000
+output: 0.000722
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: -7.250000
+output: -0.137931
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 1000000000.000000
+output: 0.000000
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: -5786.500000
+output: -0.000172
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 1752.000000
+output: 0.000570
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 0.015625
+output: 64.000000
+fcsr: 0x100
+roundig mode: zero
+frecip.s ::
+input: 0.031250
+output: 32.000000
+fcsr: 0x100
+roundig mode: zero
+frecip.s ::
+input: -248562.750000
+output: -0.000004
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: -45786.500000
+output: -0.000021
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 456.000000
+output: 0.002192
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 34.031250
+output: 0.029384
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 45786.750000
+output: 0.000021
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 1752065.000000
+output: 0.000000
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 107.000000
+output: 0.009345
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: -45667.250000
+output: -0.000021
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: -7.000000
+output: -0.142857
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: -347856.500000
+output: -0.000002
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: 356047.500000
+output: 0.000002
+fcsr: 0x1010100
+roundig mode: zero
+frecip.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+frecip.s ::
+input: 23.062500
+output: 0.043360
+fcsr: 0x1010100
+roundig mode: +inf
+frecip.s ::
+input: 0.000000
+output: inf
+fcsr: 0x8080200
+roundig mode: +inf
+frecip.s ::
+input: 456.250000
+output: 0.002192
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 3.000000
+output: 0.333334
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+frecip.s ::
+input: 1384.500000
+output: 0.000723
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: -7.250000
+output: -0.137931
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 1000000000.000000
+output: 0.000001
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: -5786.500000
+output: -0.000172
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 1752.000000
+output: 0.000571
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 0.015625
+output: 64.000000
+fcsr: 0x200
+roundig mode: +inf
+frecip.s ::
+input: 0.031250
+output: 32.000000
+fcsr: 0x200
+roundig mode: +inf
+frecip.s ::
+input: -248562.750000
+output: -0.000004
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: -45786.500000
+output: -0.000021
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 456.000000
+output: 0.002193
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 34.031250
+output: 0.029385
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 45786.750000
+output: 0.000022
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 1752065.000000
+output: 0.000001
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 107.000000
+output: 0.009346
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: -45667.250000
+output: -0.000021
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: -7.000000
+output: -0.142857
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: -347856.500000
+output: -0.000002
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: 356047.500000
+output: 0.000003
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+frecip.s ::
+input: 23.062500
+output: 0.043361
+fcsr: 0x1010200
+roundig mode: -inf
+frecip.s ::
+input: 0.000000
+output: inf
+fcsr: 0x8080300
+roundig mode: -inf
+frecip.s ::
+input: 456.250000
+output: 0.002191
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 3.000000
+output: 0.333333
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+frecip.s ::
+input: 1384.500000
+output: 0.000722
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: -7.250000
+output: -0.137932
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 1000000000.000000
+output: 0.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: -5786.500000
+output: -0.000173
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 1752.000000
+output: 0.000570
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 0.015625
+output: 64.000000
+fcsr: 0x300
+roundig mode: -inf
+frecip.s ::
+input: 0.031250
+output: 32.000000
+fcsr: 0x300
+roundig mode: -inf
+frecip.s ::
+input: -248562.750000
+output: -0.000005
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: -45786.500000
+output: -0.000022
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 456.000000
+output: 0.002192
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 34.031250
+output: 0.029384
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 45786.750000
+output: 0.000021
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 1752065.000000
+output: 0.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 107.000000
+output: 0.009345
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: -45667.250000
+output: -0.000022
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: -7.000000
+output: -0.142858
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: -347856.500000
+output: -0.000003
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: 356047.500000
+output: 0.000002
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+frecip.s ::
+input: 23.062500
+output: 0.043360
+fcsr: 0x1010300
+roundig mode: near
+frecip.d ::
+input: 0.000000000000000
+output: inf
+fcsr: 0x8080000
+roundig mode: near
+frecip.d ::
+input: 456.250000000000000
+output: 0.002191780821918
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 3.000000000000000
+output: 0.333333333333333
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+frecip.d ::
+input: 1384.500000000000000
+output: 0.000722282412423
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: -7.250000000000000
+output: -0.137931034482759
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 1000000000.000000000000000
+output: 0.000000001000000
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: -5786.500000000000000
+output: -0.000172816037328
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 1752.000000000000000
+output: 0.000570776255708
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 0.015625000000000
+output: 64.000000000000000
+fcsr: 0
+roundig mode: near
+frecip.d ::
+input: 0.031250000000000
+output: 32.000000000000000
+fcsr: 0
+roundig mode: near
+frecip.d ::
+input: -248562.750000000000000
+output: -0.000004023128968
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: -45786.500000000000000
+output: -0.000021840498837
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 456.000000000000000
+output: 0.002192982456140
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 34.031250000000000
+output: 0.029384756657484
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 45786.750000000000000
+output: 0.000021840379586
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 1752065.000000000000000
+output: 0.000000570755080
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 107.000000000000000
+output: 0.009345794392523
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: -45667.250000000000000
+output: -0.000021897530506
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: -7.000000000000000
+output: -0.142857142857143
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: -347856.500000000000000
+output: -0.000002874748639
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: 356047.500000000000000
+output: 0.000002808614019
+fcsr: 0x1010000
+roundig mode: near
+frecip.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+frecip.d ::
+input: 23.062500000000000
+output: 0.043360433604336
+fcsr: 0x1010000
+roundig mode: zero
+frecip.d ::
+input: 0.000000000000000
+output: inf
+fcsr: 0x8080100
+roundig mode: zero
+frecip.d ::
+input: 456.250000000000000
+output: 0.002191780821917
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 3.000000000000000
+output: 0.333333333333333
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frecip.d ::
+input: 1384.500000000000000
+output: 0.000722282412423
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: -7.250000000000000
+output: -0.137931034482758
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 1000000000.000000000000000
+output: 0.000000000999999
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: -5786.500000000000000
+output: -0.000172816037328
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 1752.000000000000000
+output: 0.000570776255707
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 0.015625000000000
+output: 64.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frecip.d ::
+input: 0.031250000000000
+output: 32.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frecip.d ::
+input: -248562.750000000000000
+output: -0.000004023128968
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: -45786.500000000000000
+output: -0.000021840498836
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 456.000000000000000
+output: 0.002192982456140
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 34.031250000000000
+output: 0.029384756657483
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 45786.750000000000000
+output: 0.000021840379585
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 1752065.000000000000000
+output: 0.000000570755080
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 107.000000000000000
+output: 0.009345794392523
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: -45667.250000000000000
+output: -0.000021897530505
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: -7.000000000000000
+output: -0.142857142857142
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: -347856.500000000000000
+output: -0.000002874748639
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: 356047.500000000000000
+output: 0.000002808614019
+fcsr: 0x1010100
+roundig mode: zero
+frecip.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frecip.d ::
+input: 23.062500000000000
+output: 0.043360433604336
+fcsr: 0x1010100
+roundig mode: +inf
+frecip.d ::
+input: 0.000000000000000
+output: inf
+fcsr: 0x8080200
+roundig mode: +inf
+frecip.d ::
+input: 456.250000000000000
+output: 0.002191780821918
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 3.000000000000000
+output: 0.333333333333334
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frecip.d ::
+input: 1384.500000000000000
+output: 0.000722282412424
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: -7.250000000000000
+output: -0.137931034482758
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 1000000000.000000000000000
+output: 0.000000001000001
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: -5786.500000000000000
+output: -0.000172816037328
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 1752.000000000000000
+output: 0.000570776255708
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 0.015625000000000
+output: 64.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frecip.d ::
+input: 0.031250000000000
+output: 32.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frecip.d ::
+input: -248562.750000000000000
+output: -0.000004023128968
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: -45786.500000000000000
+output: -0.000021840498836
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 456.000000000000000
+output: 0.002192982456141
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 34.031250000000000
+output: 0.029384756657484
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 45786.750000000000000
+output: 0.000021840379586
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 1752065.000000000000000
+output: 0.000000570755081
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 107.000000000000000
+output: 0.009345794392524
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: -45667.250000000000000
+output: -0.000021897530505
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: -7.000000000000000
+output: -0.142857142857142
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: -347856.500000000000000
+output: -0.000002874748639
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: 356047.500000000000000
+output: 0.000002808614020
+fcsr: 0x1010200
+roundig mode: +inf
+frecip.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frecip.d ::
+input: 23.062500000000000
+output: 0.043360433604337
+fcsr: 0x1010200
+roundig mode: -inf
+frecip.d ::
+input: 0.000000000000000
+output: inf
+fcsr: 0x8080300
+roundig mode: -inf
+frecip.d ::
+input: 456.250000000000000
+output: 0.002191780821917
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 3.000000000000000
+output: 0.333333333333333
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frecip.d ::
+input: 1384.500000000000000
+output: 0.000722282412423
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: -7.250000000000000
+output: -0.137931034482759
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 1000000000.000000000000000
+output: 0.000000000999999
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: -5786.500000000000000
+output: -0.000172816037329
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 1752.000000000000000
+output: 0.000570776255707
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 0.015625000000000
+output: 64.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frecip.d ::
+input: 0.031250000000000
+output: 32.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frecip.d ::
+input: -248562.750000000000000
+output: -0.000004023128969
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: -45786.500000000000000
+output: -0.000021840498837
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 456.000000000000000
+output: 0.002192982456140
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 34.031250000000000
+output: 0.029384756657483
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 45786.750000000000000
+output: 0.000021840379585
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 1752065.000000000000000
+output: 0.000000570755080
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 107.000000000000000
+output: 0.009345794392523
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: -45667.250000000000000
+output: -0.000021897530506
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: -7.000000000000000
+output: -0.142857142857143
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: -347856.500000000000000
+output: -0.000002874748640
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: 356047.500000000000000
+output: 0.000002808614019
+fcsr: 0x1010300
+roundig mode: -inf
+frecip.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frecip.d ::
+input: 23.062500000000000
+output: 0.043360433604336
+fcsr: 0x1010300
+roundig mode: near
+frsqrt.s ::
+input: 0.000000
+output: inf
+fcsr: 0x8080000
+roundig mode: near
+frsqrt.s ::
+input: 456.250000
+output: 0.046816
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: 3.000000
+output: 0.577350
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.s ::
+input: 1384.500000
+output: 0.026875
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.s ::
+input: 1000000000.000000
+output: 0.000032
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.s ::
+input: 1752.000000
+output: 0.023891
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: 0.015625
+output: 8.000000
+fcsr: 0
+roundig mode: near
+frsqrt.s ::
+input: 0.031250
+output: 5.656854
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.s ::
+input: 456.000000
+output: 0.046829
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: 34.031250
+output: 0.171420
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: 45786.750000
+output: 0.004673
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: 1752065.000000
+output: 0.000755
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: 107.000000
+output: 0.096674
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.s ::
+input: 356047.500000
+output: 0.001676
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.s ::
+input: 23.062500
+output: 0.208232
+fcsr: 0x1010000
+roundig mode: zero
+frsqrt.s ::
+input: 0.000000
+output: inf
+fcsr: 0x8080100
+roundig mode: zero
+frsqrt.s ::
+input: 456.250000
+output: 0.046816
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: 3.000000
+output: 0.577350
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.s ::
+input: 1384.500000
+output: 0.026875
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.s ::
+input: 1000000000.000000
+output: 0.000031
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.s ::
+input: 1752.000000
+output: 0.023890
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: 0.015625
+output: 8.000000
+fcsr: 0x100
+roundig mode: zero
+frsqrt.s ::
+input: 0.031250
+output: 5.656854
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.s ::
+input: 456.000000
+output: 0.046829
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: 34.031250
+output: 0.171419
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: 45786.750000
+output: 0.004673
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: 1752065.000000
+output: 0.000755
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: 107.000000
+output: 0.096673
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.s ::
+input: 356047.500000
+output: 0.001675
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.s ::
+input: 23.062500
+output: 0.208231
+fcsr: 0x1010100
+roundig mode: +inf
+frsqrt.s ::
+input: 0.000000
+output: inf
+fcsr: 0x8080200
+roundig mode: +inf
+frsqrt.s ::
+input: 456.250000
+output: 0.046817
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: 3.000000
+output: 0.577351
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.s ::
+input: 1384.500000
+output: 0.026876
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.s ::
+input: 1000000000.000000
+output: 0.000032
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.s ::
+input: 1752.000000
+output: 0.023891
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: 0.015625
+output: 8.000000
+fcsr: 0x200
+roundig mode: +inf
+frsqrt.s ::
+input: 0.031250
+output: 5.656855
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.s ::
+input: 456.000000
+output: 0.046830
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: 34.031250
+output: 0.171420
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: 45786.750000
+output: 0.004674
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: 1752065.000000
+output: 0.000756
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: 107.000000
+output: 0.096674
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.s ::
+input: 356047.500000
+output: 0.001676
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.s ::
+input: 23.062500
+output: 0.208232
+fcsr: 0x1010200
+roundig mode: -inf
+frsqrt.s ::
+input: 0.000000
+output: inf
+fcsr: 0x8080300
+roundig mode: -inf
+frsqrt.s ::
+input: 456.250000
+output: 0.046816
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: 3.000000
+output: 0.577350
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.s ::
+input: 1384.500000
+output: 0.026875
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.s ::
+input: 1000000000.000000
+output: 0.000031
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.s ::
+input: 1752.000000
+output: 0.023890
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: 0.015625
+output: 8.000000
+fcsr: 0x300
+roundig mode: -inf
+frsqrt.s ::
+input: 0.031250
+output: 5.656854
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.s ::
+input: 456.000000
+output: 0.046829
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: 34.031250
+output: 0.171419
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: 45786.750000
+output: 0.004673
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: 1752065.000000
+output: 0.000755
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: 107.000000
+output: 0.096673
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.s ::
+input: 356047.500000
+output: 0.001675
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.s ::
+input: 23.062500
+output: 0.208231
+fcsr: 0x1010300
+roundig mode: near
+frsqrt.d ::
+input: 0.000000000000000
+output: inf
+fcsr: 0x8080000
+roundig mode: near
+frsqrt.d ::
+input: 456.250000000000000
+output: 0.046816458878452
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: 3.000000000000000
+output: 0.577350269189626
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.d ::
+input: 1384.500000000000000
+output: 0.026875312322339
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.d ::
+input: 1000000000.000000000000000
+output: 0.000031622776602
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.d ::
+input: 1752.000000000000000
+output: 0.023890924128375
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: 0.015625000000000
+output: 8.000000000000000
+fcsr: 0
+roundig mode: near
+frsqrt.d ::
+input: 0.031250000000000
+output: 5.656854249492380
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.d ::
+input: 456.000000000000000
+output: 0.046829290579085
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: 34.031250000000000
+output: 0.171419825742193
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: 45786.750000000000000
+output: 0.004673369189974
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: 1752065.000000000000000
+output: 0.000755483342261
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: 107.000000000000000
+output: 0.096673648904566
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.d ::
+input: 356047.500000000000000
+output: 0.001675892007021
+fcsr: 0x1010000
+roundig mode: near
+frsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+frsqrt.d ::
+input: 23.062500000000000
+output: 0.208231682518141
+fcsr: 0x1010000
+roundig mode: zero
+frsqrt.d ::
+input: 0.000000000000000
+output: inf
+fcsr: 0x8080100
+roundig mode: zero
+frsqrt.d ::
+input: 456.250000000000000
+output: 0.046816458878452
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: 3.000000000000000
+output: 0.577350269189625
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.d ::
+input: 1384.500000000000000
+output: 0.026875312322338
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.d ::
+input: 1000000000.000000000000000
+output: 0.000031622776601
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.d ::
+input: 1752.000000000000000
+output: 0.023890924128374
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: 0.015625000000000
+output: 8.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frsqrt.d ::
+input: 0.031250000000000
+output: 5.656854249492380
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.d ::
+input: 456.000000000000000
+output: 0.046829290579084
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: 34.031250000000000
+output: 0.171419825742193
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: 45786.750000000000000
+output: 0.004673369189973
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: 1752065.000000000000000
+output: 0.000755483342260
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: 107.000000000000000
+output: 0.096673648904566
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.d ::
+input: 356047.500000000000000
+output: 0.001675892007021
+fcsr: 0x1010100
+roundig mode: zero
+frsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+frsqrt.d ::
+input: 23.062500000000000
+output: 0.208231682518141
+fcsr: 0x1010100
+roundig mode: +inf
+frsqrt.d ::
+input: 0.000000000000000
+output: inf
+fcsr: 0x8080200
+roundig mode: +inf
+frsqrt.d ::
+input: 456.250000000000000
+output: 0.046816458878453
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: 3.000000000000000
+output: 0.577350269189626
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.d ::
+input: 1384.500000000000000
+output: 0.026875312322339
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.d ::
+input: 1000000000.000000000000000
+output: 0.000031622776602
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.d ::
+input: 1752.000000000000000
+output: 0.023890924128375
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: 0.015625000000000
+output: 8.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frsqrt.d ::
+input: 0.031250000000000
+output: 5.656854249492381
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.d ::
+input: 456.000000000000000
+output: 0.046829290579085
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: 34.031250000000000
+output: 0.171419825742194
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: 45786.750000000000000
+output: 0.004673369189974
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: 1752065.000000000000000
+output: 0.000755483342261
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: 107.000000000000000
+output: 0.096673648904567
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.d ::
+input: 356047.500000000000000
+output: 0.001675892007022
+fcsr: 0x1010200
+roundig mode: +inf
+frsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+frsqrt.d ::
+input: 23.062500000000000
+output: 0.208231682518142
+fcsr: 0x1010200
+roundig mode: -inf
+frsqrt.d ::
+input: 0.000000000000000
+output: inf
+fcsr: 0x8080300
+roundig mode: -inf
+frsqrt.d ::
+input: 456.250000000000000
+output: 0.046816458878452
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: 3.000000000000000
+output: 0.577350269189625
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.d ::
+input: 1384.500000000000000
+output: 0.026875312322338
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.d ::
+input: 1000000000.000000000000000
+output: 0.000031622776601
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.d ::
+input: 1752.000000000000000
+output: 0.023890924128374
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: 0.015625000000000
+output: 8.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frsqrt.d ::
+input: 0.031250000000000
+output: 5.656854249492380
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.d ::
+input: 456.000000000000000
+output: 0.046829290579084
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: 34.031250000000000
+output: 0.171419825742193
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: 45786.750000000000000
+output: 0.004673369189973
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: 1752065.000000000000000
+output: 0.000755483342260
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: 107.000000000000000
+output: 0.096673648904566
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.d ::
+input: 356047.500000000000000
+output: 0.001675892007021
+fcsr: 0x1010300
+roundig mode: -inf
+frsqrt.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+frsqrt.d ::
+input: 23.062500000000000
+output: 0.208231682518141
+fcsr: 0x1010300
+roundig mode: near
+fscaleb.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fscaleb.s ::
+input: 456.250000 456.250000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: 3.000000 34.031250
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: -1.000000 4578.750000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: 1384.500000 175.000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: -7.250000 107.000000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: 1000000000.000000 -456.250000
+output: 0.000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.s ::
+input: -5786.500000 -7.250000
+output: -0.000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.s ::
+input: 1752.000000 -3478.500000
+output: 0.000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.s ::
+input: 0.015625 356.500000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: 0.031250 -1.000000
+output: 0.000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.s ::
+input: -248562.750000 23.062500
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0
+roundig mode: near
+fscaleb.s ::
+input: 456.000000 456.250000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: 34.031250 3.000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: 45786.750000 -1.000000
+output: 0.000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.s ::
+input: 1752065.000000 1384.500000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: 107.000000 -7.000000
+output: 0.000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.s ::
+input: -45667.250000 100.000000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: -7.000000 -5786.500000
+output: -0.000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.s ::
+input: -347856.500000 1752.000000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: 356047.500000 0.015625
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: -1.000000 0.031250
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.s ::
+input: 23.062500 -248562.750000
+output: 0.000000
+fcsr: 0x3030000
+roundig mode: zero
+fscaleb.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fscaleb.s ::
+input: 456.250000 456.250000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: 3.000000 34.031250
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: -1.000000 4578.750000
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: 1384.500000 175.000000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: -7.250000 107.000000
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: 1000000000.000000 -456.250000
+output: 0.000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.s ::
+input: -5786.500000 -7.250000
+output: -0.000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.s ::
+input: 1752.000000 -3478.500000
+output: 0.000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.s ::
+input: 0.015625 356.500000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: 0.031250 -1.000000
+output: 0.000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.s ::
+input: -248562.750000 23.062500
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x100
+roundig mode: zero
+fscaleb.s ::
+input: 456.000000 456.250000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: 34.031250 3.000000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: 45786.750000 -1.000000
+output: 0.000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.s ::
+input: 1752065.000000 1384.500000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: 107.000000 -7.000000
+output: 0.000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.s ::
+input: -45667.250000 100.000000
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: -7.000000 -5786.500000
+output: -0.000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.s ::
+input: -347856.500000 1752.000000
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: 356047.500000 0.015625
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: -1.000000 0.031250
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.s ::
+input: 23.062500 -248562.750000
+output: 0.000000
+fcsr: 0x3030100
+roundig mode: +inf
+fscaleb.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fscaleb.s ::
+input: 456.250000 456.250000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: 3.000000 34.031250
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: -1.000000 4578.750000
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: 1384.500000 175.000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: -7.250000 107.000000
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: 1000000000.000000 -456.250000
+output: 0.000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.s ::
+input: -5786.500000 -7.250000
+output: -0.000000
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.s ::
+input: 1752.000000 -3478.500000
+output: 0.000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.s ::
+input: 0.015625 356.500000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: 0.031250 -1.000000
+output: 0.000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.s ::
+input: -248562.750000 23.062500
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x200
+roundig mode: +inf
+fscaleb.s ::
+input: 456.000000 456.250000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: 34.031250 3.000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: 45786.750000 -1.000000
+output: 0.000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.s ::
+input: 1752065.000000 1384.500000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: 107.000000 -7.000000
+output: 0.000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.s ::
+input: -45667.250000 100.000000
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: -7.000000 -5786.500000
+output: -0.000000
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.s ::
+input: -347856.500000 1752.000000
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: 356047.500000 0.015625
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: -1.000000 0.031250
+output: -340282346638528859811704183484516925440.000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.s ::
+input: 23.062500 -248562.750000
+output: 0.000001
+fcsr: 0x3030200
+roundig mode: -inf
+fscaleb.s ::
+input: 0.000000 -4578.500000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+fscaleb.s ::
+input: 456.250000 456.250000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: 3.000000 34.031250
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: -1.000000 4578.750000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: 1384.500000 175.000000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: -7.250000 107.000000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: 1000000000.000000 -456.250000
+output: 0.000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.s ::
+input: -5786.500000 -7.250000
+output: -0.000001
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.s ::
+input: 1752.000000 -3478.500000
+output: 0.000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.s ::
+input: 0.015625 356.500000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: 0.031250 -1.000000
+output: 0.000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.s ::
+input: -248562.750000 23.062500
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: -45786.500000 0.000000
+output: -45786.500000
+fcsr: 0x300
+roundig mode: -inf
+fscaleb.s ::
+input: 456.000000 456.250000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: 34.031250 3.000000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: 45786.750000 -1.000000
+output: 0.000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.s ::
+input: 1752065.000000 1384.500000
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: 107.000000 -7.000000
+output: 0.000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.s ::
+input: -45667.250000 100.000000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: -7.000000 -5786.500000
+output: -0.000001
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.s ::
+input: -347856.500000 1752.000000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: 356047.500000 0.015625
+output: 340282346638528859811704183484516925440.000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: -1.000000 0.031250
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.s ::
+input: 23.062500 -248562.750000
+output: 0.000000
+fcsr: 0x3030300
+roundig mode: near
+fscaleb.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fscaleb.d ::
+input: 456.250000000000000 456.250000000000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: 3.000000000000000 34.031250000000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: -7.250000000000000 107.000000000000000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0.000000000000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -0.000000000000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0.000000000000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.d ::
+input: 0.015625000000000 356047.500000000000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.000000000000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fscaleb.d ::
+input: 456.000000000000000 456.250000000000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: 34.031250000000000 3.000000000000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0.000000000000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0.000000000000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -0.000000000000000
+fcsr: 0x3030000
+roundig mode: near
+fscaleb.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: 356047.500000000000000 0.015625000000000
+output: inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: -1.000000000000000 0.031250000000000
+output: -inf
+fcsr: 0x5050000
+roundig mode: near
+fscaleb.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0.000000000000000
+fcsr: 0x3030000
+roundig mode: zero
+fscaleb.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fscaleb.d ::
+input: 456.250000000000000 456.250000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: 3.000000000000000 34.031250000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: -7.250000000000000 107.000000000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0.000000000000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -0.000000000000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0.000000000000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.000000000000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fscaleb.d ::
+input: 456.000000000000000 456.250000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: 34.031250000000000 3.000000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0.000000000000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0.000000000000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -0.000000000000000
+fcsr: 0x3030100
+roundig mode: zero
+fscaleb.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: -1.000000000000000 0.031250000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050100
+roundig mode: zero
+fscaleb.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0.000000000000000
+fcsr: 0x3030100
+roundig mode: +inf
+fscaleb.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fscaleb.d ::
+input: 456.250000000000000 456.250000000000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: 3.000000000000000 34.031250000000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: -7.250000000000000 107.000000000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0.000000000000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -0.000000000000000
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0.000000000000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.d ::
+input: 0.015625000000000 356047.500000000000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.000000000000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fscaleb.d ::
+input: 456.000000000000000 456.250000000000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: 34.031250000000000 3.000000000000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0.000000000000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0.000000000000001
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -0.000000000000000
+fcsr: 0x3030200
+roundig mode: +inf
+fscaleb.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: 356047.500000000000000 0.015625000000000
+output: inf
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: -1.000000000000000 0.031250000000000
+output: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050200
+roundig mode: +inf
+fscaleb.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0.000000000000001
+fcsr: 0x3030200
+roundig mode: -inf
+fscaleb.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fscaleb.d ::
+input: 456.250000000000000 456.250000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: 3.000000000000000 34.031250000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: -1.000000000000000 45786.750000000000000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: -7.250000000000000 107.000000000000000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0.000000000000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: -0.000000000000001
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0.000000000000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0.000000000000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.d ::
+input: -248562.750000000000000 23.062500000000000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: -45786.500000000000000 0.000000000000000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fscaleb.d ::
+input: 456.000000000000000 456.250000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: 34.031250000000000 3.000000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0.000000000000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0.000000000000000
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: -0.000000000000001
+fcsr: 0x3030300
+roundig mode: -inf
+fscaleb.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000000000000
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: -1.000000000000000 0.031250000000000
+output: -inf
+fcsr: 0x5050300
+roundig mode: -inf
+fscaleb.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0.000000000000000
+fcsr: 0x3030300
+roundig mode: near
+flogb.s ::
+input: 0.000000
+output: -inf
+fcsr: 0x8080000
+roundig mode: near
+flogb.s ::
+input: 456.250000
+output: 8.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: 3.000000
+output: 1.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.s ::
+input: 1384.500000
+output: 10.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.s ::
+input: 1000000000.000000
+output: 29.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.s ::
+input: 1752.000000
+output: 10.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: 0.015625
+output: -6.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: 0.031250
+output: -5.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.s ::
+input: 456.000000
+output: 8.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: 34.031250
+output: 5.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: 45786.750000
+output: 15.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: 1752065.000000
+output: 20.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: 107.000000
+output: 6.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.s ::
+input: 356047.500000
+output: 18.000000
+fcsr: 0
+roundig mode: near
+flogb.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.s ::
+input: 23.062500
+output: 4.000000
+fcsr: 0
+roundig mode: zero
+flogb.s ::
+input: 0.000000
+output: -inf
+fcsr: 0x8080100
+roundig mode: zero
+flogb.s ::
+input: 456.250000
+output: 8.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: 3.000000
+output: 1.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.s ::
+input: 1384.500000
+output: 10.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.s ::
+input: 1000000000.000000
+output: 29.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.s ::
+input: 1752.000000
+output: 10.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: 0.015625
+output: -6.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: 0.031250
+output: -5.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.s ::
+input: 456.000000
+output: 8.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: 34.031250
+output: 5.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: 45786.750000
+output: 15.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: 1752065.000000
+output: 20.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: 107.000000
+output: 6.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.s ::
+input: 356047.500000
+output: 18.000000
+fcsr: 0x100
+roundig mode: zero
+flogb.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.s ::
+input: 23.062500
+output: 4.000000
+fcsr: 0x100
+roundig mode: +inf
+flogb.s ::
+input: 0.000000
+output: -inf
+fcsr: 0x8080200
+roundig mode: +inf
+flogb.s ::
+input: 456.250000
+output: 8.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: 3.000000
+output: 1.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.s ::
+input: 1384.500000
+output: 10.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.s ::
+input: 1000000000.000000
+output: 29.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.s ::
+input: 1752.000000
+output: 10.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: 0.015625
+output: -6.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: 0.031250
+output: -5.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.s ::
+input: 456.000000
+output: 8.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: 34.031250
+output: 5.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: 45786.750000
+output: 15.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: 1752065.000000
+output: 20.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: 107.000000
+output: 6.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.s ::
+input: 356047.500000
+output: 18.000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.s ::
+input: 23.062500
+output: 4.000000
+fcsr: 0x200
+roundig mode: -inf
+flogb.s ::
+input: 0.000000
+output: -inf
+fcsr: 0x8080300
+roundig mode: -inf
+flogb.s ::
+input: 456.250000
+output: 8.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: 3.000000
+output: 1.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.s ::
+input: 1384.500000
+output: 10.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: -7.250000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.s ::
+input: 1000000000.000000
+output: 29.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: -5786.500000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.s ::
+input: 1752.000000
+output: 10.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: 0.015625
+output: -6.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: 0.031250
+output: -5.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: -248562.750000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.s ::
+input: -45786.500000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.s ::
+input: 456.000000
+output: 8.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: 34.031250
+output: 5.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: 45786.750000
+output: 15.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: 1752065.000000
+output: 20.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: 107.000000
+output: 6.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: -45667.250000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.s ::
+input: -7.000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.s ::
+input: -347856.500000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.s ::
+input: 356047.500000
+output: 18.000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.s ::
+input: -1.000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.s ::
+input: 23.062500
+output: 4.000000
+fcsr: 0x300
+roundig mode: near
+flogb.d ::
+input: 0.000000000000000
+output: -inf
+fcsr: 0x8080000
+roundig mode: near
+flogb.d ::
+input: 456.250000000000000
+output: 8.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: 3.000000000000000
+output: 1.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.d ::
+input: 1384.500000000000000
+output: 10.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.d ::
+input: 1000000000.000000000000000
+output: 29.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.d ::
+input: 1752.000000000000000
+output: 10.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: 0.015625000000000
+output: -6.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: 0.031250000000000
+output: -5.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.d ::
+input: 456.000000000000000
+output: 8.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: 34.031250000000000
+output: 5.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: 45786.750000000000000
+output: 15.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: 1752065.000000000000000
+output: 20.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: 107.000000000000000
+output: 6.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.d ::
+input: 356047.500000000000000
+output: 18.000000000000000
+fcsr: 0
+roundig mode: near
+flogb.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100000
+roundig mode: near
+flogb.d ::
+input: 23.062500000000000
+output: 4.000000000000000
+fcsr: 0
+roundig mode: zero
+flogb.d ::
+input: 0.000000000000000
+output: -inf
+fcsr: 0x8080100
+roundig mode: zero
+flogb.d ::
+input: 456.250000000000000
+output: 8.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: 3.000000000000000
+output: 1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.d ::
+input: 1384.500000000000000
+output: 10.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.d ::
+input: 1000000000.000000000000000
+output: 29.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.d ::
+input: 1752.000000000000000
+output: 10.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: 0.015625000000000
+output: -6.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: 0.031250000000000
+output: -5.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.d ::
+input: 456.000000000000000
+output: 8.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: 34.031250000000000
+output: 5.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: 45786.750000000000000
+output: 15.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: 1752065.000000000000000
+output: 20.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: 107.000000000000000
+output: 6.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.d ::
+input: 356047.500000000000000
+output: 18.000000000000000
+fcsr: 0x100
+roundig mode: zero
+flogb.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100100
+roundig mode: zero
+flogb.d ::
+input: 23.062500000000000
+output: 4.000000000000000
+fcsr: 0x100
+roundig mode: +inf
+flogb.d ::
+input: 0.000000000000000
+output: -inf
+fcsr: 0x8080200
+roundig mode: +inf
+flogb.d ::
+input: 456.250000000000000
+output: 8.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: 3.000000000000000
+output: 1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.d ::
+input: 1384.500000000000000
+output: 10.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.d ::
+input: 1000000000.000000000000000
+output: 29.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.d ::
+input: 1752.000000000000000
+output: 10.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: 0.015625000000000
+output: -6.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: 0.031250000000000
+output: -5.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.d ::
+input: 456.000000000000000
+output: 8.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: 34.031250000000000
+output: 5.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: 45786.750000000000000
+output: 15.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: 1752065.000000000000000
+output: 20.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: 107.000000000000000
+output: 6.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.d ::
+input: 356047.500000000000000
+output: 18.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+flogb.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100200
+roundig mode: +inf
+flogb.d ::
+input: 23.062500000000000
+output: 4.000000000000000
+fcsr: 0x200
+roundig mode: -inf
+flogb.d ::
+input: 0.000000000000000
+output: -inf
+fcsr: 0x8080300
+roundig mode: -inf
+flogb.d ::
+input: 456.250000000000000
+output: 8.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: 3.000000000000000
+output: 1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.d ::
+input: 1384.500000000000000
+output: 10.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: -7.250000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.d ::
+input: 1000000000.000000000000000
+output: 29.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: -5786.500000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.d ::
+input: 1752.000000000000000
+output: 10.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: 0.015625000000000
+output: -6.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: 0.031250000000000
+output: -5.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: -248562.750000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.d ::
+input: -45786.500000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.d ::
+input: 456.000000000000000
+output: 8.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: 34.031250000000000
+output: 5.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: 45786.750000000000000
+output: 15.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: 1752065.000000000000000
+output: 20.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: 107.000000000000000
+output: 6.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: -45667.250000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.d ::
+input: -7.000000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.d ::
+input: -347856.500000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.d ::
+input: 356047.500000000000000
+output: 18.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+flogb.d ::
+input: -1.000000000000000
+output: nan
+fcsr: 0x10100300
+roundig mode: -inf
+flogb.d ::
+input: 23.062500000000000
+output: 4.000000000000000
+fcsr: 0x300
+roundig mode: near
+fcvt.s.d ::
+input: 0.000000000000000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 456.250000000000000
+output: 456.250000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 3.000000000000000
+output: 3.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: -1.000000000000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 1384.500000000000000
+output: 1384.500000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: -7.250000000000000
+output: -7.250000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: -5786.500000000000000
+output: -5786.500000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 1752.000000000000000
+output: 1752.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 0.015625000000000
+output: 0.015625
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 0.031250000000000
+output: 0.031250
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: -248562.750000000000000
+output: -248562.750000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: -45786.500000000000000
+output: -45786.500000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 456.000000000000000
+output: 456.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 34.031250000000000
+output: 34.031250
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 45786.750000000000000
+output: 45786.750000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 1752065.000000000000000
+output: 1752065.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 107.000000000000000
+output: 107.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: -45667.250000000000000
+output: -45667.250000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: -7.000000000000000
+output: -7.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: -347856.500000000000000
+output: -347856.500000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 356047.500000000000000
+output: 356047.500000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: -1.000000000000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fcvt.s.d ::
+input: 23.062500000000000
+output: 23.062500
+fcsr: 0
+roundig mode: zero
+fcvt.s.d ::
+input: 0.000000000000000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 456.250000000000000
+output: 456.250000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 3.000000000000000
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: -1.000000000000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 1384.500000000000000
+output: 1384.500000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: -7.250000000000000
+output: -7.250000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: -5786.500000000000000
+output: -5786.500000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 1752.000000000000000
+output: 1752.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 0.015625000000000
+output: 0.015625
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 0.031250000000000
+output: 0.031250
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: -248562.750000000000000
+output: -248562.750000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: -45786.500000000000000
+output: -45786.500000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 456.000000000000000
+output: 456.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 34.031250000000000
+output: 34.031250
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 45786.750000000000000
+output: 45786.750000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 1752065.000000000000000
+output: 1752065.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 107.000000000000000
+output: 107.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: -45667.250000000000000
+output: -45667.250000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: -7.000000000000000
+output: -7.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: -347856.500000000000000
+output: -347856.500000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 356047.500000000000000
+output: 356047.500000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: -1.000000000000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.s.d ::
+input: 23.062500000000000
+output: 23.062500
+fcsr: 0x100
+roundig mode: +inf
+fcvt.s.d ::
+input: 0.000000000000000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 456.250000000000000
+output: 456.250000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 3.000000000000000
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: -1.000000000000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 1384.500000000000000
+output: 1384.500000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: -7.250000000000000
+output: -7.250000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: -5786.500000000000000
+output: -5786.500000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 1752.000000000000000
+output: 1752.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 0.015625000000000
+output: 0.015625
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 0.031250000000000
+output: 0.031250
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: -248562.750000000000000
+output: -248562.750000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: -45786.500000000000000
+output: -45786.500000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 456.000000000000000
+output: 456.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 34.031250000000000
+output: 34.031250
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 45786.750000000000000
+output: 45786.750000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 1752065.000000000000000
+output: 1752065.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 107.000000000000000
+output: 107.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: -45667.250000000000000
+output: -45667.250000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: -7.000000000000000
+output: -7.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: -347856.500000000000000
+output: -347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 356047.500000000000000
+output: 356047.500000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: -1.000000000000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.s.d ::
+input: 23.062500000000000
+output: 23.062500
+fcsr: 0x200
+roundig mode: -inf
+fcvt.s.d ::
+input: 0.000000000000000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 456.250000000000000
+output: 456.250000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 3.000000000000000
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: -1.000000000000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 1384.500000000000000
+output: 1384.500000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: -7.250000000000000
+output: -7.250000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: -5786.500000000000000
+output: -5786.500000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 1752.000000000000000
+output: 1752.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 0.015625000000000
+output: 0.015625
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 0.031250000000000
+output: 0.031250
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: -248562.750000000000000
+output: -248562.750000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: -45786.500000000000000
+output: -45786.500000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 456.000000000000000
+output: 456.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 34.031250000000000
+output: 34.031250
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 45786.750000000000000
+output: 45786.750000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 1752065.000000000000000
+output: 1752065.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 107.000000000000000
+output: 107.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: -45667.250000000000000
+output: -45667.250000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: -7.000000000000000
+output: -7.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: -347856.500000000000000
+output: -347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 356047.500000000000000
+output: 356047.500000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: -1.000000000000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.s.d ::
+input: 23.062500000000000
+output: 23.062500
+fcsr: 0x300
+roundig mode: near
+fcvt.d.s ::
+input: 0.000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 456.250000
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 3.000000
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: -1.000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 1384.500000
+output: 1384.500000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: -7.250000
+output: -7.250000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 1000000000.000000
+output: 1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: -5786.500000
+output: -5786.500000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 1752.000000
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 0.015625
+output: 0.015625000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 0.031250
+output: 0.031250000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: -248562.750000
+output: -248562.750000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: -45786.500000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 456.000000
+output: 456.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 34.031250
+output: 34.031250000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 45786.750000
+output: 45786.750000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 1752065.000000
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 107.000000
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: -45667.250000
+output: -45667.250000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: -7.000000
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: -347856.500000
+output: -347856.500000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 356047.500000
+output: 356047.500000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: -1.000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fcvt.d.s ::
+input: 23.062500
+output: 23.062500000000000
+fcsr: 0
+roundig mode: zero
+fcvt.d.s ::
+input: 0.000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 456.250000
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 3.000000
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: -1.000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 1384.500000
+output: 1384.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: -7.250000
+output: -7.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 1000000000.000000
+output: 1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: -5786.500000
+output: -5786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 1752.000000
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 0.015625
+output: 0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 0.031250
+output: 0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: -248562.750000
+output: -248562.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: -45786.500000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 456.000000
+output: 456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 34.031250
+output: 34.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 45786.750000
+output: 45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 1752065.000000
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 107.000000
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: -45667.250000
+output: -45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: -7.000000
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: -347856.500000
+output: -347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 356047.500000
+output: 356047.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: -1.000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fcvt.d.s ::
+input: 23.062500
+output: 23.062500000000000
+fcsr: 0x100
+roundig mode: +inf
+fcvt.d.s ::
+input: 0.000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 456.250000
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 3.000000
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: -1.000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 1384.500000
+output: 1384.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: -7.250000
+output: -7.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 1000000000.000000
+output: 1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: -5786.500000
+output: -5786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 1752.000000
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 0.015625
+output: 0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 0.031250
+output: 0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: -248562.750000
+output: -248562.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: -45786.500000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 456.000000
+output: 456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 34.031250
+output: 34.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 45786.750000
+output: 45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 1752065.000000
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 107.000000
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: -45667.250000
+output: -45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: -7.000000
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: -347856.500000
+output: -347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 356047.500000
+output: 356047.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: -1.000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fcvt.d.s ::
+input: 23.062500
+output: 23.062500000000000
+fcsr: 0x200
+roundig mode: -inf
+fcvt.d.s ::
+input: 0.000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 456.250000
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 3.000000
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: -1.000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 1384.500000
+output: 1384.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: -7.250000
+output: -7.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 1000000000.000000
+output: 1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: -5786.500000
+output: -5786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 1752.000000
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 0.015625
+output: 0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 0.031250
+output: 0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: -248562.750000
+output: -248562.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: -45786.500000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 456.000000
+output: 456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 34.031250
+output: 34.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 45786.750000
+output: 45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 1752065.000000
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 107.000000
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: -45667.250000
+output: -45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: -7.000000
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: -347856.500000
+output: -347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 356047.500000
+output: 356047.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: -1.000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fcvt.d.s ::
+input: 23.062500
+output: 23.062500000000000
+fcsr: 0x300
+roundig mode: near
+ftintrm.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrm.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrm.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrm.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrm.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrm.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrm.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrm.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrm.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrm.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrm.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrm.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrm.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrm.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrm.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrm.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrm.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010000
+roundig mode: near
+ftintrm.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrm.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrm.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftintrm.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrm.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrm.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrm.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrm.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrm.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrm.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrm.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrp.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrp.w.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010000
+roundig mode: zero
+ftintrp.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrp.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrp.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010300
+roundig mode: near
+ftintrp.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrp.w.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010000
+roundig mode: zero
+ftintrp.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrp.w.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrp.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.w.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrp.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.w.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010300
+roundig mode: near
+ftintrp.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrp.l.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010000
+roundig mode: zero
+ftintrp.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrp.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrp.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010300
+roundig mode: near
+ftintrp.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftintrp.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrp.l.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010000
+roundig mode: zero
+ftintrp.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010100
+roundig mode: zero
+ftintrp.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrp.l.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrp.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrp.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrp.l.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrp.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrp.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrp.l.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010300
+roundig mode: near
+ftintrz.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrz.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrz.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrz.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrz.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrz.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrz.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrz.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrz.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrz.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrz.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrz.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrz.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrz.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrz.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrz.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrz.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010000
+roundig mode: near
+ftintrz.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrz.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrz.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftintrz.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrz.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrz.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrz.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrz.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrz.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrz.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrz.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrne.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrne.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrne.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrne.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrne.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrne.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrne.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrne.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrne.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrne.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrne.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrne.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrne.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrne.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrne.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrne.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftintrne.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftintrne.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftintrne.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftintrne.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010100
+roundig mode: zero
+ftintrne.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftintrne.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftintrne.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftintrne.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftintrne.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010200
+roundig mode: -inf
+ftintrne.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010300
+roundig mode: -inf
+ftintrne.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftintrne.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftint.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftint.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftint.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftint.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftint.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010200
+roundig mode: -inf
+ftint.w.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftint.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftint.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftint.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftint.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftint.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftint.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftint.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftint.w.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010200
+roundig mode: -inf
+ftint.w.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.w.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftint.w.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftint.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftint.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftint.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftint.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftint.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: 456.250000
+output: 457
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: 1384.500000
+output: 1385
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: -7.250000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: -5786.500000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: 0.015625
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: 0.031250
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: -248562.750000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: -45786.500000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: 34.031250
+output: 35
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: 45786.750000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: -45667.250000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: -347856.500000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: 356047.500000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.s ::
+input: 23.062500
+output: 24
+fcsr: 0x1010200
+roundig mode: -inf
+ftint.l.s ::
+input: 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: 456.250000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: 3.000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: 1384.500000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: -7.250000
+output: -8
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: 1000000000.000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: -5786.500000
+output: -5787
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: 1752.000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: 0.015625
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: 0.031250
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: -248562.750000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: -45786.500000
+output: -45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: 456.000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: 34.031250
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: 45786.750000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: 1752065.000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: 107.000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: -45667.250000
+output: -45668
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: -7.000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: -347856.500000
+output: -347857
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: 356047.500000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.s ::
+input: -1.000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.s ::
+input: 23.062500
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ftint.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010000
+roundig mode: near
+ftint.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0
+roundig mode: near
+ftint.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010000
+roundig mode: zero
+ftint.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010100
+roundig mode: zero
+ftint.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x100
+roundig mode: zero
+ftint.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010100
+roundig mode: +inf
+ftint.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: 456.250000000000000
+output: 457
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: 1384.500000000000000
+output: 1385
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: -7.250000000000000
+output: -7
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: -5786.500000000000000
+output: -5786
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: 0.015625000000000
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: 0.031250000000000
+output: 1
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: -248562.750000000000000
+output: -248562
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: -45786.500000000000000
+output: -45786
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: 34.031250000000000
+output: 35
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: 45786.750000000000000
+output: 45787
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: -45667.250000000000000
+output: -45667
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: -347856.500000000000000
+output: -347856
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: 356047.500000000000000
+output: 356048
+fcsr: 0x1010200
+roundig mode: +inf
+ftint.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x200
+roundig mode: +inf
+ftint.l.d ::
+input: 23.062500000000000
+output: 24
+fcsr: 0x1010200
+roundig mode: -inf
+ftint.l.d ::
+input: 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: 456.250000000000000
+output: 456
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: 3.000000000000000
+output: 3
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: 1384.500000000000000
+output: 1384
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: -7.250000000000000
+output: -8
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: 1000000000.000000000000000
+output: 1000000000
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: -5786.500000000000000
+output: -5787
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: 1752.000000000000000
+output: 1752
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: 0.015625000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: 0.031250000000000
+output: 0
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: -248562.750000000000000
+output: -248563
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: -45786.500000000000000
+output: -45787
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: 456.000000000000000
+output: 456
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: 34.031250000000000
+output: 34
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: 45786.750000000000000
+output: 45786
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: 1752065.000000000000000
+output: 1752065
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: 107.000000000000000
+output: 107
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: -45667.250000000000000
+output: -45668
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: -7.000000000000000
+output: -7
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: -347856.500000000000000
+output: -347857
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: 356047.500000000000000
+output: 356047
+fcsr: 0x1010300
+roundig mode: -inf
+ftint.l.d ::
+input: -1.000000000000000
+output: -1
+fcsr: 0x300
+roundig mode: -inf
+ftint.l.d ::
+input: 23.062500000000000
+output: 23
+fcsr: 0x1010300
+roundig mode: near
+ffint.s.w ::
+input: 0
+output: 0.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 456
+output: 456.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 3
+output: 3.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: -1
+output: -1.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: -1
+output: -1.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 356
+output: 356.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 1000000000
+output: 1000000000.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: -5786
+output: -5786.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 1752
+output: 1752.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 24575
+output: 24575.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 10
+output: 10.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: -248562
+output: -248562.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: -45786
+output: -45786.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 456
+output: 456.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 34
+output: 34.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 45786
+output: 45786.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 1752065
+output: 1752065.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 107
+output: 107.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: -45667
+output: -45667.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: -7
+output: -7.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: -347856
+output: -347856.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: -2147483648
+output: -2147483648.000000
+fcsr: 0
+roundig mode: near
+ffint.s.w ::
+input: 268435455
+output: 268435456.000000
+fcsr: 0x1010000
+roundig mode: near
+ffint.s.w ::
+input: 23
+output: 23.000000
+fcsr: 0
+roundig mode: zero
+ffint.s.w ::
+input: 0
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 456
+output: 456.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 3
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: -1
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: -1
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 356
+output: 356.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 1000000000
+output: 1000000000.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: -5786
+output: -5786.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 1752
+output: 1752.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 24575
+output: 24575.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 10
+output: 10.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: -248562
+output: -248562.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: -45786
+output: -45786.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 456
+output: 456.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 34
+output: 34.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 45786
+output: 45786.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 1752065
+output: 1752065.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 107
+output: 107.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: -45667
+output: -45667.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: -7
+output: -7.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: -347856
+output: -347856.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: -2147483648
+output: -2147483648.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.w ::
+input: 268435455
+output: 268435440.000000
+fcsr: 0x1010100
+roundig mode: zero
+ffint.s.w ::
+input: 23
+output: 23.000000
+fcsr: 0x100
+roundig mode: +inf
+ffint.s.w ::
+input: 0
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 456
+output: 456.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 3
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: -1
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: -1
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 356
+output: 356.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 1000000000
+output: 1000000000.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: -5786
+output: -5786.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 1752
+output: 1752.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 24575
+output: 24575.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 10
+output: 10.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: -248562
+output: -248562.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: -45786
+output: -45786.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 456
+output: 456.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 34
+output: 34.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 45786
+output: 45786.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 1752065
+output: 1752065.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 107
+output: 107.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: -45667
+output: -45667.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: -7
+output: -7.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: -347856
+output: -347856.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: -2147483648
+output: -2147483648.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.w ::
+input: 268435455
+output: 268435456.000000
+fcsr: 0x1010200
+roundig mode: +inf
+ffint.s.w ::
+input: 23
+output: 23.000000
+fcsr: 0x200
+roundig mode: -inf
+ffint.s.w ::
+input: 0
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 456
+output: 456.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 3
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: -1
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: -1
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 356
+output: 356.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 1000000000
+output: 1000000000.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: -5786
+output: -5786.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 1752
+output: 1752.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 24575
+output: 24575.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 10
+output: 10.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: -248562
+output: -248562.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: -45786
+output: -45786.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 456
+output: 456.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 34
+output: 34.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 45786
+output: 45786.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 1752065
+output: 1752065.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 107
+output: 107.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: -45667
+output: -45667.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: -7
+output: -7.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: -347856
+output: -347856.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: -2147483648
+output: -2147483648.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.w ::
+input: 268435455
+output: 268435440.000000
+fcsr: 0x1010300
+roundig mode: -inf
+ffint.s.w ::
+input: 23
+output: 23.000000
+fcsr: 0x300
+roundig mode: near
+ffint.s.l ::
+input: 18
+output: 18.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 25
+output: 25.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 3
+output: 3.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: -1
+output: -1.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 4294967295
+output: 4294967296.000000
+fcsr: 0x1010000
+roundig mode: near
+ffint.s.l ::
+input: 356
+output: 356.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 1000000
+output: 1000000.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: -5786
+output: -5786.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: -1
+output: -1.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 24575
+output: 24575.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 10
+output: 10.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: -125458
+output: -125458.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: -486
+output: -486.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 456
+output: 456.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 34
+output: 34.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 45786
+output: 45786.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 0
+output: 0.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 1700000
+output: 1700000.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: -45667
+output: -45667.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: -7
+output: -7.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: -347856
+output: -347856.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 2147483648
+output: 2147483648.000000
+fcsr: 0
+roundig mode: near
+ffint.s.l ::
+input: 268435455
+output: 268435456.000000
+fcsr: 0x1010000
+roundig mode: near
+ffint.s.l ::
+input: 23
+output: 23.000000
+fcsr: 0
+roundig mode: zero
+ffint.s.l ::
+input: 18
+output: 18.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 25
+output: 25.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 3
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: -1
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 4294967295
+output: 4294967040.000000
+fcsr: 0x1010100
+roundig mode: zero
+ffint.s.l ::
+input: 356
+output: 356.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 1000000
+output: 1000000.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: -5786
+output: -5786.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: -1
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 24575
+output: 24575.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 10
+output: 10.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: -125458
+output: -125458.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: -486
+output: -486.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 456
+output: 456.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 34
+output: 34.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 45786
+output: 45786.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 0
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 1700000
+output: 1700000.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: -45667
+output: -45667.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: -7
+output: -7.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: -347856
+output: -347856.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 2147483648
+output: 2147483648.000000
+fcsr: 0x100
+roundig mode: zero
+ffint.s.l ::
+input: 268435455
+output: 268435440.000000
+fcsr: 0x1010100
+roundig mode: zero
+ffint.s.l ::
+input: 23
+output: 23.000000
+fcsr: 0x100
+roundig mode: +inf
+ffint.s.l ::
+input: 18
+output: 18.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 25
+output: 25.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 3
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: -1
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 4294967295
+output: 4294967296.000000
+fcsr: 0x1010200
+roundig mode: +inf
+ffint.s.l ::
+input: 356
+output: 356.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 1000000
+output: 1000000.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: -5786
+output: -5786.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: -1
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 24575
+output: 24575.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 10
+output: 10.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: -125458
+output: -125458.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: -486
+output: -486.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 456
+output: 456.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 34
+output: 34.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 45786
+output: 45786.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 0
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 1700000
+output: 1700000.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: -45667
+output: -45667.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: -7
+output: -7.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: -347856
+output: -347856.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 2147483648
+output: 2147483648.000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.s.l ::
+input: 268435455
+output: 268435456.000000
+fcsr: 0x1010200
+roundig mode: +inf
+ffint.s.l ::
+input: 23
+output: 23.000000
+fcsr: 0x200
+roundig mode: -inf
+ffint.s.l ::
+input: 18
+output: 18.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 25
+output: 25.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 3
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: -1
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 4294967295
+output: 4294967040.000000
+fcsr: 0x1010300
+roundig mode: -inf
+ffint.s.l ::
+input: 356
+output: 356.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 1000000
+output: 1000000.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: -5786
+output: -5786.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: -1
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 24575
+output: 24575.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 10
+output: 10.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: -125458
+output: -125458.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: -486
+output: -486.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 456
+output: 456.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 34
+output: 34.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 45786
+output: 45786.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 0
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 1700000
+output: 1700000.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: -45667
+output: -45667.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: -7
+output: -7.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: -347856
+output: -347856.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 2147483648
+output: 2147483648.000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.s.l ::
+input: 268435455
+output: 268435440.000000
+fcsr: 0x1010300
+roundig mode: -inf
+ffint.s.l ::
+input: 23
+output: 23.000000
+fcsr: 0x300
+roundig mode: near
+ffint.d.w ::
+input: 0
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 456
+output: 456.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 3
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: -1
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: -1
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 356
+output: 356.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 1000000000
+output: 1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: -5786
+output: -5786.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 1752
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 24575
+output: 24575.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 10
+output: 10.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: -248562
+output: -248562.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: -45786
+output: -45786.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 456
+output: 456.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 34
+output: 34.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 45786
+output: 45786.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 1752065
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 107
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: -45667
+output: -45667.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: -7
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: -347856
+output: -347856.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: -2147483648
+output: -2147483648.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 268435455
+output: 268435455.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.w ::
+input: 23
+output: 23.000000000000000
+fcsr: 0
+roundig mode: zero
+ffint.d.w ::
+input: 0
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 456
+output: 456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 3
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 356
+output: 356.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 1000000000
+output: 1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: -5786
+output: -5786.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 1752
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 24575
+output: 24575.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 10
+output: 10.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: -248562
+output: -248562.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: -45786
+output: -45786.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 456
+output: 456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 34
+output: 34.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 45786
+output: 45786.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 1752065
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 107
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: -45667
+output: -45667.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: -7
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: -347856
+output: -347856.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: -2147483648
+output: -2147483648.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 268435455
+output: 268435455.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.w ::
+input: 23
+output: 23.000000000000000
+fcsr: 0x100
+roundig mode: +inf
+ffint.d.w ::
+input: 0
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 456
+output: 456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 3
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 356
+output: 356.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 1000000000
+output: 1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: -5786
+output: -5786.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 1752
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 24575
+output: 24575.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 10
+output: 10.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: -248562
+output: -248562.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: -45786
+output: -45786.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 456
+output: 456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 34
+output: 34.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 45786
+output: 45786.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 1752065
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 107
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: -45667
+output: -45667.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: -7
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: -347856
+output: -347856.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: -2147483648
+output: -2147483648.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 268435455
+output: 268435455.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.w ::
+input: 23
+output: 23.000000000000000
+fcsr: 0x200
+roundig mode: -inf
+ffint.d.w ::
+input: 0
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 456
+output: 456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 3
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 356
+output: 356.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 1000000000
+output: 1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: -5786
+output: -5786.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 1752
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 24575
+output: 24575.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 10
+output: 10.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: -248562
+output: -248562.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: -45786
+output: -45786.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 456
+output: 456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 34
+output: 34.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 45786
+output: 45786.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 1752065
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 107
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: -45667
+output: -45667.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: -7
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: -347856
+output: -347856.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: -2147483648
+output: -2147483648.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 268435455
+output: 268435455.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.w ::
+input: 23
+output: 23.000000000000000
+fcsr: 0x300
+roundig mode: near
+ffint.d.l ::
+input: 18
+output: 18.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 25
+output: 25.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 3
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: -1
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 4294967295
+output: 4294967295.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 356
+output: 356.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 1000000
+output: 1000000.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: -5786
+output: -5786.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: -1
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 24575
+output: 24575.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 10
+output: 10.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: -125458
+output: -125458.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: -486
+output: -486.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 456
+output: 456.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 34
+output: 34.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 45786
+output: 45786.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 0
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 1700000
+output: 1700000.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: -45667
+output: -45667.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: -7
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: -347856
+output: -347856.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 2147483648
+output: 2147483648.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 268435455
+output: 268435455.000000000000000
+fcsr: 0
+roundig mode: near
+ffint.d.l ::
+input: 23
+output: 23.000000000000000
+fcsr: 0
+roundig mode: zero
+ffint.d.l ::
+input: 18
+output: 18.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 25
+output: 25.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 3
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 4294967295
+output: 4294967295.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 356
+output: 356.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 1000000
+output: 1000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: -5786
+output: -5786.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 24575
+output: 24575.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 10
+output: 10.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: -125458
+output: -125458.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: -486
+output: -486.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 456
+output: 456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 34
+output: 34.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 45786
+output: 45786.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 0
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 1700000
+output: 1700000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: -45667
+output: -45667.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: -7
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: -347856
+output: -347856.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 2147483648
+output: 2147483648.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 268435455
+output: 268435455.000000000000000
+fcsr: 0x100
+roundig mode: zero
+ffint.d.l ::
+input: 23
+output: 23.000000000000000
+fcsr: 0x100
+roundig mode: +inf
+ffint.d.l ::
+input: 18
+output: 18.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 25
+output: 25.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 3
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 4294967295
+output: 4294967295.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 356
+output: 356.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 1000000
+output: 1000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: -5786
+output: -5786.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 24575
+output: 24575.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 10
+output: 10.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: -125458
+output: -125458.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: -486
+output: -486.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 456
+output: 456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 34
+output: 34.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 45786
+output: 45786.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 0
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 1700000
+output: 1700000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: -45667
+output: -45667.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: -7
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: -347856
+output: -347856.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 2147483648
+output: 2147483648.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 268435455
+output: 268435455.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+ffint.d.l ::
+input: 23
+output: 23.000000000000000
+fcsr: 0x200
+roundig mode: -inf
+ffint.d.l ::
+input: 18
+output: 18.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 25
+output: 25.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 3
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 4294967295
+output: 4294967295.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 356
+output: 356.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 1000000
+output: 1000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: -5786
+output: -5786.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: -1
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 24575
+output: 24575.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 10
+output: 10.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: -125458
+output: -125458.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: -486
+output: -486.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 456
+output: 456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 34
+output: 34.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 45786
+output: 45786.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 0
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 1700000
+output: 1700000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: -45667
+output: -45667.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: -7
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: -347856
+output: -347856.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 2147483648
+output: 2147483648.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 268435455
+output: 268435455.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+ffint.d.l ::
+input: 23
+output: 23.000000000000000
+fcsr: 0x300
+roundig mode: near
+frint.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: 456.250000
+output: 456.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: 1384.500000
+output: 1384.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: -7.250000
+output: -7.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: -5786.500000
+output: -5786.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: 0.015625
+output: 0.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: 0.031250
+output: 0.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: -248562.750000
+output: -248563.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: -45786.500000
+output: -45786.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: 34.031250
+output: 34.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: 45786.750000
+output: 45787.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: -45667.250000
+output: -45667.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: -7.000000
+output: -7.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: -347856.500000
+output: -347856.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: 356047.500000
+output: 356048.000000
+fcsr: 0x1010000
+roundig mode: near
+frint.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+frint.s ::
+input: 23.062500
+output: 23.000000
+fcsr: 0x1010000
+roundig mode: zero
+frint.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: 456.250000
+output: 456.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: 1384.500000
+output: 1384.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: -7.250000
+output: -7.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: -5786.500000
+output: -5786.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: 0.015625
+output: 0.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: 0.031250
+output: 0.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: -248562.750000
+output: -248562.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: -45786.500000
+output: -45786.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: 34.031250
+output: 34.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: 45786.750000
+output: 45786.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: -45667.250000
+output: -45667.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: -7.000000
+output: -7.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: -347856.500000
+output: -347856.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: 356047.500000
+output: 356047.000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+frint.s ::
+input: 23.062500
+output: 23.000000
+fcsr: 0x1010100
+roundig mode: +inf
+frint.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: 456.250000
+output: 457.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: 1384.500000
+output: 1385.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: -7.250000
+output: -7.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: -5786.500000
+output: -5786.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: 0.015625
+output: 1.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: 0.031250
+output: 1.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: -248562.750000
+output: -248562.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: -45786.500000
+output: -45786.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: 34.031250
+output: 35.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: 45786.750000
+output: 45787.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: -45667.250000
+output: -45667.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: -7.000000
+output: -7.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: -347856.500000
+output: -347856.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: 356047.500000
+output: 356048.000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+frint.s ::
+input: 23.062500
+output: 24.000000
+fcsr: 0x1010200
+roundig mode: -inf
+frint.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: 456.250000
+output: 456.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: 1384.500000
+output: 1384.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: -7.250000
+output: -8.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: -5786.500000
+output: -5787.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: 0.015625
+output: 0.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: 0.031250
+output: 0.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: -248562.750000
+output: -248563.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: -45786.500000
+output: -45787.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: 34.031250
+output: 34.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: 45786.750000
+output: 45786.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: -45667.250000
+output: -45668.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: -7.000000
+output: -7.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: -347856.500000
+output: -347857.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: 356047.500000
+output: 356047.000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+frint.s ::
+input: 23.062500
+output: 23.000000
+fcsr: 0x1010300
+roundig mode: near
+frint.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: 456.250000000000000
+output: 456.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: 1384.500000000000000
+output: 1384.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: -7.250000000000000
+output: -7.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: -5786.500000000000000
+output: -5786.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: 0.015625000000000
+output: 0.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: 0.031250000000000
+output: 0.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: -248562.750000000000000
+output: -248563.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: -45786.500000000000000
+output: -45786.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: 34.031250000000000
+output: 34.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: 45786.750000000000000
+output: 45787.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: -45667.250000000000000
+output: -45667.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: -7.000000000000000
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: -347856.500000000000000
+output: -347856.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: 356047.500000000000000
+output: 356048.000000000000000
+fcsr: 0x1010000
+roundig mode: near
+frint.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+frint.d ::
+input: 23.062500000000000
+output: 23.000000000000000
+fcsr: 0x1010000
+roundig mode: zero
+frint.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: 456.250000000000000
+output: 456.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: 1384.500000000000000
+output: 1384.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: -7.250000000000000
+output: -7.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: -5786.500000000000000
+output: -5786.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: 0.015625000000000
+output: 0.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: 0.031250000000000
+output: 0.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: -248562.750000000000000
+output: -248562.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: -45786.500000000000000
+output: -45786.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: 34.031250000000000
+output: 34.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: 45786.750000000000000
+output: 45786.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: -45667.250000000000000
+output: -45667.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: -347856.500000000000000
+output: -347856.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: 356047.500000000000000
+output: 356047.000000000000000
+fcsr: 0x1010100
+roundig mode: zero
+frint.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+frint.d ::
+input: 23.062500000000000
+output: 23.000000000000000
+fcsr: 0x1010100
+roundig mode: +inf
+frint.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: 456.250000000000000
+output: 457.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: 1384.500000000000000
+output: 1385.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: -7.250000000000000
+output: -7.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: -5786.500000000000000
+output: -5786.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: 0.015625000000000
+output: 1.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: 0.031250000000000
+output: 1.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: -248562.750000000000000
+output: -248562.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: -45786.500000000000000
+output: -45786.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: 34.031250000000000
+output: 35.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: 45786.750000000000000
+output: 45787.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: -45667.250000000000000
+output: -45667.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: -347856.500000000000000
+output: -347856.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: 356047.500000000000000
+output: 356048.000000000000000
+fcsr: 0x1010200
+roundig mode: +inf
+frint.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+frint.d ::
+input: 23.062500000000000
+output: 24.000000000000000
+fcsr: 0x1010200
+roundig mode: -inf
+frint.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: 456.250000000000000
+output: 456.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: 1384.500000000000000
+output: 1384.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: -7.250000000000000
+output: -8.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: -5786.500000000000000
+output: -5787.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: 0.015625000000000
+output: 0.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: 0.031250000000000
+output: 0.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: -248562.750000000000000
+output: -248563.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: -45786.500000000000000
+output: -45787.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: 34.031250000000000
+output: 34.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: 45786.750000000000000
+output: 45786.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: -45667.250000000000000
+output: -45668.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: -347856.500000000000000
+output: -347857.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: 356047.500000000000000
+output: 356047.000000000000000
+fcsr: 0x1010300
+roundig mode: -inf
+frint.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+frint.d ::
+input: 23.062500000000000
+output: 23.000000000000000
+fcsr: 0x1010300
+roundig mode: near
+fcmp.caf.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.caf.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.caf.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.caf.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.caf.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.caf.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.caf.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.caf.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.caf.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.caf.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.caf.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.caf.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.saf.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.saf.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.saf.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.saf.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.saf.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.saf.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.saf.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.saf.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.saf.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.saf.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.saf.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.saf.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.clt.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.clt.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.clt.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.clt.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.clt.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.clt.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.clt.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.clt.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.clt.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.clt.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.clt.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.clt.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.slt.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.slt.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.slt.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.slt.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.slt.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.slt.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.slt.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.slt.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.slt.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.slt.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.slt.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.slt.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.ceq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.ceq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.ceq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.ceq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.ceq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.ceq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.ceq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.ceq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.seq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.seq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.seq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.seq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.seq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.seq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.seq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.seq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.seq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.seq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.seq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.seq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cle.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cle.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cle.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cle.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cle.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cle.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cle.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cle.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cle.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cle.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cle.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cle.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sle.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sle.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sle.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sle.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sle.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sle.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sle.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sle.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sle.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sle.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sle.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sle.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cun.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cun.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cun.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cun.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cun.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cun.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cun.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cun.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cun.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cun.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cun.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cun.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sun.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sun.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sun.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sun.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sun.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sun.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sun.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sun.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sun.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sun.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sun.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sun.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cult.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cult.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cult.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cult.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cult.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cult.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cult.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cult.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cult.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cult.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cult.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cult.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sult.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sult.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sult.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sult.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sult.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sult.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sult.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sult.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sult.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sult.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sult.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sult.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cueq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cueq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cueq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cueq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cueq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cueq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cueq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cueq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sueq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sueq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 3.000000 34.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: -1.000000 4578.750000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: -7.250000 107.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: -5786.500000 -7.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 0.015625 356.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: -248562.750000 23.062500
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: -45786.500000 0.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 456.000000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: -45667.250000 100.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: -347856.500000 1752.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: -1.000000 0.031250
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sueq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sueq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sueq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sueq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sueq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 3.000000000000000 34.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: -7.250000000000000 107.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 456.000000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: -1.000000000000000 0.031250000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sueq.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cule.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cule.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cule.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cule.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cule.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cule.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.cule.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cule.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cule.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cule.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cule.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cule.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sule.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sule.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sule.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sule.s ::
+input: 0.000000 -4578.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 1384.500000 175.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 1000000000.000000 -456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 1752.000000 -3478.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 0.031250 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 34.031250 3.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 45786.750000 -1.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 1752065.000000 1384.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 107.000000 -7.000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: -7.000000 -5786.500000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 356047.500000 0.015625
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.s ::
+input: 23.062500 -248562.750000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.sule.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sule.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0
+roundig mode: zero
+fcmp.sule.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sule.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sule.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sule.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sule.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 34.031250000000000 3.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sule.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 0
+fcsr: 0x300
+roundig mode: near
+fcmp.cne.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.cne.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cne.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cne.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.cne.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cne.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.cne.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cne.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cne.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cne.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cne.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cne.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.sne.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.sne.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sne.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sne.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.sne.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sne.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.sne.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sne.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sne.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sne.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sne.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sne.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.cor.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.cor.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cor.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cor.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.cor.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cor.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.cor.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cor.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cor.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cor.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cor.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cor.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.sor.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.sor.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sor.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sor.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 456.250000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.sor.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sor.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.sor.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sor.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sor.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sor.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sor.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 456.250000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sor.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.cune.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.cune.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cune.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cune.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.cune.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.cune.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.cune.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.cune.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.cune.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.cune.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.cune.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.cune.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.sune.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.sune.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sune.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sune.s ::
+input: 0.000000 -4578.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 456.250000 456.250000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 3.000000 34.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: -1.000000 4578.750000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 1384.500000 175.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: -7.250000 107.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 1000000000.000000 -456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: -5786.500000 -7.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 1752.000000 -3478.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 0.015625 356.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 0.031250 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: -248562.750000 23.062500
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: -45786.500000 0.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 456.000000 456.250000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 34.031250 3.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 45786.750000 -1.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 1752065.000000 1384.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 107.000000 -7.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: -45667.250000 100.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: -7.000000 -5786.500000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: -347856.500000 1752.000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 356047.500000 0.015625
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: -1.000000 0.031250
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.s ::
+input: 23.062500 -248562.750000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fcmp.sune.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0
+roundig mode: near
+fcmp.sune.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0
+roundig mode: zero
+fcmp.sune.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x100
+roundig mode: zero
+fcmp.sune.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x100
+roundig mode: +inf
+fcmp.sune.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x200
+roundig mode: +inf
+fcmp.sune.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x200
+roundig mode: -inf
+fcmp.sune.d ::
+input: 0.000000000000000 -45786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 456.250000000000000 456.250000000000000
+output: 0
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 3.000000000000000 34.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: -1.000000000000000 45786.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 1384.500000000000000 1752065.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: -7.250000000000000 107.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 1000000000.000000000000000 -45667.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: -5786.500000000000000 -7.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 1752.000000000000000 -347856.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 0.015625000000000 356047.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 0.031250000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: -248562.750000000000000 23.062500000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: -45786.500000000000000 0.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 456.000000000000000 456.250000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 34.031250000000000 3.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 45786.750000000000000 -1.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 1752065.000000000000000 1384.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 107.000000000000000 -7.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: -45667.250000000000000 1000000000.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: -7.000000000000000 -5786.500000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: -347856.500000000000000 1752.000000000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 356047.500000000000000 0.015625000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: -1.000000000000000 0.031250000000000
+output: 1
+fcsr: 0x300
+roundig mode: -inf
+fcmp.sune.d ::
+input: 23.062500000000000 -248562.750000000000000
+output: 1
+fcsr: 0x300
+roundig mode: near
+fsel ::
+input: 0.000000000000000 -45786.500000000000000 0
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 456.250000000000000 456.250000000000000 1
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 3.000000000000000 34.031250000000000 0
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: -1.000000000000000 45786.750000000000000 1
+output: 45786.750000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 1384.500000000000000 1752065.000000000000000 1
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: -7.250000000000000 107.000000000000000 0
+output: -7.250000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 1000000000.000000000000000 -45667.250000000000000 1
+output: -45667.250000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: -5786.500000000000000 -7.250000000000000 0
+output: -5786.500000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 1752.000000000000000 -347856.500000000000000 0
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 0.015625000000000 356047.500000000000000 0
+output: 0.015625000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 0.031250000000000 -1.000000000000000 1
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: -248562.750000000000000 23.062500000000000 1
+output: 23.062500000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: -45786.500000000000000 0.000000000000000 1
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 456.000000000000000 456.250000000000000 1
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 34.031250000000000 3.000000000000000 0
+output: 34.031250000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 45786.750000000000000 -1.000000000000000 0
+output: 45786.750000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 1752065.000000000000000 1384.500000000000000 0
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 107.000000000000000 -7.000000000000000 0
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: -45667.250000000000000 1000000000.000000000000000 0
+output: -45667.250000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: -7.000000000000000 -5786.500000000000000 0
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: -347856.500000000000000 1752.000000000000000 1
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 356047.500000000000000 0.015625000000000 1
+output: 0.015625000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: -1.000000000000000 0.031250000000000 1
+output: 0.031250000000000
+fcsr: 0
+roundig mode: near
+fsel ::
+input: 23.062500000000000 -248562.750000000000000 1
+output: -248562.750000000000000
+fcsr: 0
+roundig mode: zero
+fsel ::
+input: 0.000000000000000 -45786.500000000000000 0
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 456.250000000000000 456.250000000000000 1
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 3.000000000000000 34.031250000000000 0
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: -1.000000000000000 45786.750000000000000 1
+output: 45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 1384.500000000000000 1752065.000000000000000 1
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: -7.250000000000000 107.000000000000000 0
+output: -7.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 1000000000.000000000000000 -45667.250000000000000 1
+output: -45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: -5786.500000000000000 -7.250000000000000 0
+output: -5786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 1752.000000000000000 -347856.500000000000000 0
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 0.015625000000000 356047.500000000000000 0
+output: 0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 0.031250000000000 -1.000000000000000 1
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: -248562.750000000000000 23.062500000000000 1
+output: 23.062500000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: -45786.500000000000000 0.000000000000000 1
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 456.000000000000000 456.250000000000000 1
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 34.031250000000000 3.000000000000000 0
+output: 34.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 45786.750000000000000 -1.000000000000000 0
+output: 45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 1752065.000000000000000 1384.500000000000000 0
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 107.000000000000000 -7.000000000000000 0
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: -45667.250000000000000 1000000000.000000000000000 0
+output: -45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: -7.000000000000000 -5786.500000000000000 0
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: -347856.500000000000000 1752.000000000000000 1
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 356047.500000000000000 0.015625000000000 1
+output: 0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: -1.000000000000000 0.031250000000000 1
+output: 0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fsel ::
+input: 23.062500000000000 -248562.750000000000000 1
+output: -248562.750000000000000
+fcsr: 0x100
+roundig mode: +inf
+fsel ::
+input: 0.000000000000000 -45786.500000000000000 0
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 456.250000000000000 456.250000000000000 1
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 3.000000000000000 34.031250000000000 0
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: -1.000000000000000 45786.750000000000000 1
+output: 45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 1384.500000000000000 1752065.000000000000000 1
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: -7.250000000000000 107.000000000000000 0
+output: -7.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 1000000000.000000000000000 -45667.250000000000000 1
+output: -45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: -5786.500000000000000 -7.250000000000000 0
+output: -5786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 1752.000000000000000 -347856.500000000000000 0
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 0.015625000000000 356047.500000000000000 0
+output: 0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 0.031250000000000 -1.000000000000000 1
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: -248562.750000000000000 23.062500000000000 1
+output: 23.062500000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: -45786.500000000000000 0.000000000000000 1
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 456.000000000000000 456.250000000000000 1
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 34.031250000000000 3.000000000000000 0
+output: 34.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 45786.750000000000000 -1.000000000000000 0
+output: 45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 1752065.000000000000000 1384.500000000000000 0
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 107.000000000000000 -7.000000000000000 0
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: -45667.250000000000000 1000000000.000000000000000 0
+output: -45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: -7.000000000000000 -5786.500000000000000 0
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: -347856.500000000000000 1752.000000000000000 1
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 356047.500000000000000 0.015625000000000 1
+output: 0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: -1.000000000000000 0.031250000000000 1
+output: 0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fsel ::
+input: 23.062500000000000 -248562.750000000000000 1
+output: -248562.750000000000000
+fcsr: 0x200
+roundig mode: -inf
+fsel ::
+input: 0.000000000000000 -45786.500000000000000 0
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 456.250000000000000 456.250000000000000 1
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 3.000000000000000 34.031250000000000 0
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: -1.000000000000000 45786.750000000000000 1
+output: 45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 1384.500000000000000 1752065.000000000000000 1
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: -7.250000000000000 107.000000000000000 0
+output: -7.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 1000000000.000000000000000 -45667.250000000000000 1
+output: -45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: -5786.500000000000000 -7.250000000000000 0
+output: -5786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 1752.000000000000000 -347856.500000000000000 0
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 0.015625000000000 356047.500000000000000 0
+output: 0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 0.031250000000000 -1.000000000000000 1
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: -248562.750000000000000 23.062500000000000 1
+output: 23.062500000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: -45786.500000000000000 0.000000000000000 1
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 456.000000000000000 456.250000000000000 1
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 34.031250000000000 3.000000000000000 0
+output: 34.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 45786.750000000000000 -1.000000000000000 0
+output: 45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 1752065.000000000000000 1384.500000000000000 0
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 107.000000000000000 -7.000000000000000 0
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: -45667.250000000000000 1000000000.000000000000000 0
+output: -45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: -7.000000000000000 -5786.500000000000000 0
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: -347856.500000000000000 1752.000000000000000 1
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 356047.500000000000000 0.015625000000000 1
+output: 0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: -1.000000000000000 0.031250000000000 1
+output: 0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fsel ::
+input: 23.062500000000000 -248562.750000000000000 1
+output: -248562.750000000000000
+fcsr: 0x300
+roundig mode: near
+fmov.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 456.250000
+output: 456.250000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 1384.500000
+output: 1384.500000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: -7.250000
+output: -7.250000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: -5786.500000
+output: -5786.500000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 0.015625
+output: 0.015625
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 0.031250
+output: 0.031250
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: -248562.750000
+output: -248562.750000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: -45786.500000
+output: -45786.500000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 34.031250
+output: 34.031250
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 45786.750000
+output: 45786.750000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: -45667.250000
+output: -45667.250000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: -7.000000
+output: -7.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: -347856.500000
+output: -347856.500000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 356047.500000
+output: 356047.500000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0
+roundig mode: near
+fmov.s ::
+input: 23.062500
+output: 23.062500
+fcsr: 0
+roundig mode: zero
+fmov.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 456.250000
+output: 456.250000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 1384.500000
+output: 1384.500000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: -7.250000
+output: -7.250000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: -5786.500000
+output: -5786.500000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 0.015625
+output: 0.015625
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 0.031250
+output: 0.031250
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: -248562.750000
+output: -248562.750000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: -45786.500000
+output: -45786.500000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 34.031250
+output: 34.031250
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 45786.750000
+output: 45786.750000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: -45667.250000
+output: -45667.250000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: -7.000000
+output: -7.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: -347856.500000
+output: -347856.500000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 356047.500000
+output: 356047.500000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x100
+roundig mode: zero
+fmov.s ::
+input: 23.062500
+output: 23.062500
+fcsr: 0x100
+roundig mode: +inf
+fmov.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 456.250000
+output: 456.250000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 1384.500000
+output: 1384.500000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: -7.250000
+output: -7.250000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: -5786.500000
+output: -5786.500000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 0.015625
+output: 0.015625
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 0.031250
+output: 0.031250
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: -248562.750000
+output: -248562.750000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: -45786.500000
+output: -45786.500000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 34.031250
+output: 34.031250
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 45786.750000
+output: 45786.750000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: -45667.250000
+output: -45667.250000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: -7.000000
+output: -7.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: -347856.500000
+output: -347856.500000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 356047.500000
+output: 356047.500000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.s ::
+input: 23.062500
+output: 23.062500
+fcsr: 0x200
+roundig mode: -inf
+fmov.s ::
+input: 0.000000
+output: 0.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 456.250000
+output: 456.250000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 3.000000
+output: 3.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 1384.500000
+output: 1384.500000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: -7.250000
+output: -7.250000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 1000000000.000000
+output: 1000000000.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: -5786.500000
+output: -5786.500000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 1752.000000
+output: 1752.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 0.015625
+output: 0.015625
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 0.031250
+output: 0.031250
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: -248562.750000
+output: -248562.750000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: -45786.500000
+output: -45786.500000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 456.000000
+output: 456.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 34.031250
+output: 34.031250
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 45786.750000
+output: 45786.750000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 1752065.000000
+output: 1752065.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 107.000000
+output: 107.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: -45667.250000
+output: -45667.250000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: -7.000000
+output: -7.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: -347856.500000
+output: -347856.500000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 356047.500000
+output: 356047.500000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: -1.000000
+output: -1.000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.s ::
+input: 23.062500
+output: 23.062500
+fcsr: 0x300
+roundig mode: near
+fmov.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 456.250000000000000
+output: 456.250000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: -7.250000000000000
+output: -7.250000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 0.015625000000000
+output: 0.015625000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 0.031250000000000
+output: 0.031250000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 34.031250000000000
+output: 34.031250000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: -7.000000000000000
+output: -7.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0
+roundig mode: near
+fmov.d ::
+input: 23.062500000000000
+output: 23.062500000000000
+fcsr: 0
+roundig mode: zero
+fmov.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: -7.250000000000000
+output: -7.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x100
+roundig mode: zero
+fmov.d ::
+input: 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x100
+roundig mode: +inf
+fmov.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: -7.250000000000000
+output: -7.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x200
+roundig mode: +inf
+fmov.d ::
+input: 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x200
+roundig mode: -inf
+fmov.d ::
+input: 0.000000000000000
+output: 0.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 456.250000000000000
+output: 456.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 3.000000000000000
+output: 3.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 1384.500000000000000
+output: 1384.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: -7.250000000000000
+output: -7.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 1000000000.000000000000000
+output: 1000000000.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: -5786.500000000000000
+output: -5786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 1752.000000000000000
+output: 1752.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 0.015625000000000
+output: 0.015625000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 0.031250000000000
+output: 0.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: -248562.750000000000000
+output: -248562.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: -45786.500000000000000
+output: -45786.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 456.000000000000000
+output: 456.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 34.031250000000000
+output: 34.031250000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 45786.750000000000000
+output: 45786.750000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 1752065.000000000000000
+output: 1752065.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 107.000000000000000
+output: 107.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: -45667.250000000000000
+output: -45667.250000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: -7.000000000000000
+output: -7.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: -347856.500000000000000
+output: -347856.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 356047.500000000000000
+output: 356047.500000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: -1.000000000000000
+output: -1.000000000000000
+fcsr: 0x300
+roundig mode: -inf
+fmov.d ::
+input: 23.062500000000000
+output: 23.062500000000000
+fcsr: 0x300
diff --git a/none/tests/loongarch64/float.vgtest b/none/tests/loongarch64/float.vgtest
new file mode 100644
index 0000000..e65d969
--- /dev/null
+++ b/none/tests/loongarch64/float.vgtest
@@ -0,0 +1,3 @@
+prereq: ../../../tests/loongarch64_features fpu
+prog: float
+vgopts: -q
diff --git a/none/tests/loongarch64/integer.c b/none/tests/loongarch64/integer.c
new file mode 100644
index 0000000..369d628
--- /dev/null
+++ b/none/tests/loongarch64/integer.c
@@ -0,0 +1,1311 @@
+#include <stdio.h>
+#include <assert.h>
+
+typedef enum {
+   SA2, SA2_1 /* for alsl */, SA3,
+   MSBW, LSBW, MSBD, LSBD,
+   UI5, UI6, UI12,
+   SI12, SI14, SI16, SI20
+} imm_t;
+
+static inline void showImm (unsigned int i, imm_t ty)
+{
+   switch (ty) {
+      case SA2:
+         assert(i < (1 << 2));
+         break;
+      case SA2_1:
+         assert(i < (1 << 3));
+         break;
+      case SA3:
+         assert(i < (1 << 3));
+         break;
+      case MSBW:
+         assert(i < (1 << 5));
+         break;
+      case LSBW:
+         assert(i < (1 << 5));
+         break;
+      case MSBD:
+         assert(i < (1 << 6));
+         break;
+      case LSBD:
+         assert(i < (1 << 6));
+         break;
+      case UI5:
+         assert(i < (1 << 5));
+         break;
+      case UI6:
+         assert(i < (1 << 6));
+         break;
+      case UI12:
+         assert(i < (1 << 12));
+         break;
+      case SI12:
+         assert(i < (1 << 12) || (i >> 12) == 0xfffff);
+         break;
+      case SI14:
+         assert(i < (1 << 14) || (i >> 14) == 0x3ffff);
+         break;
+      case SI16:
+         assert(i < (1 << 16) || (i >> 16) == 0xffff);
+         break;
+      case SI20:
+         assert(i < (1 << 20) || (i >> 20) == 0xfff);
+         break;
+      default:
+         assert(0);
+         break;
+   }
+   printf("%d", i);
+}
+
+#define TESTINST_RR(insn, rd, rj, v1, v2)         \
+   {                                              \
+      unsigned long res1, res2;                   \
+      unsigned long val1 = (unsigned long)v1;     \
+      unsigned long val2 = (unsigned long)v2;     \
+      __asm__ __volatile__(                       \
+         "move " rd ", %2      \n\t"              \
+         "move " rj ", %3      \n\t"              \
+         insn " " rd ", " rj " \n\t"              \
+         "move %0, " rd "      \n\t"              \
+         "move %1, " rj "      \n\t"              \
+         : "=r" (res1), "=r" (res2)               \
+         : "r" (val1), "r" (val2)                 \
+         : rd, rj, "memory");                     \
+      printf("%s %s, %s ::\n", insn, rd, rj);     \
+      printf("before: %s=%#018lx, %s=%#018lx\n",  \
+             rd, val1, rj, val2);                 \
+      printf("after:  %s=%#018lx, %s=%#018lx\n",  \
+             rd, res1, rj, res2);                 \
+   }
+
+#define TESTINST_RI(insn, rd, type, v1, imm)    \
+   {                                            \
+      unsigned long res1;                       \
+      unsigned long val1 = (unsigned long)v1;   \
+      __asm__ __volatile__(                     \
+         "move " rd ", %1       \n\t"           \
+         insn " " rd ", " #imm "\n\t"           \
+         "move %0, " rd "       \n\t"           \
+         : "=r" (res1)                          \
+         : "r" (val1)                           \
+         : rd, "memory");                       \
+      printf("%s %s, ", insn, rd);              \
+      showImm(imm, type);                       \
+      printf(" ::\n");                          \
+      printf("before: %s=%#018lx\n", rd, val1); \
+      printf("after:  %s=%#018lx\n", rd, res1); \
+   }
+
+#define TESTINST_RRRI(insn, rd, rj, rk, type, v1, v2, v3, imm) \
+   {                                                           \
+      unsigned long res1, res2, res3;                          \
+      unsigned long val1 = (unsigned long)v1;                  \
+      unsigned long val2 = (unsigned long)v2;                  \
+      unsigned long val3 = (unsigned long)v3;                  \
+      __asm__ __volatile__(                                    \
+         "move " rd ", %3                       \n\t"          \
+         "move " rj ", %4                       \n\t"          \
+         "move " rk ", %5                       \n\t"          \
+         insn " " rd ", " rj ", " rk ", " #imm "\n\t"          \
+         "move %0, " rd "                       \n\t"          \
+         "move %1, " rj "                       \n\t"          \
+         "move %2, " rk "                       \n\t"          \
+         : "=r" (res1), "=r" (res2), "=r" (res3)               \
+         : "r" (val1), "r" (val2), "r" (val3)                  \
+         : rd, rj, rk, "memory");                              \
+      printf("%s %s, %s, %s, ", insn, rd, rj, rk);             \
+      showImm(imm, type);                                      \
+      printf(" ::\n");                                         \
+      printf("before: %s=%#018lx, %s=%#018lx, %s=%#018lx\n",   \
+             rd, val1, rj, val2, rk, val3);                    \
+      printf("after:  %s=%#018lx, %s=%#018lx, %s=%#018lx\n",   \
+             rd, res1, rj, res2, rk, res3);                    \
+   }
+
+#define TESTINST_RRR(insn, rd, rj, rk, v1, v2, v3)           \
+   {                                                         \
+      unsigned long res1, res2, res3;                        \
+      unsigned long val1 = (unsigned long)v1;                \
+      unsigned long val2 = (unsigned long)v2;                \
+      unsigned long val3 = (unsigned long)v3;                \
+      __asm__ __volatile__(                                  \
+         "move " rd ", %3             \n\t"                  \
+         "move " rj ", %4             \n\t"                  \
+         "move " rk ", %5             \n\t"                  \
+         insn " " rd ", " rj ", " rk "\n\t"                  \
+         "move %0, " rd "             \n\t"                  \
+         "move %1, " rj "             \n\t"                  \
+         "move %2, " rk "             \n\t"                  \
+         : "=r" (res1), "=r" (res2), "=r" (res3)             \
+         : "r" (val1), "r" (val2), "r" (val3)                \
+         : rd, rj, rk, "memory");                            \
+      printf("%s %s, %s, %s ::\n", insn, rd, rj, rk);        \
+      printf("before: %s=%#018lx, %s=%#018lx, %s=%#018lx\n", \
+             rd, val1, rj, val2, rk, val3);                  \
+      printf("after:  %s=%#018lx, %s=%#018lx, %s=%#018lx\n", \
+             rd, res1, rj, res2, rk, res3);                  \
+   }
+
+#define TESTINST_RRI(insn, rd, rj, type, v1, v2, imm) \
+   {                                                  \
+      unsigned long res1, res2;                       \
+      unsigned long val1 = (unsigned long)v1;         \
+      unsigned long val2 = (unsigned long)v2;         \
+      __asm__ __volatile__(                           \
+         "move " rd ", %2               \n\t"         \
+         "move " rj ", %3               \n\t"         \
+         insn " " rd ", " rj ", " #imm "\n\t"         \
+         "move %0, " rd "               \n\t"         \
+         "move %1, " rj "               \n\t"         \
+         : "=r" (res1), "=r" (res2)                   \
+         : "r" (val1), "r" (val2)                     \
+         : rd, rj, "memory");                         \
+      printf("%s %s, %s, ", insn, rd, rj);            \
+      showImm(imm, type);                             \
+      printf(" ::\n");                                \
+      printf("before: %s=%#018lx, %s=%#018lx\n",      \
+             rd, val1, rj, val2);                     \
+      printf("after:  %s=%#018lx, %s=%#018lx\n",      \
+             rd, res1, rj, res2);                     \
+   }
+
+#define TESTINST_RRII(insn, rd, rj, type1, type2, v1, v2, imm1, imm2) \
+   {                                                                  \
+      unsigned long res1, res2;                                       \
+      unsigned long val1 = (unsigned long)v1;                         \
+      unsigned long val2 = (unsigned long)v2;                         \
+      __asm__ __volatile__(                                           \
+         "move " rd ", %2                           \n\t"             \
+         "move " rj ", %3                           \n\t"             \
+         insn " " rd ", " rj ", " #imm1 ", " #imm2 "\n\t"             \
+         "move %0, " rd "                           \n\t"             \
+         "move %1, " rj "                           \n\t"             \
+         : "=r" (res1), "=r" (res2)                                   \
+         : "r" (val1), "r" (val2)                                     \
+         : rd, rj, "memory");                                         \
+      printf("%s %s, %s, ", insn, rd, rj);                            \
+      showImm(imm1, type1);                                           \
+      printf(", ");                                                   \
+      showImm(imm2, type2);                                           \
+      printf(" ::\n");                                                \
+      printf("before: %s=%#018lx, %s=%#018lx\n",                      \
+             rd, val1, rj, val2);                                     \
+      printf("after:  %s=%#018lx, %s=%#018lx\n",                      \
+             rd, res1, rj, res2);                                     \
+   }
+
+void test(void)
+{
+   /* ---------------- add.w rd, rj, rk ---------------- */
+   TESTINST_RRR("add.w", "$r19", "$r20", "$r25", 0xf7f01ffbc9696094UL, 0xb664b1ce21c8c7fcUL, 0xd0a02b79ace85cfUL);
+   TESTINST_RRR("add.w", "$r29", "$r9", "$r12", 0x5418cd6f6b640953UL, 0x6465907ca2dac58cUL, 0xefea76d0d526df3aUL);
+   TESTINST_RRR("add.w", "$r23", "$r15", "$r28", 0x6ae34fbc6f2f7a9aUL, 0xbf21c48ab5c2edccUL, 0x24824ebd458ed20eUL);
+   TESTINST_RRR("add.w", "$r27", "$r14", "$r26", 0x9f33e38db05616ccUL, 0xf12ee0c276c52c78UL, 0xc3054d65ecec3fe6UL);
+   TESTINST_RRR("add.w", "$r14", "$r23", "$r27", 0x17eaa07c4607901fUL, 0xa5fa9d0c8472848eUL, 0xa34301227bb57f76UL);
+   TESTINST_RRR("add.w", "$r19", "$r19", "$r4", 0xd2e0644d9532b5eaUL, 0x2957c6f0638238bcUL, 0xf01566d0031ee917UL);
+   TESTINST_RRR("add.w", "$r19", "$r26", "$r13", 0x7b39b3f2ccbdaf79UL, 0xee877221beef9d45UL, 0x4a743034eefe075dUL);
+   TESTINST_RRR("add.w", "$r29", "$r18", "$r14", 0x95214c4de7e6d3baUL, 0x26502eb481799cd1UL, 0x34d57b775083fb91UL);
+   TESTINST_RRR("add.w", "$r16", "$r26", "$r8", 0xb66b18865bbb3036UL, 0x8881ccbe1e31aa8dUL, 0xffe0d2dde8325edcUL);
+   TESTINST_RRR("add.w", "$r26", "$r5", "$r8", 0xc367af71c905540cUL, 0xcdcbe4860d983fe3UL, 0x6687aa19ee1fc503UL);
+
+   /* ---------------- add.d rd, rj, rk ---------------- */
+   TESTINST_RRR("add.d", "$r16", "$r18", "$r8", 0xbe5505b409ce995cUL, 0x561a85fd57e87226UL, 0x923f3293987edab0UL);
+   TESTINST_RRR("add.d", "$r12", "$r7", "$r29", 0xff2682151edc3476UL, 0x90beb037eacfe3dbUL, 0xa4017082880f1151UL);
+   TESTINST_RRR("add.d", "$r31", "$r31", "$r5", 0x81e38385e39d9f16UL, 0xedb2ffa50c0c8b5fUL, 0x8776f30d75fc97c2UL);
+   TESTINST_RRR("add.d", "$r31", "$r6", "$r26", 0x64ff385d97b60dc2UL, 0x80f903f206f08f60UL, 0x4f5b589532e85398UL);
+   TESTINST_RRR("add.d", "$r25", "$r10", "$r20", 0xdd8973d6b99634caUL, 0x34c0fe5a72dd43d9UL, 0x2494af03cf5878e7UL);
+   TESTINST_RRR("add.d", "$r5", "$r10", "$r4", 0x94b272b05ffe39c8UL, 0x152d15efbbc54c04UL, 0x25afc06cf151ab29UL);
+   TESTINST_RRR("add.d", "$r19", "$r30", "$r18", 0xa6e14d42459cadf6UL, 0x558620ff616141b1UL, 0x1978905697120747UL);
+   TESTINST_RRR("add.d", "$r7", "$r8", "$r20", 0x2ea6f88031a29aeUL, 0x6a08c12301e00d49UL, 0xdd533acf17f59142UL);
+   TESTINST_RRR("add.d", "$r24", "$r14", "$r26", 0xb88df6b8315eb7a6UL, 0x137d04f7f6fe285UL, 0x2ccb253ff7ea93d6UL);
+   TESTINST_RRR("add.d", "$r7", "$r19", "$r23", 0xad464722c0967f28UL, 0x30295c1fd85ae029UL, 0x2c69edb227e01d94UL);
+
+   /* ---------------- sub.w rd, rj, rk ---------------- */
+   TESTINST_RRR("sub.w", "$r16", "$r28", "$r17", 0x8b0ba4ef20207fddUL, 0x90493cb39ff734a2UL, 0x519842bab5cc1208UL);
+   TESTINST_RRR("sub.w", "$r6", "$r13", "$r15", 0x13af983aafc53691UL, 0x27bc6a037865e47fUL, 0xe20df003930575d5UL);
+   TESTINST_RRR("sub.w", "$r8", "$r19", "$r23", 0x4177aec74585d42dUL, 0xba89b6aa9b7728acUL, 0xe6a089b8eaf43feUL);
+   TESTINST_RRR("sub.w", "$r7", "$r10", "$r23", 0xca1b83a7ab88912UL, 0xd5e2759ea82c2c80UL, 0x76e9d6f88c2624ffUL);
+   TESTINST_RRR("sub.w", "$r19", "$r24", "$r24", 0x99d63505ea0474b3UL, 0x1b53c4c34957af8eUL, 0x6146da47b731d3edUL);
+   TESTINST_RRR("sub.w", "$r26", "$r31", "$r7", 0x8eca560d8234ff55UL, 0x5beb18985c3f451eUL, 0x9c9634dfaa7b9313UL);
+   TESTINST_RRR("sub.w", "$r29", "$r16", "$r6", 0x229544d2cb1d5a64UL, 0xd23751d515597128UL, 0xa09dd29330aa8d15UL);
+   TESTINST_RRR("sub.w", "$r12", "$r16", "$r4", 0x229f5aefe9fb7fb7UL, 0x740ed49b5e95faeUL, 0xbc6304a0df442807UL);
+   TESTINST_RRR("sub.w", "$r30", "$r29", "$r26", 0x94f3a67d188df281UL, 0x48e066cdad20ac2UL, 0x1e032e60568554a7UL);
+   TESTINST_RRR("sub.w", "$r18", "$r23", "$r25", 0xedb4f44fb338ba4fUL, 0xf06e698cd08c8e7bUL, 0xa22b91e88b77d4d8UL);
+
+   /* ---------------- sub.d rd, rj, rk ---------------- */
+   TESTINST_RRR("sub.d", "$r18", "$r10", "$r27", 0x68647aa06a23c8f9UL, 0xd001cb46cb78fc4fUL, 0x460cc8702b1761f9UL);
+   TESTINST_RRR("sub.d", "$r7", "$r24", "$r18", 0x8d18e952fb747f43UL, 0x1e7d1a019fb96490UL, 0xb466fb9891e8c151UL);
+   TESTINST_RRR("sub.d", "$r4", "$r16", "$r27", 0x5f6647277ca4c99dUL, 0xa1156b863ec98e1dUL, 0xc15612f3ce819d64UL);
+   TESTINST_RRR("sub.d", "$r4", "$r25", "$r9", 0xe67b33778df480b4UL, 0xc24b2711be7e4ef1UL, 0xd940ca25b956100fUL);
+   TESTINST_RRR("sub.d", "$r5", "$r12", "$r18", 0x258ae461ef798ce7UL, 0x3f4984ea3f5692deUL, 0x99fa673f30e69019UL);
+   TESTINST_RRR("sub.d", "$r13", "$r10", "$r9", 0xdafb48debea5211eUL, 0xeac1d3b25f6bf8dbUL, 0x297d671b1c96e48fUL);
+   TESTINST_RRR("sub.d", "$r7", "$r15", "$r23", 0xc6b03274ff37baf6UL, 0x5b37ffc2c84aec9UL, 0x74d62a52cbaaec15UL);
+   TESTINST_RRR("sub.d", "$r26", "$r18", "$r26", 0x35c71e0956ffcd43UL, 0xad703a4e8078070bUL, 0x634924e8a9fdbb9eUL);
+   TESTINST_RRR("sub.d", "$r16", "$r29", "$r5", 0x18bf961cba922928UL, 0x54ed9198405f8983UL, 0x977f5b65e5f86b4aUL);
+   TESTINST_RRR("sub.d", "$r31", "$r28", "$r14", 0xa38a1e8cb3c7ba00UL, 0xd220d1ef3cf8f3f7UL, 0xc972df2ace170d61UL);
+
+   /* ---------------- slt rd, rj, rk ---------------- */
+   TESTINST_RRR("slt", "$r12", "$r17", "$r18", 0xd7a0e65c279e1082UL, 0x819edf00a849ba44UL, 0x41a0b2fe37d44db2UL);
+   TESTINST_RRR("slt", "$r31", "$r13", "$r18", 0x2ef00a5cfd100f71UL, 0x4792cd9f9abf36d3UL, 0x2c117902110ef9a8UL);
+   TESTINST_RRR("slt", "$r4", "$r30", "$r29", 0x6d8be2fb73e2c006UL, 0xf76ce97d7658995eUL, 0x3856e09bfe39df6eUL);
+   TESTINST_RRR("slt", "$r4", "$r18", "$r10", 0xeddcb9dcf092c3f5UL, 0xe57b7c25d13dea8UL, 0x761d86b48cb5ce21UL);
+   TESTINST_RRR("slt", "$r16", "$r18", "$r16", 0xcddd92e2340cd593UL, 0xc9a30f4707743f80UL, 0x3ff7d36f17396d3aUL);
+   TESTINST_RRR("slt", "$r6", "$r14", "$r10", 0xa9e71c6376093499UL, 0x26bb3955b588461fUL, 0xfae7e7a950447826UL);
+   TESTINST_RRR("slt", "$r19", "$r4", "$r17", 0x35bb27f64ebd7d62UL, 0x4a7d3941ebf88bc1UL, 0xcda32e4b1c1d5c4UL);
+   TESTINST_RRR("slt", "$r19", "$r28", "$r15", 0x29419b8261e40b99UL, 0xe7e9b059033afa7dUL, 0x1ea916293b1cc3ddUL);
+   TESTINST_RRR("slt", "$r31", "$r16", "$r16", 0xe0fb75047bc62c9aUL, 0xa634f6174dcced7dUL, 0xcca5a9d25b670e70UL);
+   TESTINST_RRR("slt", "$r4", "$r4", "$r10", 0x724ee03fb3fcdec8UL, 0xae2587f097065e2cUL, 0x65c69548f83dd0dfUL);
+
+   /* ---------------- sltu rd, rj, rk ---------------- */
+   TESTINST_RRR("sltu", "$r14", "$r10", "$r13", 0x1956e5498db3fb6eUL, 0x2d909abfec4490bdUL, 0xa7d554ebe591d5ccUL);
+   TESTINST_RRR("sltu", "$r6", "$r5", "$r18", 0xc34214447a064eb8UL, 0xad4413e45f0a226aUL, 0x4b09aab500b04bffUL);
+   TESTINST_RRR("sltu", "$r31", "$r17", "$r17", 0x86e16a1618a639c4UL, 0x87917b281cef8df0UL, 0xd543115a56dee48UL);
+   TESTINST_RRR("sltu", "$r20", "$r6", "$r25", 0x164fff47b8b23752UL, 0x9ad830d46b1660f6UL, 0xc5d72c146f4aba72UL);
+   TESTINST_RRR("sltu", "$r6", "$r26", "$r7", 0x1428360430b7c9b5UL, 0xc2052dc6eea5a53cUL, 0xda1a8e35dd060adfUL);
+   TESTINST_RRR("sltu", "$r19", "$r15", "$r26", 0xdfc9984966167604UL, 0xa9ea12b5a37dd492UL, 0x7a24be9fcf349afcUL);
+   TESTINST_RRR("sltu", "$r29", "$r26", "$r29", 0x5a3822db2cc26fc5UL, 0x5985f02e77511d80UL, 0x370f15cc98f2a6c1UL);
+   TESTINST_RRR("sltu", "$r7", "$r28", "$r16", 0xe4594ee2cc8c6d7UL, 0x177ac0014f5dd20UL, 0xde1724c7590a4908UL);
+   TESTINST_RRR("sltu", "$r8", "$r12", "$r4", 0x1df979e50aa0ed18UL, 0x5b410cd0985fce18UL, 0x9d3c39d61e29025dUL);
+   TESTINST_RRR("sltu", "$r30", "$r23", "$r25", 0x1cba022788d49d13UL, 0xd2b40941478ee865UL, 0xa503a74e41535830UL);
+
+   /* ---------------- slti rd, rj, si12 ---------------- */
+   TESTINST_RRI("slti", "$r15", "$r27", SI12, 0xe24c4ca567d1d5f4UL, 0xfef05a88adf4b892UL, 1913);
+   TESTINST_RRI("slti", "$r8", "$r31", SI12, 0xfba7284a8ab83b2dUL, 0xff63b80173f1e368UL, -738);
+   TESTINST_RRI("slti", "$r31", "$r31", SI12, 0xb4599a9fa734365aUL, 0x4327139de75dde1eUL, -1544);
+   TESTINST_RRI("slti", "$r5", "$r4", SI12, 0xa5572272e0c04a20UL, 0x87657c1b1699936bUL, 1529);
+   TESTINST_RRI("slti", "$r10", "$r28", SI12, 0x1260731618214410UL, 0xd0de0dfbafb7960aUL, 557);
+   TESTINST_RRI("slti", "$r5", "$r12", SI12, 0x4c6317772a4b06b0UL, 0x7a1d4eeb507d649bUL, -222);
+   TESTINST_RRI("slti", "$r4", "$r31", SI12, 0x23b4d62a21994afbUL, 0x85304cc393f6506bUL, 717);
+   TESTINST_RRI("slti", "$r18", "$r26", SI12, 0x67b6f5dbf6a0c55dUL, 0x451013f9a2337f9fUL, 730);
+   TESTINST_RRI("slti", "$r25", "$r8", SI12, 0xdb278cca57f1ad7bUL, 0x7371a60f5af6334bUL, 1193);
+   TESTINST_RRI("slti", "$r17", "$r24", SI12, 0xffa3ed31f9ea3a29UL, 0x1138e06e1a45c4f3UL, 329);
+
+   /* ---------------- sltui rd, rj, si12 ---------------- */
+   TESTINST_RRI("sltui", "$r13", "$r26", SI12, 0x62677116040aebffUL, 0xeedd6ccd0e5e2771UL, -462);
+   TESTINST_RRI("sltui", "$r24", "$r28", SI12, 0xef9500b68a87984aUL, 0xaf5922683f40599dUL, 1890);
+   TESTINST_RRI("sltui", "$r9", "$r6", SI12, 0x9996aa21d2b51922UL, 0xd5214fb275e738dcUL, -1538);
+   TESTINST_RRI("sltui", "$r19", "$r26", SI12, 0x3eb2777655f0f1c5UL, 0x98ed915860f0eb26UL, -215);
+   TESTINST_RRI("sltui", "$r8", "$r19", SI12, 0x5c44b5807c43724cUL, 0x63a068026b529b03UL, -780);
+   TESTINST_RRI("sltui", "$r19", "$r17", SI12, 0xf6926016cdbfacc1UL, 0xec04a9bcc8d1192aUL, -1041);
+   TESTINST_RRI("sltui", "$r26", "$r14", SI12, 0x542f05c795aa07c2UL, 0xb634bf537df4c4ceUL, 1653);
+   TESTINST_RRI("sltui", "$r8", "$r5", SI12, 0x371daf74e330ee8bUL, 0xedb0321c888ae22eUL, 441);
+   TESTINST_RRI("sltui", "$r25", "$r4", SI12, 0xba813c7acc8f5621UL, 0x8d5ce4750fe7603bUL, 678);
+   TESTINST_RRI("sltui", "$r17", "$r15", SI12, 0x199b641cefe0a0e2UL, 0x7ea0508a3fed3453UL, 2019);
+
+   /* ---------------- nor rd, rj, rk ---------------- */
+   TESTINST_RRR("nor", "$r14", "$r28", "$r9", 0xccf23cf02a48844dUL, 0x2608ea0069c4e9ddUL, 0x1c7a04255a2d13f8UL);
+   TESTINST_RRR("nor", "$r6", "$r30", "$r4", 0xbfcc3de6da2483beUL, 0xd24e9abca28d6cb5UL, 0xbb01b508523673c6UL);
+   TESTINST_RRR("nor", "$r6", "$r28", "$r13", 0x28dacd828d5736d7UL, 0xb365ff31474f736cUL, 0x593621c0f82b445cUL);
+   TESTINST_RRR("nor", "$r24", "$r16", "$r31", 0x5898010a4c6cf1bbUL, 0xecac6e093ba6146aUL, 0x50e6093f19b1194UL);
+   TESTINST_RRR("nor", "$r15", "$r7", "$r20", 0x2ddb1dea334fd92aUL, 0x401d7a663be0b31aUL, 0xb6c008973a85f779UL);
+   TESTINST_RRR("nor", "$r18", "$r31", "$r29", 0xc987982e1d91684UL, 0x181f20f581ed38f4UL, 0xefaa786e00a2e5b9UL);
+   TESTINST_RRR("nor", "$r19", "$r31", "$r13", 0x39e476d555cd20bcUL, 0xfb8fab5d35576d50UL, 0x71a92a8377c0f729UL);
+   TESTINST_RRR("nor", "$r25", "$r7", "$r5", 0x7f36d0c6d173e8c8UL, 0x181763a9f9350680UL, 0x5ec5099605d7d418UL);
+   TESTINST_RRR("nor", "$r30", "$r23", "$r23", 0x688e1d04976ac8dbUL, 0xd37b6d6a1c510287UL, 0x8670301ee2a715dfUL);
+   TESTINST_RRR("nor", "$r5", "$r23", "$r14", 0x71c4a211dd9262f4UL, 0xcb8a4aebc2c6c4f2UL, 0x84d79a5254447c9UL);
+
+   /* ---------------- and rd, rj, rk ---------------- */
+   TESTINST_RRR("and", "$r8", "$r14", "$r31", 0xbddf22c4109e20b5UL, 0xb2d25973efd1a8ffUL, 0x28b78b59dfe641e9UL);
+   TESTINST_RRR("and", "$r19", "$r23", "$r17", 0xb25e185c549f6661UL, 0xb6ccc215c2f17718UL, 0xf20669c51aee8ffeUL);
+   TESTINST_RRR("and", "$r30", "$r27", "$r23", 0xa7f4ad796393e12bUL, 0xefbcf405df3e7affUL, 0x548a0141e9fe1700UL);
+   TESTINST_RRR("and", "$r18", "$r31", "$r29", 0xa399c7f46c61d974UL, 0xe0fe8cca1cbab773UL, 0x49e680ddee7f666bUL);
+   TESTINST_RRR("and", "$r5", "$r26", "$r25", 0x1682ca17c11f90acUL, 0x4e9706cb2c885742UL, 0x250ff6304dd87d57UL);
+   TESTINST_RRR("and", "$r28", "$r14", "$r8", 0xcacf15e6ffad256fUL, 0x99527f4fa2aa8fb1UL, 0xcff546a883b63cfbUL);
+   TESTINST_RRR("and", "$r28", "$r9", "$r28", 0xc60423b9cf70d112UL, 0x2fb0db47f1d8f166UL, 0x1e9cec9d13e85210UL);
+   TESTINST_RRR("and", "$r18", "$r28", "$r5", 0x5059c37ee38d2f25UL, 0x74bf57d85d90af3aUL, 0x35479df0ebec9209UL);
+   TESTINST_RRR("and", "$r23", "$r25", "$r12", 0x18742ef4c73416beUL, 0x8b93e775860ef52bUL, 0xa909915f60a546d2UL);
+   TESTINST_RRR("and", "$r18", "$r17", "$r24", 0xadb2cc6aec909946UL, 0x3068f8b21d583e4cUL, 0xcf8aae1918f3a88eUL);
+
+   /* ---------------- or rd, rj, rk ---------------- */
+   TESTINST_RRR("or", "$r19", "$r28", "$r25", 0x46819825f87044c2UL, 0x65cb2cc7e5f5a720UL, 0x1fc0130146f13f76UL);
+   TESTINST_RRR("or", "$r8", "$r25", "$r4", 0x45083dd59c60e6feUL, 0x936ecfaeb4d51c95UL, 0xdc37c27c69024f6eUL);
+   TESTINST_RRR("or", "$r15", "$r16", "$r8", 0x516659e51cf19b26UL, 0x7589da0802d59510UL, 0x6b713c60390f3fbfUL);
+   TESTINST_RRR("or", "$r9", "$r15", "$r6", 0x1646568625c40022UL, 0xa68db9141a88850cUL, 0x756d912fbefef973UL);
+   TESTINST_RRR("or", "$r24", "$r9", "$r25", 0xda34c24d14fce443UL, 0x6ad9bf24481630b0UL, 0x2aefcdfa652395bUL);
+   TESTINST_RRR("or", "$r13", "$r9", "$r14", 0x900358ad1e848728UL, 0xa0e361b5b891a62eUL, 0xddfa0c1377ce01acUL);
+   TESTINST_RRR("or", "$r23", "$r16", "$r15", 0x27a55515d39aded9UL, 0xd0daf17f9cb0bf5aUL, 0xf44c4372982c4d74UL);
+   TESTINST_RRR("or", "$r20", "$r16", "$r16", 0x7045887bb8325d6fUL, 0xbac771cbb78dae04UL, 0x23f4928023125a5cUL);
+   TESTINST_RRR("or", "$r30", "$r5", "$r7", 0xcf609aa2057d1b98UL, 0x379641544fd1cd48UL, 0x5275ef34f265f01aUL);
+   TESTINST_RRR("or", "$r23", "$r4", "$r30", 0xc43fc1c750887406UL, 0x44a3229c33d1cd65UL, 0xceaa00084fc04912UL);
+
+   /* ---------------- xor rd, rj, rk ---------------- */
+   TESTINST_RRR("xor", "$r6", "$r19", "$r31", 0x18522418b59bf8aUL, 0x270a2ec823f26e39UL, 0x99ef76e6d4495ae3UL);
+   TESTINST_RRR("xor", "$r28", "$r20", "$r27", 0x57de83cac9dade15UL, 0xd39fdecdfd4ccb08UL, 0xc97b854adacdb4UL);
+   TESTINST_RRR("xor", "$r4", "$r29", "$r5", 0x9f7356fff2445f77UL, 0xc3c3a34d2c226b5aUL, 0x51abdd266816b94fUL);
+   TESTINST_RRR("xor", "$r14", "$r6", "$r28", 0xdd5ca0b5c6c45804UL, 0xa0ba047990ec0798UL, 0x89e6efd43651c28UL);
+   TESTINST_RRR("xor", "$r8", "$r19", "$r23", 0xc3e35cd44af166faUL, 0x6affcfe12104ccc7UL, 0x4adbb3601a07a1d9UL);
+   TESTINST_RRR("xor", "$r16", "$r5", "$r18", 0x685cdc5ca969c8e1UL, 0xd88d0e2a9900b8ebUL, 0xdd4dfbba723cde28UL);
+   TESTINST_RRR("xor", "$r20", "$r18", "$r24", 0x2362838018fa39beUL, 0xbbc8d438b24c037aUL, 0xe020a8456a45b667UL);
+   TESTINST_RRR("xor", "$r19", "$r23", "$r19", 0x637cae50fc0a1c95UL, 0x514b81a7227dd07eUL, 0x59a27a7f9c8481c3UL);
+   TESTINST_RRR("xor", "$r20", "$r16", "$r18", 0xb728dd7a443bcc8fUL, 0xe2de9bf67cdbdc0cUL, 0x26687435fbe4dbf6UL);
+   TESTINST_RRR("xor", "$r23", "$r14", "$r6", 0x744915919b52e27eUL, 0x16863c1d3e1cded7UL, 0x40ce8607349c380UL);
+
+   /* ---------------- orn rd, rj, rk ---------------- */
+   TESTINST_RRR("orn", "$r24", "$r9", "$r15", 0x39320ce9aa25fb73UL, 0xaaec06dc1b47cf43UL, 0x5fa36a558c884a69UL);
+   TESTINST_RRR("orn", "$r12", "$r4", "$r26", 0xa9c2abcbc14e3f3cUL, 0x7c87d633528d97b0UL, 0xe383c14e72ab8677UL);
+   TESTINST_RRR("orn", "$r20", "$r24", "$r28", 0xb117d8b0280738a2UL, 0x318fd949c3ba430fUL, 0xc9edab5116dc1582UL);
+   TESTINST_RRR("orn", "$r8", "$r25", "$r25", 0xb140441a36f8ededUL, 0xa26782a5e34d7addUL, 0x61bdd5b78d019958UL);
+   TESTINST_RRR("orn", "$r16", "$r18", "$r25", 0xcda0e2c1bce1eeecUL, 0xa4486eefd2c444d9UL, 0xbd007605c829cadcUL);
+   TESTINST_RRR("orn", "$r5", "$r28", "$r19", 0x8196fca50795a2aaUL, 0xec7f689a0d676560UL, 0xb4450418c4e1b333UL);
+   TESTINST_RRR("orn", "$r15", "$r14", "$r8", 0xaf1e2a9fe35ba4edUL, 0xd2207f86d89b890aUL, 0xfb31b9e37313a94dUL);
+   TESTINST_RRR("orn", "$r27", "$r14", "$r14", 0x1f24566bfa353160UL, 0xc4e17319c4766becUL, 0x29a3bbaaf6b49218UL);
+   TESTINST_RRR("orn", "$r17", "$r12", "$r31", 0xf5195a72c175fed7UL, 0x7aa8d4840359cbf6UL, 0xa1a42af83c82215bUL);
+   TESTINST_RRR("orn", "$r16", "$r20", "$r20", 0x76bb09b5b50705e2UL, 0x613fdcbd8c1eba2aUL, 0xfb1e04641f5da4ffUL);
+
+   /* ---------------- andn rd, rj, rk ---------------- */
+   TESTINST_RRR("andn", "$r19", "$r31", "$r17", 0xbcc81a9b2e349626UL, 0x5a38a8ef9c7e30e4UL, 0xcb490976d0652986UL);
+   TESTINST_RRR("andn", "$r10", "$r4", "$r10", 0x9acfa0cd6ea107fdUL, 0x1d9b572e8f6bedb7UL, 0x768fe778d2a543eaUL);
+   TESTINST_RRR("andn", "$r6", "$r12", "$r26", 0x949e36cff3b5decbUL, 0x56723f7285834fc9UL, 0xf6fa544d6cd57fa8UL);
+   TESTINST_RRR("andn", "$r16", "$r6", "$r4", 0x44a39d85132d6513UL, 0x3ca7f972b865b7ceUL, 0xf18819e4740308bcUL);
+   TESTINST_RRR("andn", "$r19", "$r26", "$r15", 0x856d1e3162c8fa2dUL, 0xc1ef79456be3885UL, 0x3c089064e60da1dUL);
+   TESTINST_RRR("andn", "$r17", "$r28", "$r9", 0x512a518c554f4b0aUL, 0x43454425b8b7755UL, 0xdc5dca386b49bdd7UL);
+   TESTINST_RRR("andn", "$r16", "$r16", "$r14", 0xa9c14796fec54f89UL, 0xe31928f90d2723a4UL, 0xcf2deaf4af11410aUL);
+   TESTINST_RRR("andn", "$r9", "$r4", "$r20", 0x51d79964a699ec8dUL, 0xe82135537ca93e7fUL, 0xcbadcb1dc4dd0ed0UL);
+   TESTINST_RRR("andn", "$r18", "$r25", "$r25", 0xeb546ce75bcba3f5UL, 0x953d86e2bd6b136dUL, 0x4914dbeee506d8adUL);
+   TESTINST_RRR("andn", "$r27", "$r15", "$r14", 0xc8b599a43b0b4683UL, 0x509638630676b88UL, 0x3d278ed22a112a89UL);
+
+   /* ---------------- mul.w rd, rj, rk ---------------- */
+   TESTINST_RRR("mul.w", "$r28", "$r12", "$r10", 0xf6fcce3e1c5b1598UL, 0xef2747013f911fe8UL, 0x14a216fd69537967UL);
+   TESTINST_RRR("mul.w", "$r13", "$r18", "$r24", 0x5e8a32c1e1e12aa4UL, 0x30e007bb8dd185faUL, 0x1a74dd893af9fb5aUL);
+   TESTINST_RRR("mul.w", "$r10", "$r20", "$r4", 0xf06f4af61b0e0c24UL, 0x1b3624a77f26275fUL, 0x653052ae3a1347dfUL);
+   TESTINST_RRR("mul.w", "$r23", "$r19", "$r10", 0xccb5485ae4605cddUL, 0x67c67c647eaf9e6cUL, 0xfb9b6c7b49ec10cfUL);
+   TESTINST_RRR("mul.w", "$r12", "$r30", "$r7", 0xc1f45aaf98ffcb39UL, 0x906f0c08c0bae02eUL, 0xdf6cf5c05b5f2d34UL);
+   TESTINST_RRR("mul.w", "$r27", "$r12", "$r12", 0x9545c6d9f812c0d9UL, 0xacd016cb69e028b3UL, 0x2b68e3a280d9c0b6UL);
+   TESTINST_RRR("mul.w", "$r28", "$r7", "$r19", 0x4cf68a9590da3da5UL, 0x70ed8b9b03a6325dUL, 0x1125383d12dad118UL);
+   TESTINST_RRR("mul.w", "$r20", "$r12", "$r20", 0x10683d31408fb4c5UL, 0x9ef4ea79672ce58dUL, 0x960a13776923d3e4UL);
+   TESTINST_RRR("mul.w", "$r26", "$r19", "$r28", 0xbf8a20b69fa4357bUL, 0xf3e9b53a654e3cbfUL, 0x20afdeb5a4b4e1c9UL);
+   TESTINST_RRR("mul.w", "$r13", "$r26", "$r25", 0x78f637d350c666bfUL, 0xff742d96dc73e9e9UL, 0x94a3289b55744707UL);
+
+   /* ---------------- mulh.w rd, rj, rk ---------------- */
+   TESTINST_RRR("mulh.w", "$r18", "$r25", "$r14", 0xa988161162710d96UL, 0x37443c6f5d0625eaUL, 0x94da379219de8576UL);
+   TESTINST_RRR("mulh.w", "$r13", "$r16", "$r18", 0x246298a54a25030aUL, 0x33643ceed35cff64UL, 0xc25702631b42c849UL);
+   TESTINST_RRR("mulh.w", "$r20", "$r5", "$r15", 0x3b606ea986dcf13eUL, 0x269dcd16567786d2UL, 0x96c0983df45d5c03UL);
+   TESTINST_RRR("mulh.w", "$r19", "$r19", "$r25", 0xab8fc1c922ba3e7aUL, 0xdec5bddca513d198UL, 0xf05e814d67d43f5aUL);
+   TESTINST_RRR("mulh.w", "$r15", "$r28", "$r16", 0x82fcfa24449231baUL, 0xf37548fee13133f3UL, 0x256188ef96bb3d23UL);
+   TESTINST_RRR("mulh.w", "$r24", "$r9", "$r27", 0x858ddeb68e948058UL, 0xffb64d62e202462UL, 0xe07a6dae07f46c11UL);
+   TESTINST_RRR("mulh.w", "$r23", "$r20", "$r14", 0x7713930e419350ffUL, 0xd5d72e6efb86e428UL, 0x49f87e78ddcc8400UL);
+   TESTINST_RRR("mulh.w", "$r28", "$r20", "$r25", 0x552a9b7f3fa0c48aUL, 0xd616afd20f193287UL, 0xbcd2ae680b131cd2UL);
+   TESTINST_RRR("mulh.w", "$r16", "$r19", "$r12", 0x94b154fc890497c3UL, 0xd8217f47e4257a7cUL, 0xb47bb0e4cff83cbfUL);
+   TESTINST_RRR("mulh.w", "$r23", "$r23", "$r6", 0xafb7fddb344318fUL, 0xaafee418c4267e18UL, 0x1763f686cd41d46eUL);
+
+   /* ---------------- mulh.wu rd, rj, rk ---------------- */
+   TESTINST_RRR("mulh.wu", "$r18", "$r17", "$r8", 0xa92fa2817b19786cUL, 0xaf23e3d2092f080cUL, 0x771c36ac19259f2aUL);
+   TESTINST_RRR("mulh.wu", "$r16", "$r13", "$r8", 0xf4a7b7abe5f3831aUL, 0xe8beff7f8f4330cdUL, 0x38cebbe3d1af354dUL);
+   TESTINST_RRR("mulh.wu", "$r8", "$r23", "$r29", 0x6ca8c7d8ec316750UL, 0xc3a59754c752c3a5UL, 0x4b77e251de7f45f1UL);
+   TESTINST_RRR("mulh.wu", "$r20", "$r25", "$r30", 0x6faa5d1372250132UL, 0x68734123142c820aUL, 0xf7b4bdf342e2017UL);
+   TESTINST_RRR("mulh.wu", "$r31", "$r18", "$r19", 0x8cfa67422c1c5d5UL, 0xb48ac9531206cef2UL, 0x9f9f5d925c5cf738UL);
+   TESTINST_RRR("mulh.wu", "$r25", "$r7", "$r27", 0x85aa17ff1b3699baUL, 0x9a7aeabb800edb53UL, 0x4eb1ec754c7cdb59UL);
+   TESTINST_RRR("mulh.wu", "$r19", "$r4", "$r28", 0x821038d7fb43149cUL, 0x44cd20261f5ae87eUL, 0xf9d8916e8eb4ecb1UL);
+   TESTINST_RRR("mulh.wu", "$r30", "$r23", "$r28", 0xef34433557594fb3UL, 0x2f9401c8064c8ca0UL, 0x5de6287c2a56e507UL);
+   TESTINST_RRR("mulh.wu", "$r13", "$r6", "$r17", 0xd6b38c427ad5f669UL, 0xbe04ea8987b20188UL, 0x52cee1d144e3c134UL);
+   TESTINST_RRR("mulh.wu", "$r26", "$r19", "$r17", 0x2ea15eee9429b8a0UL, 0x43598be92000d9f7UL, 0x6364cfeb707aba6cUL);
+
+   /* ---------------- mul.d rd, rj, rk ---------------- */
+   TESTINST_RRR("mul.d", "$r19", "$r4", "$r10", 0xf0235819cf1bab1fUL, 0xdc7a0086353cfddfUL, 0x6f18aec465b5af87UL);
+   TESTINST_RRR("mul.d", "$r19", "$r31", "$r20", 0x24d7526c5e4669e3UL, 0xaab7dd46e5af2493UL, 0xd5df6eea42205e25UL);
+   TESTINST_RRR("mul.d", "$r15", "$r20", "$r4", 0x3740ba48d64cc478UL, 0xcfeffb7c35a98382UL, 0xeab050fc9bdb3c52UL);
+   TESTINST_RRR("mul.d", "$r29", "$r7", "$r25", 0xe8858552c0e8eac8UL, 0xb65ed231c27efb70UL, 0xbb753de59e4ca3d1UL);
+   TESTINST_RRR("mul.d", "$r5", "$r30", "$r4", 0xc4f17df5c983317dUL, 0xb2af9e86d443d8ceUL, 0xf9e3c6d18372d0d3UL);
+   TESTINST_RRR("mul.d", "$r25", "$r17", "$r29", 0xa09d11d50056b350UL, 0x6609b14ca65f9affUL, 0x692def5a14a3278cUL);
+   TESTINST_RRR("mul.d", "$r13", "$r15", "$r26", 0xd528ed047af75775UL, 0x896658fe826a0817UL, 0xa456f53d5f2760b1UL);
+   TESTINST_RRR("mul.d", "$r23", "$r9", "$r7", 0x5d33f63ce8637a69UL, 0xad38922264c721ffUL, 0xe0514fea4ee52acaUL);
+   TESTINST_RRR("mul.d", "$r25", "$r23", "$r30", 0x5d74125f059662f3UL, 0xa708100731e88710UL, 0x739e4de71fec92e0UL);
+   TESTINST_RRR("mul.d", "$r26", "$r18", "$r30", 0x110a94ffa2e12f32UL, 0x1b770d6c423d4f8UL, 0x38bf04d66f91531aUL);
+
+   /* ---------------- mulh.d rd, rj, rk ---------------- */
+   TESTINST_RRR("mulh.d", "$r5", "$r15", "$r12", 0xd72f46d42ca4db6bUL, 0xe1771af0e69e49a6UL, 0xd796f52fbd01a4bbUL);
+   TESTINST_RRR("mulh.d", "$r28", "$r18", "$r14", 0x904e699bcbe32b08UL, 0x9b5b69b4d817779cUL, 0xa02ca97cc4e37f13UL);
+   TESTINST_RRR("mulh.d", "$r6", "$r12", "$r7", 0xc75e1065b8dbcd34UL, 0xec7d8ae6a65f2fd3UL, 0xb7e32b52f40bc8efUL);
+   TESTINST_RRR("mulh.d", "$r5", "$r25", "$r19", 0x7b2e04c0c2f95e4fUL, 0x9a5037ff200e982aUL, 0xf862c0c6425ff2bcUL);
+   TESTINST_RRR("mulh.d", "$r14", "$r8", "$r23", 0x5fd7ae31ad151daaUL, 0x444243172f499ec0UL, 0x9003c8aeabc39884UL);
+   TESTINST_RRR("mulh.d", "$r7", "$r23", "$r13", 0xbc21ca397041a2bUL, 0xe886455c8737b2caUL, 0xd5ccec2f631a1d60UL);
+   TESTINST_RRR("mulh.d", "$r26", "$r16", "$r13", 0xd3894783f187ee9cUL, 0xa7a6c4abeda9a22cUL, 0x4375f7e49ed91384UL);
+   TESTINST_RRR("mulh.d", "$r17", "$r31", "$r16", 0xa93bd0cf9137745eUL, 0x3a1b2b922b7645f1UL, 0x7e33f64c19972ae3UL);
+   TESTINST_RRR("mulh.d", "$r20", "$r19", "$r8", 0xda9224c9ab488939UL, 0xb7f5978bf509641dUL, 0xf6fcd615333c30c0UL);
+   TESTINST_RRR("mulh.d", "$r12", "$r17", "$r20", 0xcdbd51e35d5c1df3UL, 0x254bd8eaadc946feUL, 0x9de163435088598bUL);
+
+   /* ---------------- mulh.du rd, rj, rk ---------------- */
+   TESTINST_RRR("mulh.du", "$r25", "$r28", "$r29", 0xf7ef0dbf1bf7938aUL, 0xd267d11ae422f604UL, 0x89d6fd68226e13dUL);
+   TESTINST_RRR("mulh.du", "$r7", "$r28", "$r24", 0xe568cf4a6d6bc199UL, 0x6efedad6fbe95f2aUL, 0xdf55853ed22d024eUL);
+   TESTINST_RRR("mulh.du", "$r25", "$r8", "$r9", 0xbf7c0226b0c2072UL, 0x794fd44a65c65ebbUL, 0xa0391c3fa3cf1e5cUL);
+   TESTINST_RRR("mulh.du", "$r30", "$r16", "$r7", 0x3df3f3b3ff17f61aUL, 0xcadd1f7e7150ad7bUL, 0xbdc63d3f762cf02dUL);
+   TESTINST_RRR("mulh.du", "$r6", "$r10", "$r19", 0x6601e05fc5f801cbUL, 0xbc10a70104969251UL, 0x2f50a00036fb7821UL);
+   TESTINST_RRR("mulh.du", "$r17", "$r9", "$r5", 0xffabc0cbdc8aa7b0UL, 0x5288bc60da558afbUL, 0x2795644a58b2668fUL);
+   TESTINST_RRR("mulh.du", "$r26", "$r8", "$r15", 0x68b64c997f561b59UL, 0xe2ed2375e64b1bf3UL, 0xe1033e583092ad96UL);
+   TESTINST_RRR("mulh.du", "$r10", "$r13", "$r30", 0x6450ec488eb4753bUL, 0x4287b82860366cf8UL, 0x1c15ed3f051fe8cUL);
+   TESTINST_RRR("mulh.du", "$r24", "$r13", "$r15", 0x1169fa9dd6f8273dUL, 0x6fd2cdb39e5d1fa3UL, 0xff0526e206880684UL);
+   TESTINST_RRR("mulh.du", "$r8", "$r9", "$r10", 0xe9cb6416a1492fbfUL, 0xaf89960e18913df0UL, 0x76b4251409ff9830UL);
+
+   /* ---------------- mulw.d.w rd, rj, rk ---------------- */
+   TESTINST_RRR("mulw.d.w", "$r6", "$r31", "$r7", 0x50ce021eb3b3f3a4UL, 0xb859e7514e4c4d7cUL, 0x372cb1e2b3200f36UL);
+   TESTINST_RRR("mulw.d.w", "$r31", "$r7", "$r28", 0x925642fa7e2de9abUL, 0x61404b6550238cebUL, 0x75ed502242ed0430UL);
+   TESTINST_RRR("mulw.d.w", "$r19", "$r16", "$r10", 0xef82de697f7239fUL, 0xdf1c56dfe5c0e48dUL, 0xbc7e740fe1b1dc25UL);
+   TESTINST_RRR("mulw.d.w", "$r29", "$r12", "$r27", 0xc104a400fa0d1dbfUL, 0x2aa34e8a5fad6c6fUL, 0x7f8e4d23644b0d4dUL);
+   TESTINST_RRR("mulw.d.w", "$r25", "$r16", "$r25", 0x5b8ff9172c849fb9UL, 0x843f90380af6f2afUL, 0x12f7f8780cb8bfe0UL);
+   TESTINST_RRR("mulw.d.w", "$r13", "$r13", "$r7", 0x6bba79a88056d891UL, 0x6757a43d403285abUL, 0x2d2ea385888c2664UL);
+   TESTINST_RRR("mulw.d.w", "$r12", "$r8", "$r23", 0x5c96927dcf1fb14eUL, 0x2b3767b9e9029d4bUL, 0x252bbcc66b5d834bUL);
+   TESTINST_RRR("mulw.d.w", "$r6", "$r13", "$r10", 0x5fa5a8b36e8ec3e0UL, 0xcbca4b4d518b9466UL, 0xabdf2ec674f70c5bUL);
+   TESTINST_RRR("mulw.d.w", "$r16", "$r15", "$r23", 0x5b94eeb9c3c9fa01UL, 0x5c4ebef486f83b43UL, 0x73f3781c3a1e9216UL);
+   TESTINST_RRR("mulw.d.w", "$r6", "$r31", "$r7", 0xbc263312a123caedUL, 0xe9aa8545d3a99a97UL, 0x71b5dbacf4f7f2b8UL);
+
+   /* ---------------- mulw.d.wu rd, rj, rk ---------------- */
+   TESTINST_RRR("mulw.d.wu", "$r14", "$r17", "$r30", 0x94452e0d7eb407b7UL, 0x629b1902a484a77dUL, 0x474359ca7f7165edUL);
+   TESTINST_RRR("mulw.d.wu", "$r26", "$r7", "$r5", 0xae9771f0d59319b3UL, 0x1bcb563dea8f3a3fUL, 0x759334cc2d543103UL);
+   TESTINST_RRR("mulw.d.wu", "$r25", "$r28", "$r27", 0x27ca0bf2d6cd2699UL, 0x5a015da9b52ffc64UL, 0x482a4fa5b5625914UL);
+   TESTINST_RRR("mulw.d.wu", "$r8", "$r4", "$r16", 0x22f61239dad7bc92UL, 0xe8c9964b31b0e199UL, 0x99fdef421aa22322UL);
+   TESTINST_RRR("mulw.d.wu", "$r29", "$r17", "$r15", 0xcc5eec6e4f2b5fdbUL, 0x2d08ada074c2ac37UL, 0x8967ce1cd4c2362eUL);
+   TESTINST_RRR("mulw.d.wu", "$r27", "$r23", "$r16", 0x2d057e2ead214d6cUL, 0x987e7a10a0f3ee5dUL, 0xd515e2a2f06be633UL);
+   TESTINST_RRR("mulw.d.wu", "$r15", "$r19", "$r12", 0xce24943d6fe20263UL, 0xd6bbdcb20d76de15UL, 0xcc277905bc41da62UL);
+   TESTINST_RRR("mulw.d.wu", "$r4", "$r4", "$r19", 0xe37942a26dc0e882UL, 0x6a30fb04c3b5431fUL, 0x4c937bed67cb6c73UL);
+   TESTINST_RRR("mulw.d.wu", "$r7", "$r12", "$r9", 0xbdebe7a7b19b7dc0UL, 0x3f6e790fb24d19f1UL, 0x7a19c4fdd0d29f3eUL);
+   TESTINST_RRR("mulw.d.wu", "$r31", "$r30", "$r28", 0x690687056e169108UL, 0xa8abab5bf1d42538UL, 0x636a31884ca1e99UL);
+
+   /* ---------------- div.w rd, rj, rk ---------------- */
+   TESTINST_RRR("div.w", "$r13", "$r28", "$r23", 0x16546290UL, 0x627aa138UL, 0x534168cUL);
+   TESTINST_RRR("div.w", "$r28", "$r19", "$r9", 0xffffffffbe03930dUL, 0x223d0ec7UL, 0xffffffff8404aa67UL);
+   TESTINST_RRR("div.w", "$r18", "$r19", "$r30", 0xffffffffac214649UL, 0xffffffff8019c3b7UL, 0xffffffff871cbf90UL);
+   TESTINST_RRR("div.w", "$r24", "$r25", "$r7", 0xffffffffa144ed80UL, 0x1c4370c7UL, 0x4695aa29UL);
+   TESTINST_RRR("div.w", "$r9", "$r27", "$r4", 0x3ae8b7c7UL, 0xfffffffff3a6ebb2UL, 0x181d816aUL);
+   TESTINST_RRR("div.w", "$r28", "$r15", "$r7", 0xffffffff956a7de4UL, 0xffffffff9aab217bUL, 0x3b061b78UL);
+   TESTINST_RRR("div.w", "$r25", "$r24", "$r12", 0x3c6167d4UL, 0x2673145eUL, 0x1d5e391UL);
+   TESTINST_RRR("div.w", "$r23", "$r15", "$r4", 0x3e0820eeUL, 0x42793c51UL, 0x286cdb51UL);
+   TESTINST_RRR("div.w", "$r28", "$r16", "$r30", 0xffffffffcf8fd242UL, 0x2a76141eUL, 0x2429a52UL);
+   TESTINST_RRR("div.w", "$r29", "$r8", "$r18", 0x74991388UL, 0xffffffffd594ef43UL, 0x6d3f9603UL);
+
+   /* ---------------- mod.w rd, rj, rk ---------------- */
+   TESTINST_RRR("mod.w", "$r8", "$r13", "$r14", 0x5cc9e6dbUL, 0xfffffffff7327c6dUL, 0x23eef833UL);
+   TESTINST_RRR("mod.w", "$r25", "$r24", "$r25", 0x539195e4UL, 0xffffffffd94f10c8UL, 0x2c5786d9UL);
+   TESTINST_RRR("mod.w", "$r10", "$r16", "$r23", 0xffffffff9b15f725UL, 0x448a831dUL, 0xffffffffd5d7d92bUL);
+   TESTINST_RRR("mod.w", "$r6", "$r5", "$r29", 0x1794d969UL, 0x2fba86b0UL, 0x40e6ab6bUL);
+   TESTINST_RRR("mod.w", "$r16", "$r14", "$r29", 0x6a503328UL, 0xffffffffdf0b2ad2UL, 0xffffffff90dc29c6UL);
+   TESTINST_RRR("mod.w", "$r30", "$r14", "$r18", 0xffffffffc7670acdUL, 0x53f3b34fUL, 0xffffffff84b62159UL);
+   TESTINST_RRR("mod.w", "$r31", "$r6", "$r18", 0xffffffff98334c95UL, 0xfffffffff241ffd8UL, 0xffffffffa73314aaUL);
+   TESTINST_RRR("mod.w", "$r12", "$r8", "$r4", 0xffffffffd9f19db4UL, 0xffffffffc89f9796UL, 0xffffffffaa8e2a3bUL);
+   TESTINST_RRR("mod.w", "$r23", "$r12", "$r4", 0xffffffff94e93220UL, 0xfffffffffea1587aUL, 0xffffffffb88b2b87UL);
+   TESTINST_RRR("mod.w", "$r13", "$r9", "$r18", 0xf718c0UL, 0xffffffffe264a3a5UL, 0x2f29ef3UL);
+
+   /* ---------------- div.wu rd, rj, rk ---------------- */
+   TESTINST_RRR("div.wu", "$r24", "$r5", "$r16", 0xddf57c5UL, 0x6b1a808cUL, 0x576fe70UL);
+   TESTINST_RRR("div.wu", "$r26", "$r7", "$r9", 0x665e82ffUL, 0x344d887fUL, 0x7fd6d6d8UL);
+   TESTINST_RRR("div.wu", "$r13", "$r18", "$r15", 0xffffffffe82e2cf8UL, 0x7c66b628UL, 0x305c899UL);
+   TESTINST_RRR("div.wu", "$r15", "$r14", "$r7", 0xb06b1fUL, 0x56016282UL, 0x95a8701UL);
+   TESTINST_RRR("div.wu", "$r19", "$r12", "$r31", 0xffffffffb3a487d1UL, 0xffffffffbe2fe16eUL, 0xffffffff8dc0ff7fUL);
+   TESTINST_RRR("div.wu", "$r6", "$r10", "$r20", 0x1bb491e9UL, 0x64e382eUL, 0x5977f9f1UL);
+   TESTINST_RRR("div.wu", "$r9", "$r29", "$r28", 0x498c3349UL, 0x14cbb257UL, 0xffffffff95165a4aUL);
+   TESTINST_RRR("div.wu", "$r10", "$r29", "$r15", 0xffffffffbb3f9c5dUL, 0x2755057dUL, 0x14039cc4UL);
+   TESTINST_RRR("div.wu", "$r24", "$r31", "$r7", 0xffffffffe5a9a3cdUL, 0xffffffffa1f84b49UL, 0xffffffffe45bd3b9UL);
+   TESTINST_RRR("div.wu", "$r23", "$r18", "$r6", 0x54e07e9fUL, 0xffffffffaccbdd8cUL, 0xfffffffff3729b57UL);
+
+   /* ---------------- mod.wu rd, rj, rk ---------------- */
+   TESTINST_RRR("mod.wu", "$r5", "$r20", "$r18", 0xffffffffa1ce2e4eUL, 0xffffffffdbeb0e2dUL, 0x70157135UL);
+   TESTINST_RRR("mod.wu", "$r14", "$r30", "$r17", 0x10e75d07UL, 0x39c3080UL, 0x1658d87bUL);
+   TESTINST_RRR("mod.wu", "$r28", "$r7", "$r4", 0x6df194dbUL, 0x55fae7c9UL, 0xffffffff9a87c1efUL);
+   TESTINST_RRR("mod.wu", "$r6", "$r14", "$r10", 0xffffffff8feb78ccUL, 0xffffffffe5032316UL, 0x18ab441eUL);
+   TESTINST_RRR("mod.wu", "$r13", "$r15", "$r9", 0xffffffffbb28952cUL, 0x2d43f57dUL, 0x2dfbf584UL);
+   TESTINST_RRR("mod.wu", "$r7", "$r30", "$r5", 0x9bfb2cfUL, 0x6595d7b3UL, 0xfffffffffffd1025UL);
+   TESTINST_RRR("mod.wu", "$r10", "$r9", "$r16", 0x342671c6UL, 0xfffffffff1ff8be3UL, 0xfffffffffaea052bUL);
+   TESTINST_RRR("mod.wu", "$r16", "$r16", "$r23", 0xffffffffc0356055UL, 0x2ac1f414UL, 0x4a75c890UL);
+   TESTINST_RRR("mod.wu", "$r19", "$r8", "$r7", 0xfffffffff8ed6580UL, 0x5fef460eUL, 0x68eedef2UL);
+   TESTINST_RRR("mod.wu", "$r29", "$r25", "$r25", 0xffffffff9ea76eb0UL, 0xffffffff818904b9UL, 0xffffffffe92f4f30UL);
+
+   /* ---------------- div.d rd, rj, rk ---------------- */
+   TESTINST_RRR("div.d", "$r7", "$r17", "$r7", 0xc8f25fb958f2d668UL, 0x74a14cbaa00fdeaUL, 0xcf95f3de82ceb015UL);
+   TESTINST_RRR("div.d", "$r10", "$r19", "$r12", 0x9ead8a6f6ea63534UL, 0xaf80d344d48e6cd5UL, 0xe1f40f759cbfe0e7UL);
+   TESTINST_RRR("div.d", "$r23", "$r28", "$r28", 0x35481a5285093e04UL, 0xfd79e3c19b697fa8UL, 0x6ffab603b9e1b7fbUL);
+   TESTINST_RRR("div.d", "$r30", "$r25", "$r4", 0x3eacf1d695a34b95UL, 0xfbff957ab051d494UL, 0x670724b8930d53fUL);
+   TESTINST_RRR("div.d", "$r31", "$r29", "$r6", 0xce8d3df48871d655UL, 0xf351f7f35927e83dUL, 0x93a3085686f4101fUL);
+   TESTINST_RRR("div.d", "$r17", "$r23", "$r8", 0xfc913f8b14dda5a5UL, 0x1f938af81988deUL, 0x9d021a9f06b46953UL);
+   TESTINST_RRR("div.d", "$r7", "$r29", "$r15", 0x4593da2923f2ac5bUL, 0x11fc5a958b182a55UL, 0x2edafaf2857c6697UL);
+   TESTINST_RRR("div.d", "$r13", "$r31", "$r27", 0x97236145608dd8c3UL, 0x1f0ee96afd23910bUL, 0xe35e4d5efd2204d3UL);
+   TESTINST_RRR("div.d", "$r13", "$r26", "$r14", 0x2c057bd222f216dfUL, 0x1e006853720971c3UL, 0x81e35a993e6a15b5UL);
+   TESTINST_RRR("div.d", "$r5", "$r9", "$r4", 0x93c0d85c66f2c5abUL, 0x774fbe894b2ed067UL, 0x2c46387d55732742UL);
+
+   /* ---------------- mod.d rd, rj, rk ---------------- */
+   TESTINST_RRR("mod.d", "$r19", "$r26", "$r16", 0x63304d2181f4a4daUL, 0x9ed948849ddee475UL, 0x18a360d3ab980398UL);
+   TESTINST_RRR("mod.d", "$r27", "$r23", "$r13", 0xf7156e74db7a8d92UL, 0x324e7001287ce2a8UL, 0x3cc7524686bed31cUL);
+   TESTINST_RRR("mod.d", "$r8", "$r26", "$r19", 0x7bda37a222135803UL, 0x1daf8fd66ff987edUL, 0x334631279104fc3bUL);
+   TESTINST_RRR("mod.d", "$r25", "$r15", "$r7", 0xd1a0f45d5b463d53UL, 0x9c4cd7bef3bf0712UL, 0x420a5c702006f3ccUL);
+   TESTINST_RRR("mod.d", "$r25", "$r18", "$r7", 0x93487a905cb08a75UL, 0x8c79cafa8bebf0a8UL, 0x1478409d192c144bUL);
+   TESTINST_RRR("mod.d", "$r8", "$r27", "$r27", 0x8756a1690dd7896dUL, 0x35273279ea76319fUL, 0xc5292f2331abc6ddUL);
+   TESTINST_RRR("mod.d", "$r15", "$r10", "$r24", 0xf8c476adbc930802UL, 0x8b5832bcd0f6c87eUL, 0x6cba54a72da38702UL);
+   TESTINST_RRR("mod.d", "$r27", "$r7", "$r6", 0x2387015bddb2c076UL, 0x231e30de7a72ad90UL, 0x81f1285973e8dc11UL);
+   TESTINST_RRR("mod.d", "$r16", "$r9", "$r12", 0x3388d23c07feb1daUL, 0xe8c01f744b310474UL, 0xa29071d702959009UL);
+   TESTINST_RRR("mod.d", "$r13", "$r10", "$r20", 0xbd45a261f8de4fe4UL, 0x6fb0a8c9a2681a8eUL, 0x2f1b7055cf2409ecUL);
+
+   /* ---------------- div.du rd, rj, rk ---------------- */
+   TESTINST_RRR("div.du", "$r17", "$r10", "$r24", 0x4d363fd48a626fdaUL, 0x7ccdeeaa6c24885fUL, 0xfcc68e72f59750aeUL);
+   TESTINST_RRR("div.du", "$r20", "$r20", "$r10", 0x808fa5cb6a75fd6fUL, 0xf3f712970031005UL, 0x1709a8adab2fa578UL);
+   TESTINST_RRR("div.du", "$r15", "$r14", "$r19", 0xcd3107423486c8feUL, 0xf6bc56277282cd14UL, 0x961ac833f00f3e3UL);
+   TESTINST_RRR("div.du", "$r4", "$r29", "$r18", 0xa0bfc2fc5b35fa79UL, 0x2b28c09aa5f12845UL, 0xed44da2fdf5dce00UL);
+   TESTINST_RRR("div.du", "$r4", "$r6", "$r25", 0x1fc6e23fd0f09ed0UL, 0xeaa71d9fb42223caUL, 0x45689545e60381cUL);
+   TESTINST_RRR("div.du", "$r10", "$r8", "$r12", 0xa3710c512d4c006cUL, 0xc011778733c50a6eUL, 0xb44475ee048d8167UL);
+   TESTINST_RRR("div.du", "$r29", "$r4", "$r29", 0x46d27abff0da1972UL, 0x17a4e863a182dcd0UL, 0x59a7b82980ac6a6dUL);
+   TESTINST_RRR("div.du", "$r15", "$r8", "$r30", 0x68120919dbbd9b19UL, 0x4c296c89a6f7a6dfUL, 0x9d9166c1cd0eecfaUL);
+   TESTINST_RRR("div.du", "$r7", "$r18", "$r17", 0xd2389cb7af92be89UL, 0x9a1f65b2c59cfda3UL, 0xe316cf92f8f0574fUL);
+   TESTINST_RRR("div.du", "$r15", "$r25", "$r17", 0x49651d72d87da955UL, 0xd22c499c27908743UL, 0x8d824b01058ecb8UL);
+
+   /* ---------------- mod.du rd, rj, rk ---------------- */
+   TESTINST_RRR("mod.du", "$r26", "$r8", "$r23", 0xb0bd66f10c34fe23UL, 0x5eb9b775d83b4893UL, 0x8867d4b638f2622UL);
+   TESTINST_RRR("mod.du", "$r8", "$r10", "$r25", 0xe236349cd47eeb11UL, 0x119102fd7b236a81UL, 0x8fd72a09e4fb45fUL);
+   TESTINST_RRR("mod.du", "$r25", "$r4", "$r5", 0x1b669725a0c3a970UL, 0x175359099c87b83UL, 0xcad295c79f1d835aUL);
+   TESTINST_RRR("mod.du", "$r7", "$r28", "$r20", 0x7117e70798869df4UL, 0xe35b93aa0c37fe97UL, 0x741084dead7970d0UL);
+   TESTINST_RRR("mod.du", "$r30", "$r24", "$r9", 0xc4d432a8ce91f693UL, 0x77c03aceb2ea6b45UL, 0xb8cd7773fb72b7caUL);
+   TESTINST_RRR("mod.du", "$r23", "$r9", "$r28", 0x13f1f3e1891b6b73UL, 0x9811699becce53a9UL, 0xed15e264f0c39b88UL);
+   TESTINST_RRR("mod.du", "$r13", "$r12", "$r14", 0xb8b22bcb0cb970e8UL, 0x16cdecd7c0091cd2UL, 0x4fcab819ebadbdfdUL);
+   TESTINST_RRR("mod.du", "$r30", "$r17", "$r12", 0xbf96226d2de1240dUL, 0x9fe4b2c7557d6b9aUL, 0x3668e581a5de6efdUL);
+   TESTINST_RRR("mod.du", "$r14", "$r4", "$r6", 0x9bc8f8a69a7f55c2UL, 0x530a9c5a21769babUL, 0x2805bef72d33cbd5UL);
+   TESTINST_RRR("mod.du", "$r23", "$r28", "$r12", 0x82a854f86e642cbaUL, 0xdd0fd63485d6c3dUL, 0x56b21f15cb9d2bf2UL);
+
+   /* ---------------- alsl.w rd, rj, rk, sa2 ---------------- */
+   TESTINST_RRRI("alsl.w", "$r18", "$r10", "$r15", SA2_1, 0xafb40df16156827bUL, 0x9b0b86116a0d89cbUL, 0x80086c066ea6842bUL, 2);
+   TESTINST_RRRI("alsl.w", "$r24", "$r5", "$r4", SA2_1, 0xb8b63b8205a919dfUL, 0x7319260322fa2d6dUL, 0x1efce6644a51ebf9UL, 2);
+   TESTINST_RRRI("alsl.w", "$r24", "$r5", "$r27", SA2_1, 0xb4f0fd355869e078UL, 0x26abeea20b7d1ac1UL, 0x4108f7f27e321c8fUL, 2);
+   TESTINST_RRRI("alsl.w", "$r24", "$r29", "$r10", SA2_1, 0x4b948e9a0b82df22UL, 0x11893c9dd43d0112UL, 0x51a030165671a055UL, 1);
+   TESTINST_RRRI("alsl.w", "$r5", "$r10", "$r18", SA2_1, 0xfc253ac9e2b55590UL, 0x2682507563a85b07UL, 0xa467083f66457d1dUL, 1);
+   TESTINST_RRRI("alsl.w", "$r20", "$r13", "$r10", SA2_1, 0x76e8c346a721cdabUL, 0x548f2762bfb1bc01UL, 0xa6e0d27e62dcc594UL, 3);
+   TESTINST_RRRI("alsl.w", "$r16", "$r6", "$r24", SA2_1, 0x39f77b88fc3b663UL, 0x281818bf4a36a7e5UL, 0x86cd2a06ef475a61UL, 3);
+   TESTINST_RRRI("alsl.w", "$r14", "$r18", "$r9", SA2_1, 0x8a58ea94346ff16UL, 0x4ff191f91397adeaUL, 0x4cda359b03c97a53UL, 4);
+   TESTINST_RRRI("alsl.w", "$r8", "$r6", "$r29", SA2_1, 0xae0bfa182556c725UL, 0xda179bc2f41d03d3UL, 0x1d23e4da08af7978UL, 1);
+   TESTINST_RRRI("alsl.w", "$r31", "$r26", "$r30", SA2_1, 0xd6af9fcd7ffd8e75UL, 0x3e88bb77d6665633UL, 0x23a0414c69b804c1UL, 1);
+
+   /* ---------------- alsl.wu rd, rj, rk, sa2 ---------------- */
+   TESTINST_RRRI("alsl.wu", "$r20", "$r24", "$r18", SA2_1, 0xc714872ff3c39370UL, 0xcaea31ddabb275f9UL, 0xedbfc2cedca8eb7aUL, 2);
+   TESTINST_RRRI("alsl.wu", "$r13", "$r26", "$r15", SA2_1, 0xe1a0ba1adcb75aa4UL, 0x8adbed432acf321aUL, 0xeae447eaa60bb142UL, 3);
+   TESTINST_RRRI("alsl.wu", "$r4", "$r17", "$r27", SA2_1, 0xb153f9ecea23068cUL, 0xd2066b089c9499a3UL, 0x36ed3c96ac4751aaUL, 3);
+   TESTINST_RRRI("alsl.wu", "$r20", "$r10", "$r4", SA2_1, 0x8fb2705357e98d66UL, 0xd353329585fc71ddUL, 0x739237ed6a677f00UL, 4);
+   TESTINST_RRRI("alsl.wu", "$r31", "$r12", "$r23", SA2_1, 0x6caac60acd9bc6f4UL, 0xc87131b9171530dfUL, 0x39c8e321a6e131c0UL, 2);
+   TESTINST_RRRI("alsl.wu", "$r13", "$r14", "$r19", SA2_1, 0xd2c7072036f54e45UL, 0x35ea1627556f8f98UL, 0x97054728433042d3UL, 2);
+   TESTINST_RRRI("alsl.wu", "$r7", "$r14", "$r5", SA2_1, 0x5a0f1fae80105d64UL, 0xd300b74879e33a53UL, 0x3a1e7389d0669d4cUL, 1);
+   TESTINST_RRRI("alsl.wu", "$r28", "$r4", "$r9", SA2_1, 0xcd7fd8389b4f4062UL, 0xad1830d644c205e7UL, 0xced1c031d73f9087UL, 1);
+   TESTINST_RRRI("alsl.wu", "$r13", "$r9", "$r29", SA2_1, 0x81601560f53b081UL, 0xd3ee3c45f08cd218UL, 0xa7d5a43a1df2aa1dUL, 4);
+   TESTINST_RRRI("alsl.wu", "$r30", "$r29", "$r31", SA2_1, 0xf383bd5bfae7e46dUL, 0x67862a0151c65567UL, 0x9cdcbf604f46c48aUL, 2);
+
+   /* ---------------- alsl.d rd, rj, rk, sa2 ---------------- */
+   TESTINST_RRRI("alsl.d", "$r18", "$r28", "$r16", SA2_1, 0x53e533e973dfa49cUL, 0x6665a9d32abaaf55UL, 0xf70490874fb75e6eUL, 4);
+   TESTINST_RRRI("alsl.d", "$r10", "$r30", "$r18", SA2_1, 0xfb14c3e6acd722c3UL, 0xcae19862ab088fccUL, 0x87c434d85259d923UL, 2);
+   TESTINST_RRRI("alsl.d", "$r17", "$r25", "$r26", SA2_1, 0x95e79a567c313ec7UL, 0x83a0e706c2c4c534UL, 0x2f49f1e9d5b91fc9UL, 1);
+   TESTINST_RRRI("alsl.d", "$r7", "$r24", "$r24", SA2_1, 0x35b966d0db9f681cUL, 0xc0bc97593f1054fcUL, 0x7e564928b0a53ac6UL, 2);
+   TESTINST_RRRI("alsl.d", "$r6", "$r30", "$r24", SA2_1, 0x38ad1fb21e071421UL, 0xb959c439b0436d6dUL, 0x647c742c9ce02fc5UL, 3);
+   TESTINST_RRRI("alsl.d", "$r18", "$r28", "$r10", SA2_1, 0x1bde2962dc5bb68bUL, 0x67c403d00c9389bdUL, 0x8fc18921f225d05aUL, 2);
+   TESTINST_RRRI("alsl.d", "$r8", "$r27", "$r15", SA2_1, 0x5b8de9d8b393fa06UL, 0x393ec1c28e89e9d8UL, 0x1a59f9d852c3f8baUL, 3);
+   TESTINST_RRRI("alsl.d", "$r27", "$r24", "$r6", SA2_1, 0x72195c1ca51cc4dbUL, 0x4ee5b51e1e161ab2UL, 0x8a10acb4b625fefUL, 4);
+   TESTINST_RRRI("alsl.d", "$r29", "$r4", "$r18", SA2_1, 0xf3ed9e39d83d3decUL, 0xa3816509b9a6c23dUL, 0x6949e8e534450dd5UL, 2);
+   TESTINST_RRRI("alsl.d", "$r16", "$r13", "$r8", SA2_1, 0x588f388f25a342dfUL, 0xde33a74109c7be30UL, 0x8b02cf06997a065aUL, 1);
+
+   /* ---------------- lu12i.w rd, si20 ---------------- */
+   TESTINST_RI("lu12i.w", "$r9", SI20, 0xdf45bd002ccf48e1UL, 94146);
+   TESTINST_RI("lu12i.w", "$r10", SI20, 0xa5138a37d09ada8aUL, 129014);
+   TESTINST_RI("lu12i.w", "$r18", SI20, 0xefe46a52b8b3e5eUL, -130138);
+   TESTINST_RI("lu12i.w", "$r7", SI20, 0x29084adf6d033a88UL, -467080);
+   TESTINST_RI("lu12i.w", "$r10", SI20, 0xe9072e7fec2a5d1cUL, 360675);
+   TESTINST_RI("lu12i.w", "$r28", SI20, 0x2f7d41c7bd959cd5UL, 205272);
+   TESTINST_RI("lu12i.w", "$r16", SI20, 0xcb48200d89b48566UL, -266298);
+   TESTINST_RI("lu12i.w", "$r12", SI20, 0xd605223c244f4a50UL, -186346);
+   TESTINST_RI("lu12i.w", "$r15", SI20, 0x22c035c8c90016beUL, 247864);
+   TESTINST_RI("lu12i.w", "$r20", SI20, 0x6b2fd1aa0b603fecUL, -511005);
+
+   /* ---------------- lu32i.d rd, si20 ---------------- */
+   TESTINST_RI("lu32i.d", "$r8", SI20, 0xb331616751ed8877UL, -310956);
+   TESTINST_RI("lu32i.d", "$r17", SI20, 0xe49bab8d80e1dd7UL, 35590);
+   TESTINST_RI("lu32i.d", "$r4", SI20, 0x842cdc9ac0a0adf6UL, 500474);
+   TESTINST_RI("lu32i.d", "$r23", SI20, 0xc9ca69b8e5ab079eUL, -447277);
+   TESTINST_RI("lu32i.d", "$r12", SI20, 0x27d83e1c77dec50aUL, -503028);
+   TESTINST_RI("lu32i.d", "$r26", SI20, 0xc00dcc918a89f350UL, -355708);
+   TESTINST_RI("lu32i.d", "$r16", SI20, 0xd180188cdc073491UL, -231989);
+   TESTINST_RI("lu32i.d", "$r26", SI20, 0x4efae034432bbb3bUL, 250642);
+   TESTINST_RI("lu32i.d", "$r15", SI20, 0x7bf2141e673e336fUL, 237105);
+   TESTINST_RI("lu32i.d", "$r4", SI20, 0x187c50bfc5eb8f32UL, -312071);
+
+   /* ---------------- lu52i.d rd, rj, si12 ---------------- */
+   TESTINST_RRI("lu52i.d", "$r8", "$r25", SI12, 0x1da74dfcb33d471aUL, 0x453ae9f1200f4d41UL, 1920);
+   TESTINST_RRI("lu52i.d", "$r14", "$r25", SI12, 0x5e954055ebaec78fUL, 0xb7637f9119e12e31UL, -2008);
+   TESTINST_RRI("lu52i.d", "$r26", "$r24", SI12, 0xead69e40b96b23bfUL, 0x779862b03d1ab575UL, -1803);
+   TESTINST_RRI("lu52i.d", "$r5", "$r25", SI12, 0x452236306da7c667UL, 0x9f16a6e48cca3a7bUL, -1406);
+   TESTINST_RRI("lu52i.d", "$r26", "$r23", SI12, 0x5604b9744291e45aUL, 0x70eecb3116b1795cUL, -667);
+   TESTINST_RRI("lu52i.d", "$r14", "$r27", SI12, 0x6d9a8cfe459c1c48UL, 0x85452bdd40205e0dUL, -1221);
+   TESTINST_RRI("lu52i.d", "$r25", "$r8", SI12, 0x1a8d72e42f68a33dUL, 0x7089b6fe4c1f7a70UL, 423);
+   TESTINST_RRI("lu52i.d", "$r30", "$r10", SI12, 0x7c4fe646acac7ac0UL, 0xe7d222ba1fd5cae2UL, -177);
+   TESTINST_RRI("lu52i.d", "$r6", "$r13", SI12, 0xdb3d6a615a9e492fUL, 0xaa9303648ff489f2UL, -1438);
+   TESTINST_RRI("lu52i.d", "$r25", "$r4", SI12, 0x8b41b813d85b8ee8UL, 0xe4d31961e42e713cUL, -634);
+
+   /* ---------------- addi.w rd, rj, si12 ---------------- */
+   TESTINST_RRI("addi.w", "$r6", "$r27", SI12, 0x12845f036198fa6fUL, 0xda77c63c764655daUL, 1727);
+   TESTINST_RRI("addi.w", "$r9", "$r8", SI12, 0x21a7e3cfa2649a4fUL, 0xc64c73b3bd4c1dcbUL, -381);
+   TESTINST_RRI("addi.w", "$r16", "$r6", SI12, 0x6c47b02ef52a3502UL, 0x24ca1a646dac5cc3UL, -186);
+   TESTINST_RRI("addi.w", "$r20", "$r31", SI12, 0xb6144d8f9513c78eUL, 0xc4b808764e894e6cUL, 1503);
+   TESTINST_RRI("addi.w", "$r19", "$r17", SI12, 0xcf97c9215c961121UL, 0x9b714c4cb899399bUL, -1918);
+   TESTINST_RRI("addi.w", "$r14", "$r8", SI12, 0xe1abf22f6c3c82ecUL, 0x4110e9c1b5f59ef6UL, -1781);
+   TESTINST_RRI("addi.w", "$r29", "$r18", SI12, 0x4b64427195dda12dUL, 0xadf5af70b7b3f37bUL, 2047);
+   TESTINST_RRI("addi.w", "$r4", "$r30", SI12, 0xfc785d46f5bbdff4UL, 0x1e061e9d51362d9cUL, 244);
+   TESTINST_RRI("addi.w", "$r7", "$r23", SI12, 0xe037576d82c12e8dUL, 0xa77c8da72af708f1UL, -376);
+   TESTINST_RRI("addi.w", "$r23", "$r17", SI12, 0xa10df57c4103efUL, 0x26d2628746ad0a3eUL, 1924);
+
+   /* ---------------- addi.d rd, rj, si12 ---------------- */
+   TESTINST_RRI("addi.d", "$r14", "$r14", SI12, 0x61b497fb58a816d9UL, 0x29eb218dd65d9d6cUL, 152);
+   TESTINST_RRI("addi.d", "$r20", "$r13", SI12, 0xd80db8387a8cdd93UL, 0x5e23e4b01f2bbd6dUL, -640);
+   TESTINST_RRI("addi.d", "$r13", "$r25", SI12, 0x5dfea060c6e8f587UL, 0x95f49b783954f9f9UL, -743);
+   TESTINST_RRI("addi.d", "$r4", "$r30", SI12, 0xd72f370f6ce7bc4cUL, 0x148550b0f97ce601UL, 676);
+   TESTINST_RRI("addi.d", "$r26", "$r8", SI12, 0xa4120a67f8d6df1aUL, 0xa83f4bbcaf5bc52eUL, 1630);
+   TESTINST_RRI("addi.d", "$r20", "$r29", SI12, 0xa8f9c82780ac16d5UL, 0x7ab169a5751642bcUL, -1971);
+   TESTINST_RRI("addi.d", "$r8", "$r8", SI12, 0x6f22bdb480c14540UL, 0x94e1253c331b17f2UL, 1160);
+   TESTINST_RRI("addi.d", "$r15", "$r27", SI12, 0x312473547bcfe03UL, 0x7a786cbc8149d818UL, 844);
+   TESTINST_RRI("addi.d", "$r8", "$r26", SI12, 0xee2b1be852671bc3UL, 0x6a36d61dfee3a6fbUL, -1185);
+   TESTINST_RRI("addi.d", "$r17", "$r27", SI12, 0x70e068b54ed72e20UL, 0x922681ab8837027bUL, -2046);
+
+   /* ---------------- addu16i.d rd, rj, si16 ---------------- */
+   TESTINST_RRI("addu16i.d", "$r20", "$r29", SI16, 0x8232770e3472bdc3UL, 0x4d28c5567787c26eUL, -14564);
+   TESTINST_RRI("addu16i.d", "$r29", "$r4", SI16, 0x9076403ed2f0fdf4UL, 0x471cafb4183a389fUL, -3511);
+   TESTINST_RRI("addu16i.d", "$r26", "$r15", SI16, 0xdec118b1eb13234UL, 0x6ff5ce56111b301UL, 25897);
+   TESTINST_RRI("addu16i.d", "$r9", "$r5", SI16, 0x73209239d98fb81aUL, 0x1dc8f0ba4710eba3UL, -21829);
+   TESTINST_RRI("addu16i.d", "$r28", "$r25", SI16, 0xa39ba8429a9c13a6UL, 0x4fffb32851c13ff2UL, -23832);
+   TESTINST_RRI("addu16i.d", "$r23", "$r30", SI16, 0x8abd919f5ea43b1UL, 0x40078826f7336f0eUL, -32189);
+   TESTINST_RRI("addu16i.d", "$r28", "$r24", SI16, 0x695e543e25e7d3e4UL, 0x30279db606efa8ecUL, 16372);
+   TESTINST_RRI("addu16i.d", "$r4", "$r18", SI16, 0xa125cadb71209757UL, 0xff287b5e7fb2a2baUL, -28041);
+   TESTINST_RRI("addu16i.d", "$r5", "$r17", SI16, 0xd5d3e6da7c594ca9UL, 0x2bc9be0ef252584cUL, -11268);
+   TESTINST_RRI("addu16i.d", "$r29", "$r28", SI16, 0xee0391151007613UL, 0xae616c39d87c4b6eUL, -15645);
+
+   /* ---------------- andi rd, rj, ui12 ---------------- */
+   TESTINST_RRI("andi", "$r28", "$r18", UI12, 0xd62f833fbbd483b3UL, 0xa2f268cdcf18dd00UL, 1288);
+   TESTINST_RRI("andi", "$r12", "$r13", UI12, 0xc40efc9a74a3a13bUL, 0xfd609200795f877cUL, 153);
+   TESTINST_RRI("andi", "$r6", "$r18", UI12, 0x79ee7ee7a7865b79UL, 0x644bec92dca1ad7fUL, 3633);
+   TESTINST_RRI("andi", "$r5", "$r31", UI12, 0x2d64be0e5c2ec0f6UL, 0x87253b6589f182c7UL, 3299);
+   TESTINST_RRI("andi", "$r28", "$r5", UI12, 0xf2e4ed85d98a1860UL, 0x9f58e4edd98b60d1UL, 3189);
+   TESTINST_RRI("andi", "$r18", "$r29", UI12, 0x3c067920d48cf0d2UL, 0x2bf35e68c503ecfeUL, 4031);
+   TESTINST_RRI("andi", "$r20", "$r24", UI12, 0xe1d95be05fd57a64UL, 0xd33e771521b24bd3UL, 3252);
+   TESTINST_RRI("andi", "$r6", "$r23", UI12, 0x23341b2d86d02365UL, 0x16de10f2b4a45064UL, 1665);
+   TESTINST_RRI("andi", "$r27", "$r14", UI12, 0xd7db9d77aea4dcf5UL, 0x142272b737435eb7UL, 325);
+   TESTINST_RRI("andi", "$r23", "$r16", UI12, 0x57fee53581b09718UL, 0x2ace25d9e2ddbaaUL, 1056);
+
+   /* ---------------- ori rd, rj, ui12 ---------------- */
+   TESTINST_RRI("ori", "$r26", "$r13", UI12, 0x6d47cf7e5bb5c13eUL, 0x93aed4996805ba3bUL, 3251);
+   TESTINST_RRI("ori", "$r10", "$r25", UI12, 0x42f0332098f938afUL, 0xd7916fe8d569567bUL, 568);
+   TESTINST_RRI("ori", "$r12", "$r17", UI12, 0xc507d4150a742b76UL, 0x2b9a102a5b5b15f7UL, 1798);
+   TESTINST_RRI("ori", "$r15", "$r15", UI12, 0xa54ad5ecc0e72adbUL, 0x37c18ad4ec6e678cUL, 1781);
+   TESTINST_RRI("ori", "$r5", "$r4", UI12, 0x1f388b2a2b18004dUL, 0xb5fa23fbb02eeedbUL, 682);
+   TESTINST_RRI("ori", "$r27", "$r24", UI12, 0x73b086f8a8b4d7b5UL, 0xd23e30ab1e45470aUL, 1931);
+   TESTINST_RRI("ori", "$r28", "$r6", UI12, 0x972967beac695928UL, 0x2c701d0bc28816c5UL, 3593);
+   TESTINST_RRI("ori", "$r27", "$r4", UI12, 0x54fecbbf0a06e5a6UL, 0xf0b6d846464a3331UL, 3679);
+   TESTINST_RRI("ori", "$r9", "$r16", UI12, 0x71f3cd001c729062UL, 0xc5720758095e4592UL, 905);
+   TESTINST_RRI("ori", "$r26", "$r7", UI12, 0xd7ce86800c3c0f4bUL, 0xc4a58f787cdf5bb2UL, 3473);
+
+   /* ---------------- xori rd, rj, ui12 ---------------- */
+   TESTINST_RRI("xori", "$r27", "$r31", UI12, 0xe6d49c2dc629fbc7UL, 0x91832665d1a898e2UL, 2690);
+   TESTINST_RRI("xori", "$r15", "$r5", UI12, 0xada49c0d48beffc5UL, 0xe3cf426f1be4766UL, 697);
+   TESTINST_RRI("xori", "$r9", "$r20", UI12, 0x174a71d6d3757e3eUL, 0x25ed4678037622beUL, 2268);
+   TESTINST_RRI("xori", "$r31", "$r15", UI12, 0x1fac1694b40fbf2eUL, 0x4fe4fb2e0b660ca2UL, 3817);
+   TESTINST_RRI("xori", "$r17", "$r14", UI12, 0x2dc443400df4e153UL, 0x1db25e602ef8ece5UL, 3929);
+   TESTINST_RRI("xori", "$r4", "$r28", UI12, 0x5fb5ad5a84e97835UL, 0xc52da11293641639UL, 2735);
+   TESTINST_RRI("xori", "$r5", "$r13", UI12, 0x5c5fc4ba45da005fUL, 0xe46f853b7d602b84UL, 1153);
+   TESTINST_RRI("xori", "$r30", "$r26", UI12, 0x1419915b6f92678bUL, 0xa984612f1266da94UL, 3867);
+   TESTINST_RRI("xori", "$r13", "$r13", UI12, 0xc2b8fd036ba6314bUL, 0x4cf49604f644713cUL, 3426);
+   TESTINST_RRI("xori", "$r25", "$r23", UI12, 0xde46e3673c9a75dcUL, 0xfa1177a89f08c81eUL, 2669);
+
+   /* ---------------- sll.w rd, rj, rk ---------------- */
+   TESTINST_RRR("sll.w", "$r13", "$r8", "$r12", 0x26131fa72f4b76f1UL, 0xf34f7108538078d0UL, 0x10bbd12a8e087501UL);
+   TESTINST_RRR("sll.w", "$r29", "$r8", "$r15", 0xb6f529da4017d0d9UL, 0x49fbfb11ef643171UL, 0x9d0425e747d11bdeUL);
+   TESTINST_RRR("sll.w", "$r30", "$r31", "$r12", 0xcfc5236f5c070644UL, 0xba8301a1087b3a96UL, 0xff7589561824e1beUL);
+   TESTINST_RRR("sll.w", "$r28", "$r10", "$r7", 0x37fa51674df87149UL, 0x39212605c5d0cf7dUL, 0x18a8e323326ce5aaUL);
+   TESTINST_RRR("sll.w", "$r8", "$r9", "$r14", 0x707a9e0ece8abe40UL, 0x94b7b20a80c16c7bUL, 0x6887c46efb4cc181UL);
+   TESTINST_RRR("sll.w", "$r8", "$r4", "$r24", 0xd718a01b03a53964UL, 0x8ebd8bfeec304e2aUL, 0x6b4a83a6838b5d1UL);
+   TESTINST_RRR("sll.w", "$r23", "$r31", "$r27", 0xf50cab824a06d30eUL, 0xa8ee12cbd8dec935UL, 0x118002b3f0cecbabUL);
+   TESTINST_RRR("sll.w", "$r8", "$r25", "$r26", 0x8163368243faadeeUL, 0x3a04f47bf19a4cc8UL, 0x6a58cd3a57b4eeb4UL);
+   TESTINST_RRR("sll.w", "$r25", "$r13", "$r12", 0x3d6831e1afab1b1aUL, 0x9ee672580cb39777UL, 0x9084acd2bc7404caUL);
+   TESTINST_RRR("sll.w", "$r20", "$r5", "$r29", 0x90f7ee3ff75817a6UL, 0xe4ae07989d6148d7UL, 0x3e208bfcf046fffdUL);
+
+   /* ---------------- srl.w rd, rj, rk ---------------- */
+   TESTINST_RRR("srl.w", "$r20", "$r29", "$r30", 0xff3f6b79b5e2b56dUL, 0x1195aa09fa92d26bUL, 0xa93a8fd11ad5ae99UL);
+   TESTINST_RRR("srl.w", "$r8", "$r15", "$r4", 0x5d2fb7cd04ecd00cUL, 0x47bf914b6eca2852UL, 0x1bc63138cc45a75cUL);
+   TESTINST_RRR("srl.w", "$r20", "$r12", "$r18", 0x61fa22abda7c7b02UL, 0x9341cf09aa2e106eUL, 0x2dea831e9e121355UL);
+   TESTINST_RRR("srl.w", "$r30", "$r20", "$r26", 0x43e0249584da52dbUL, 0x482a209e436cda53UL, 0xb323a7f463f80660UL);
+   TESTINST_RRR("srl.w", "$r31", "$r16", "$r28", 0x4b10d05d93bf7288UL, 0x6d0330e88122d7c1UL, 0xc531cf8c92d53d03UL);
+   TESTINST_RRR("srl.w", "$r31", "$r15", "$r31", 0xd4654233c7648c3aUL, 0x12e6fc2a04cbf809UL, 0xcfe1c1b558a94808UL);
+   TESTINST_RRR("srl.w", "$r10", "$r30", "$r19", 0x602dee9c45a3b99bUL, 0x3ce0a6ac2acf19faUL, 0xdb5fab4bc2f82e7aUL);
+   TESTINST_RRR("srl.w", "$r17", "$r9", "$r23", 0x45106f11d4a57641UL, 0x5354795b675edacUL, 0xc67578c28ed7b6c7UL);
+   TESTINST_RRR("srl.w", "$r25", "$r26", "$r29", 0x1dc3b8477fba650cUL, 0x814377a71768e75UL, 0x60276c0e316db833UL);
+   TESTINST_RRR("srl.w", "$r31", "$r7", "$r30", 0x360fc92a085c2e14UL, 0x1b44ec96def89449UL, 0x56d6c5d85a81ed1fUL);
+
+   /* ---------------- sra.w rd, rj, rk ---------------- */
+   TESTINST_RRR("sra.w", "$r10", "$r17", "$r19", 0x576f2bfc771641b8UL, 0xfb1fb20b98a54405UL, 0xb20e9dae5a212078UL);
+   TESTINST_RRR("sra.w", "$r12", "$r16", "$r31", 0xbfdbb9a90ccc08a0UL, 0xb5d3c7f3b1a800a6UL, 0x57c3ff79f3b4198bUL);
+   TESTINST_RRR("sra.w", "$r18", "$r16", "$r5", 0xadcb6c153538b6b1UL, 0x99e245813e90b5e9UL, 0x7adff58363d5ebd2UL);
+   TESTINST_RRR("sra.w", "$r17", "$r28", "$r25", 0x7faea6a29686caf9UL, 0x801d40ea40b19beeUL, 0xf5174f678600d3fUL);
+   TESTINST_RRR("sra.w", "$r8", "$r27", "$r13", 0x86e5534832150e05UL, 0x47bb53d1cdc3560fUL, 0x917e2b49633a0f44UL);
+   TESTINST_RRR("sra.w", "$r26", "$r18", "$r20", 0xbfb83a0d762c171aUL, 0xbf67ed78d934d37cUL, 0x9f377995293fcc6bUL);
+   TESTINST_RRR("sra.w", "$r5", "$r25", "$r19", 0x266703af59334b0fUL, 0x4ed92cdab9f641c9UL, 0x5da1d0b8846d1a3dUL);
+   TESTINST_RRR("sra.w", "$r19", "$r27", "$r24", 0x72557561b3b40007UL, 0xd5db278ea099b3b5UL, 0x50b4a888b898610fUL);
+   TESTINST_RRR("sra.w", "$r16", "$r10", "$r4", 0xb349f888f1809ba3UL, 0x23d60a1fc100d89eUL, 0xc2846cc882dbc8e2UL);
+   TESTINST_RRR("sra.w", "$r23", "$r10", "$r31", 0xd7bdeddd344bb5afUL, 0xa015a07c13ff2234UL, 0x7c0fe410ce063a85UL);
+
+   /* ---------------- sll.d rd, rj, rk ---------------- */
+   TESTINST_RRR("sll.d", "$r28", "$r17", "$r10", 0x167adf26efd66416UL, 0xb861ba6e0aadf304UL, 0xa19e21ba0f406c33UL);
+   TESTINST_RRR("sll.d", "$r18", "$r29", "$r13", 0x3e8ea4dc3a9d9b44UL, 0x28ccf5dfa9cdc3b2UL, 0x33ef837a5a476bdcUL);
+   TESTINST_RRR("sll.d", "$r23", "$r27", "$r29", 0x23e29c76deed70caUL, 0x9e2265d8422e78dUL, 0xe9cc62bfd8a7c913UL);
+   TESTINST_RRR("sll.d", "$r16", "$r17", "$r17", 0xf5e858c7445fceddUL, 0x6735e4cf2fcb78fbUL, 0x726dd10e13b62663UL);
+   TESTINST_RRR("sll.d", "$r17", "$r15", "$r29", 0xfc1dbfc0551f8813UL, 0xec45100b21a74025UL, 0x186d3b737cbfd39aUL);
+   TESTINST_RRR("sll.d", "$r19", "$r15", "$r9", 0xbb01afe39a1e17b6UL, 0x3e66dd1100acc44aUL, 0xa9c74257f6e39cdfUL);
+   TESTINST_RRR("sll.d", "$r23", "$r9", "$r31", 0x945b101751c38d12UL, 0x262d14baae546199UL, 0x7ccdd8a7840948dfUL);
+   TESTINST_RRR("sll.d", "$r5", "$r31", "$r28", 0xa88eaecc1405995bUL, 0xd96ed500aff4596bUL, 0x6994841a196c562eUL);
+   TESTINST_RRR("sll.d", "$r27", "$r10", "$r25", 0x1e9540fa8237a849UL, 0x9aad6101b2470a60UL, 0x90c95628696f752fUL);
+   TESTINST_RRR("sll.d", "$r4", "$r26", "$r18", 0xb4dc3cdeab2e8454UL, 0xd27a92db3b2906cUL, 0x2bc7647c40c0b375UL);
+
+   /* ---------------- srl.d rd, rj, rk ---------------- */
+   TESTINST_RRR("srl.d", "$r6", "$r27", "$r13", 0x66ebeca9a7fad574UL, 0xdc837ce646ea6b51UL, 0xa57259e1758c564bUL);
+   TESTINST_RRR("srl.d", "$r6", "$r20", "$r5", 0x91794316e6c5e65UL, 0xdc7c47d39d64a16UL, 0x35f029b9942e11c8UL);
+   TESTINST_RRR("srl.d", "$r15", "$r5", "$r4", 0xbc963842b3ebc906UL, 0x42ea773b0bd19807UL, 0xd05cd2c4b01ea630UL);
+   TESTINST_RRR("srl.d", "$r18", "$r25", "$r28", 0x30d908baaa31230eUL, 0x779272ae228746a5UL, 0xf7b665809a3f303bUL);
+   TESTINST_RRR("srl.d", "$r5", "$r28", "$r27", 0x1f1d414f1d0f1feUL, 0x647277d3759d74bfUL, 0xa5c5fce39b4a1810UL);
+   TESTINST_RRR("srl.d", "$r24", "$r9", "$r26", 0x5fa44419162fc2c8UL, 0x9d2a589e6f6b3440UL, 0x810a615115238d8dUL);
+   TESTINST_RRR("srl.d", "$r31", "$r23", "$r30", 0xfa1a7ad64758b758UL, 0xe3d69d99e87b4297UL, 0x87fd8dc0a78e86bbUL);
+   TESTINST_RRR("srl.d", "$r26", "$r10", "$r24", 0x540888639a787231UL, 0x168791cefeb1660aUL, 0xd02b158115db9cdfUL);
+   TESTINST_RRR("srl.d", "$r23", "$r15", "$r12", 0xff3e950565409999UL, 0xe15a01fa0e34ea3bUL, 0x237aba34fe552f8eUL);
+   TESTINST_RRR("srl.d", "$r8", "$r16", "$r4", 0x825bafd36cc0d32eUL, 0x321677304d1b1406UL, 0xca68c6c83dfa5837UL);
+
+   /* ---------------- sra.d rd, rj, rk ---------------- */
+   TESTINST_RRR("sra.d", "$r23", "$r19", "$r16", 0x4cab63abd8f64774UL, 0x2c007c3ac68d7c80UL, 0xd8f4ac963a8b2c01UL);
+   TESTINST_RRR("sra.d", "$r18", "$r30", "$r25", 0x531de73fca30361aUL, 0x2857ba730cd281ffUL, 0xacab0fe400e4c113UL);
+   TESTINST_RRR("sra.d", "$r31", "$r13", "$r10", 0x3184416bc93a5e26UL, 0xad5864bc4022de96UL, 0xf7007bdbf1f728abUL);
+   TESTINST_RRR("sra.d", "$r6", "$r25", "$r23", 0x9184d2df291f3402UL, 0x7c0b117dcad80c03UL, 0x35b29b0dde1a94bdUL);
+   TESTINST_RRR("sra.d", "$r16", "$r6", "$r29", 0x2849e543d35dff5fUL, 0x9f13f36a632a3fUL, 0xf31f881e12072fe2UL);
+   TESTINST_RRR("sra.d", "$r7", "$r29", "$r10", 0x25c763f8366139ddUL, 0xfd77fd6e69e371c6UL, 0xcaa2ec6ad4f3b996UL);
+   TESTINST_RRR("sra.d", "$r24", "$r25", "$r26", 0x472602300b4f04c9UL, 0x54ceea832a5677e9UL, 0x5f63e9d9d6eb4af0UL);
+   TESTINST_RRR("sra.d", "$r23", "$r4", "$r27", 0xe8b449325a0ed51eUL, 0xd96928476f8441a5UL, 0x7e1ae8fd9c849dceUL);
+   TESTINST_RRR("sra.d", "$r15", "$r9", "$r12", 0x71601a1a2b155f51UL, 0xbcbb1d162563240UL, 0x5a906ad2f4abb4c7UL);
+   TESTINST_RRR("sra.d", "$r16", "$r29", "$r23", 0x1686886f27d397fbUL, 0x851328b2655e5689UL, 0x1634457590cd4033UL);
+
+   /* ---------------- rotr.w rd, rj, rk ---------------- */
+   TESTINST_RRR("rotr.w", "$r8", "$r5", "$r18", 0xc4394aae4c13908bUL, 0xa0c5728d1211b595UL, 0x3d562746b3943f3bUL);
+   TESTINST_RRR("rotr.w", "$r19", "$r18", "$r10", 0x284b501639de116bUL, 0x4248ad6cc0107902UL, 0xb41907b756bf8004UL);
+   TESTINST_RRR("rotr.w", "$r29", "$r8", "$r4", 0x2656b50c7d689f19UL, 0x7b5d21fdce9bcb73UL, 0x5b212fbe9e6b8522UL);
+   TESTINST_RRR("rotr.w", "$r25", "$r6", "$r30", 0x4c79ed7a1695fc25UL, 0x6bac1698a978f50fUL, 0xf1d58570dfb10203UL);
+   TESTINST_RRR("rotr.w", "$r14", "$r18", "$r6", 0xe894476b4ebbff23UL, 0x1398b65ae1e91c98UL, 0xebb6c3f5f689d2d8UL);
+   TESTINST_RRR("rotr.w", "$r19", "$r29", "$r26", 0x2595423cc93ecd7cUL, 0x6c462c2d29d8f908UL, 0x19142efd8e0b48b8UL);
+   TESTINST_RRR("rotr.w", "$r23", "$r10", "$r25", 0x68b4d913b267a3a2UL, 0x69afb673907e4506UL, 0xbd09ff2ed890862dUL);
+   TESTINST_RRR("rotr.w", "$r9", "$r14", "$r27", 0x17a45b8cbdebd6efUL, 0x33effef864846356UL, 0x3f52e437f2d5da62UL);
+   TESTINST_RRR("rotr.w", "$r5", "$r12", "$r23", 0x2d191b1a9707cf26UL, 0x86fa75433dac3d39UL, 0x21136a02424e5da4UL);
+   TESTINST_RRR("rotr.w", "$r29", "$r18", "$r27", 0x7d989f74f9944f8dUL, 0x50fe5829a153e6UL, 0x926776f9140b06fcUL);
+
+   /* ---------------- rotr.d rd, rj, rk ---------------- */
+   TESTINST_RRR("rotr.d", "$r29", "$r19", "$r13", 0x1e02c0c28ec3f9b1UL, 0xf2e79e6ff240b188UL, 0x60f500663eddf444UL);
+   TESTINST_RRR("rotr.d", "$r30", "$r4", "$r14", 0x97f6be8229e2e822UL, 0xf79aaeb2c03a2113UL, 0xbbdb2cb642605ed7UL);
+   TESTINST_RRR("rotr.d", "$r6", "$r19", "$r7", 0x1611806010ce99d8UL, 0xcb64270e0fc5b4c7UL, 0xeda6972c46af03cUL);
+   TESTINST_RRR("rotr.d", "$r4", "$r15", "$r30", 0xe63084e97bd0efb3UL, 0x6e1aa322e38e9b66UL, 0xa7df0f1d92106e2dUL);
+   TESTINST_RRR("rotr.d", "$r16", "$r27", "$r10", 0x1ff92fbb0f10ff9aUL, 0x15c2eb91c9ae124UL, 0x8b4c97ee7f9bc2faUL);
+   TESTINST_RRR("rotr.d", "$r28", "$r7", "$r25", 0xbd766a63bbead21cUL, 0xd97b509610db5e7UL, 0x3151203010315af5UL);
+   TESTINST_RRR("rotr.d", "$r9", "$r20", "$r23", 0x8a2bb5eacea50d68UL, 0x947ec1930151adb9UL, 0xc2f39e045d278b7bUL);
+   TESTINST_RRR("rotr.d", "$r25", "$r13", "$r23", 0xcaddb8ea7bd492c7UL, 0x416a1b790dbf45cbUL, 0x44c59965e1c6af25UL);
+   TESTINST_RRR("rotr.d", "$r14", "$r7", "$r31", 0x8ca18b58047c8b5aUL, 0x93a6cdc3585b5446UL, 0x70cd84ec07e33cefUL);
+   TESTINST_RRR("rotr.d", "$r14", "$r9", "$r4", 0x48bd5c133004f490UL, 0xad095be0915fe20bUL, 0xc1fff6ff603a47b3UL);
+
+   /* ---------------- slli.w rd, rj, ui5 ---------------- */
+   TESTINST_RRI("slli.w", "$r18", "$r8", UI5, 0xe7f8823a2989c395UL, 0xf0ccc85519ad1e0aUL, 10);
+   TESTINST_RRI("slli.w", "$r27", "$r17", UI5, 0x2e66b550a3bb071dUL, 0x20943aa3eaa4024eUL, 30);
+   TESTINST_RRI("slli.w", "$r27", "$r23", UI5, 0x70daa2bee8209243UL, 0x2e9160afd2e28a64UL, 31);
+   TESTINST_RRI("slli.w", "$r10", "$r13", UI5, 0x701c424632b5dc29UL, 0x591054db6afe1725UL, 12);
+   TESTINST_RRI("slli.w", "$r7", "$r15", UI5, 0xdd1d7fe3ae579499UL, 0x2e077f689088c0c7UL, 19);
+   TESTINST_RRI("slli.w", "$r6", "$r8", UI5, 0xff732113ddaab79bUL, 0x9cacf8e6d9e37f97UL, 12);
+   TESTINST_RRI("slli.w", "$r5", "$r19", UI5, 0xcef75ddd2adc5853UL, 0xcc24ed9167fd06eaUL, 22);
+   TESTINST_RRI("slli.w", "$r17", "$r8", UI5, 0x3c8788fed3e8a049UL, 0xccf9b2d2c2e80251UL, 7);
+   TESTINST_RRI("slli.w", "$r14", "$r29", UI5, 0xe1b0b077db4f08eUL, 0x76aea4b9ae43cdfbUL, 10);
+   TESTINST_RRI("slli.w", "$r23", "$r30", UI5, 0x13d8514aeb0dc12bUL, 0x9c8352804e7e8ccbUL, 26);
+
+   /* ---------------- slli.d rd, rj, ui6 ---------------- */
+   TESTINST_RRI("slli.d", "$r27", "$r28", UI6, 0x689a2c4141835926UL, 0x1b6ff38e611d1e4dUL, 5);
+   TESTINST_RRI("slli.d", "$r5", "$r20", UI6, 0xff3391c2323defa6UL, 0xe99a134a0c1a2574UL, 1);
+   TESTINST_RRI("slli.d", "$r27", "$r7", UI6, 0xc32d8fb319ba47e6UL, 0xc6530e0e601d3631UL, 61);
+   TESTINST_RRI("slli.d", "$r5", "$r26", UI6, 0x979553ff112cdf52UL, 0x931e420364fdcacaUL, 45);
+   TESTINST_RRI("slli.d", "$r27", "$r5", UI6, 0xa7f70b048a4087b0UL, 0xc1b829210c3cd5a9UL, 60);
+   TESTINST_RRI("slli.d", "$r23", "$r10", UI6, 0xcd547af78ac66ca7UL, 0xa2c0802de6c82645UL, 59);
+   TESTINST_RRI("slli.d", "$r13", "$r30", UI6, 0x410b8f25e1234eeUL, 0xdbaacfe884cda24dUL, 56);
+   TESTINST_RRI("slli.d", "$r16", "$r4", UI6, 0x44a2ff35045ec37cUL, 0xee2240010629a8eeUL, 20);
+   TESTINST_RRI("slli.d", "$r19", "$r20", UI6, 0x8617d88408d75cacUL, 0xba15483820d66ae7UL, 25);
+   TESTINST_RRI("slli.d", "$r24", "$r27", UI6, 0x669e0e9b99d5b604UL, 0xf5d1ffc374e53c7dUL, 13);
+
+   /* ---------------- srli.w rd, rj, ui5 ---------------- */
+   TESTINST_RRI("srli.w", "$r20", "$r16", UI5, 0x7f5310ac5eaa9924UL, 0xea8b69613d183eeUL, 10);
+   TESTINST_RRI("srli.w", "$r13", "$r15", UI5, 0x5f4d9313f9224389UL, 0xd544272206f4e814UL, 0);
+   TESTINST_RRI("srli.w", "$r17", "$r18", UI5, 0xd9b2c942f996cc8aUL, 0x704cd1d89de5c2b4UL, 7);
+   TESTINST_RRI("srli.w", "$r27", "$r28", UI5, 0xa3eef8efc97e0d4fUL, 0x8c449e6236daa7a2UL, 18);
+   TESTINST_RRI("srli.w", "$r9", "$r10", UI5, 0x6c044927152e5fc9UL, 0x592a1607944e0109UL, 29);
+   TESTINST_RRI("srli.w", "$r8", "$r24", UI5, 0xcaa01b37d49db675UL, 0x5e35848bbc958164UL, 31);
+   TESTINST_RRI("srli.w", "$r6", "$r16", UI5, 0xe2fbe1accb343769UL, 0x85f5e17c7d785222UL, 18);
+   TESTINST_RRI("srli.w", "$r18", "$r25", UI5, 0x4653c07e0627825fUL, 0x44fffa524ffd0417UL, 31);
+   TESTINST_RRI("srli.w", "$r5", "$r26", UI5, 0x817ebd7154c8ed46UL, 0xc7399a9899fc5958UL, 22);
+   TESTINST_RRI("srli.w", "$r27", "$r4", UI5, 0x3e4b17b34f2b08d0UL, 0x5bedb97aefd697f4UL, 27);
+
+   /* ---------------- srli.d rd, rj, ui6 ---------------- */
+   TESTINST_RRI("srli.d", "$r31", "$r9", UI6, 0x8fc21da189af52edUL, 0x235bf33e3e612a15UL, 51);
+   TESTINST_RRI("srli.d", "$r26", "$r7", UI6, 0xcd1eaac4df2531ddUL, 0xe87216fce9c75788UL, 36);
+   TESTINST_RRI("srli.d", "$r6", "$r31", UI6, 0xc0282beeb7dc6618UL, 0x8b58604d6be3e8e0UL, 29);
+   TESTINST_RRI("srli.d", "$r20", "$r6", UI6, 0x1546fdd9fc133e39UL, 0x74067840bb05a992UL, 18);
+   TESTINST_RRI("srli.d", "$r28", "$r20", UI6, 0xaa1f88b09e13e4c6UL, 0x6e153faa5221e893UL, 28);
+   TESTINST_RRI("srli.d", "$r26", "$r4", UI6, 0x2ba2151c80dbea7aUL, 0x21246f3c7063edf9UL, 55);
+   TESTINST_RRI("srli.d", "$r28", "$r29", UI6, 0xcd72eff1b5aa0877UL, 0x5d9488c1d61a1544UL, 34);
+   TESTINST_RRI("srli.d", "$r13", "$r7", UI6, 0x5953b78fbd8109a9UL, 0x862731652b653859UL, 62);
+   TESTINST_RRI("srli.d", "$r29", "$r18", UI6, 0xab821449d149a976UL, 0xcb73553146cc4bdcUL, 25);
+   TESTINST_RRI("srli.d", "$r28", "$r7", UI6, 0x31272fa88123357dUL, 0xe9359f7a9f92ec5UL, 2);
+
+   /* ---------------- srai.w rd, rj, ui5 ---------------- */
+   TESTINST_RRI("srai.w", "$r26", "$r23", UI5, 0xe73a55c2b7005c01UL, 0xfcd659254f4b3fe7UL, 2);
+   TESTINST_RRI("srai.w", "$r31", "$r10", UI5, 0x2e0c4330fae0890aUL, 0xa76ca364a204c82bUL, 0);
+   TESTINST_RRI("srai.w", "$r31", "$r8", UI5, 0x64790bb6e8674f68UL, 0xce5594f964c4a026UL, 0);
+   TESTINST_RRI("srai.w", "$r15", "$r31", UI5, 0xccfb53c708026acdUL, 0xce185873627515b5UL, 27);
+   TESTINST_RRI("srai.w", "$r16", "$r28", UI5, 0x994c4d22e90185a2UL, 0x49995d51019e1050UL, 1);
+   TESTINST_RRI("srai.w", "$r13", "$r16", UI5, 0x484408b57b3ab89UL, 0x437401347e23c399UL, 16);
+   TESTINST_RRI("srai.w", "$r4", "$r9", UI5, 0xd1d936105b7cca3UL, 0xd49c3c65e292b942UL, 7);
+   TESTINST_RRI("srai.w", "$r24", "$r15", UI5, 0xaa9377005232ec93UL, 0xde29d0172b40f03dUL, 10);
+   TESTINST_RRI("srai.w", "$r19", "$r14", UI5, 0xa49c65a4c2cde36dUL, 0x782e0d4b8a7a28d0UL, 24);
+   TESTINST_RRI("srai.w", "$r24", "$r27", UI5, 0x404f816ff696bbc8UL, 0x1b6900e15f252315UL, 24);
+
+   /* ---------------- srai.d rd, rj, ui6 ---------------- */
+   TESTINST_RRI("srai.d", "$r24", "$r4", UI6, 0x96250384fede78c7UL, 0x6c501d9ec5e9e731UL, 22);
+   TESTINST_RRI("srai.d", "$r30", "$r19", UI6, 0xcfc52d7caaf7bf47UL, 0x82499a30d50f8b83UL, 17);
+   TESTINST_RRI("srai.d", "$r12", "$r12", UI6, 0x628a1a46bbe30c16UL, 0xaba392c50d63ea53UL, 5);
+   TESTINST_RRI("srai.d", "$r24", "$r9", UI6, 0x21c1bb01f0253d8UL, 0xb35e31d92548a2feUL, 2);
+   TESTINST_RRI("srai.d", "$r28", "$r7", UI6, 0x2a5ac0a983332ec3UL, 0x2297ae499a473c6dUL, 62);
+   TESTINST_RRI("srai.d", "$r8", "$r17", UI6, 0xa27cf36651750e09UL, 0x1984e046b042d0cfUL, 31);
+   TESTINST_RRI("srai.d", "$r25", "$r16", UI6, 0x7df3822fb20b8dedUL, 0xb4e464563029fac8UL, 37);
+   TESTINST_RRI("srai.d", "$r14", "$r5", UI6, 0xe8c1939c13a2e6caUL, 0x6a22077c63497a9aUL, 57);
+   TESTINST_RRI("srai.d", "$r25", "$r15", UI6, 0xf2df68e25cccf72eUL, 0xe0af648201f919fcUL, 10);
+   TESTINST_RRI("srai.d", "$r6", "$r15", UI6, 0xa24591b35142aa9cUL, 0x12b20ac67de77b8dUL, 49);
+
+   /* ---------------- rotri.w rd, rj, ui5 ---------------- */
+   TESTINST_RRI("rotri.w", "$r18", "$r6", UI5, 0xf0c65b137926ba00UL, 0x95e0f5f057a212c5UL, 20);
+   TESTINST_RRI("rotri.w", "$r9", "$r16", UI5, 0xe36356471d2a7e18UL, 0xb8af3071021bd869UL, 27);
+   TESTINST_RRI("rotri.w", "$r5", "$r31", UI5, 0x5992fc9cfce2ebe9UL, 0x6c427c821603d01aUL, 1);
+   TESTINST_RRI("rotri.w", "$r27", "$r13", UI5, 0x239c57dca2ab060UL, 0xed54e28825b25471UL, 23);
+   TESTINST_RRI("rotri.w", "$r18", "$r18", UI5, 0xb84df2305a710936UL, 0x8aae5248c6d4973cUL, 7);
+   TESTINST_RRI("rotri.w", "$r4", "$r27", UI5, 0x730e1701570ac9fcUL, 0xd55b9d54232536e7UL, 29);
+   TESTINST_RRI("rotri.w", "$r19", "$r18", UI5, 0x36dbceffa501d8dcUL, 0x8415238fa1dd314fUL, 0);
+   TESTINST_RRI("rotri.w", "$r13", "$r24", UI5, 0xc1ac428ddf5193UL, 0x3b588028fcfbb0a8UL, 21);
+   TESTINST_RRI("rotri.w", "$r14", "$r25", UI5, 0x733414543ca8145eUL, 0xded24831de35be08UL, 29);
+   TESTINST_RRI("rotri.w", "$r27", "$r5", UI5, 0x60afaebb36d22ba0UL, 0xfd31a16f03582b5UL, 8);
+
+   /* ---------------- rotri.d rd, rj, ui6 ---------------- */
+   TESTINST_RRI("rotri.d", "$r20", "$r7", UI6, 0xe112a6d47c0444c1UL, 0xbd9bbb91bdc381c5UL, 53);
+   TESTINST_RRI("rotri.d", "$r27", "$r16", UI6, 0xf254a827c1ef7351UL, 0x3de084650f757cebUL, 62);
+   TESTINST_RRI("rotri.d", "$r30", "$r17", UI6, 0x31c36a8c83999eb2UL, 0x107098a9863e85d5UL, 10);
+   TESTINST_RRI("rotri.d", "$r29", "$r8", UI6, 0xf2e7a25c121af3c3UL, 0xb177c110c3dd3225UL, 46);
+   TESTINST_RRI("rotri.d", "$r4", "$r26", UI6, 0xdd94ff60f2e1abffUL, 0xb76d3e4a0af02e4dUL, 45);
+   TESTINST_RRI("rotri.d", "$r10", "$r9", UI6, 0x6064d48d901beca7UL, 0xea20b33360134ab2UL, 42);
+   TESTINST_RRI("rotri.d", "$r4", "$r26", UI6, 0x27f1e63c8f7f71cfUL, 0xf4c5c8a69f37a1bdUL, 27);
+   TESTINST_RRI("rotri.d", "$r9", "$r16", UI6, 0x7d4cb07a3ab72944UL, 0xd5ee210421c6080eUL, 20);
+   TESTINST_RRI("rotri.d", "$r24", "$r26", UI6, 0x1ce66a79f3e45e6fUL, 0x6e1767144ffa6e2dUL, 4);
+   TESTINST_RRI("rotri.d", "$r4", "$r18", UI6, 0x4173f8102b03399UL, 0xde7066568917d899UL, 46);
+
+   /* ---------------- ext.w.h rd, rj ---------------- */
+   TESTINST_RR("ext.w.h", "$r17", "$r14", 0x58af862c6fc4208dUL, 0x6235b0cfe4eed6edUL);
+   TESTINST_RR("ext.w.h", "$r31", "$r20", 0x425af3dcd83fa9fdUL, 0x6e59403101a538f1UL);
+   TESTINST_RR("ext.w.h", "$r18", "$r27", 0xcb140226bf788367UL, 0x58a5430ee4e1616eUL);
+   TESTINST_RR("ext.w.h", "$r15", "$r10", 0xd3debaf05f7d909fUL, 0x6f7083340247fb12UL);
+   TESTINST_RR("ext.w.h", "$r12", "$r15", 0x5dc6f7191af80bcfUL, 0xb1f1c8f4b11c03d9UL);
+   TESTINST_RR("ext.w.h", "$r7", "$r15", 0x5ffe304a5c9dc9d2UL, 0x102fb4fa33193103UL);
+   TESTINST_RR("ext.w.h", "$r16", "$r16", 0x533616e37505799fUL, 0xf988c7255086f4f5UL);
+   TESTINST_RR("ext.w.h", "$r13", "$r25", 0x805a406557ed3facUL, 0xdc6ce0f2993b219bUL);
+   TESTINST_RR("ext.w.h", "$r19", "$r20", 0xcc49c20125c4755dUL, 0xde7b765222a9703aUL);
+   TESTINST_RR("ext.w.h", "$r18", "$r7", 0xe0dd9155cbe168c6UL, 0xc1063421eae07663UL);
+
+   /* ---------------- ext.w.b rd, rj ---------------- */
+   TESTINST_RR("ext.w.b", "$r16", "$r23", 0x21666e814555aa02UL, 0x926b8d68b5c40592UL);
+   TESTINST_RR("ext.w.b", "$r8", "$r20", 0xf68ae0a0ac497dedUL, 0xbfb5d489716d0c5UL);
+   TESTINST_RR("ext.w.b", "$r24", "$r15", 0xbc84e54c82fd6e51UL, 0x7d814b11e5eb07f6UL);
+   TESTINST_RR("ext.w.b", "$r31", "$r17", 0x14e575a8dda1f0d3UL, 0x6a111e663a52244cUL);
+   TESTINST_RR("ext.w.b", "$r16", "$r8", 0x911acc218fcf640bUL, 0xac1405ad05b23e43UL);
+   TESTINST_RR("ext.w.b", "$r28", "$r8", 0x77fb13eaa8995607UL, 0x5c97a81f12da7d3UL);
+   TESTINST_RR("ext.w.b", "$r9", "$r23", 0xb88cfdb98683e15eUL, 0x74893b34973e16cbUL);
+   TESTINST_RR("ext.w.b", "$r31", "$r4", 0xc7168cb4f7d079e4UL, 0xf4fc215bc2c5273eUL);
+   TESTINST_RR("ext.w.b", "$r4", "$r18", 0xe2e5dca4727b373UL, 0xa1b97136f32e452bUL);
+   TESTINST_RR("ext.w.b", "$r8", "$r29", 0x625eb5236f483daaUL, 0x3ceca34ee347e7c8UL);
+
+   /* ---------------- clo.w rd, rj ---------------- */
+   TESTINST_RR("clo.w", "$r4", "$r13", 0xbcca747f77aca28UL, 0x8df71972c1a17096UL);
+   TESTINST_RR("clo.w", "$r27", "$r5", 0x98a9e6d99d8e84cbUL, 0xdc59d3c8fc1540e4UL);
+   TESTINST_RR("clo.w", "$r9", "$r14", 0xe8e78b162c95ed66UL, 0xdfad6854bbf442e6UL);
+   TESTINST_RR("clo.w", "$r13", "$r26", 0xa3db2cf80f9112cdUL, 0x7676463dd6f13f80UL);
+   TESTINST_RR("clo.w", "$r7", "$r16", 0xb5213ab31b574031UL, 0x478c19ebdeaa74c0UL);
+   TESTINST_RR("clo.w", "$r13", "$r12", 0xd68d9661284fb9d7UL, 0x702bf24fddd8bfe0UL);
+   TESTINST_RR("clo.w", "$r18", "$r20", 0x510cd4002aff4c6cUL, 0x4fc898e8b83669eeUL);
+   TESTINST_RR("clo.w", "$r5", "$r9", 0x53c0de96f709208dUL, 0xe56d87b898438b5UL);
+   TESTINST_RR("clo.w", "$r20", "$r5", 0x96187854fcce4fd1UL, 0xf1248bea6ed8be30UL);
+   TESTINST_RR("clo.w", "$r20", "$r31", 0xb1abb4795d411683UL, 0x1025f914a9225e6UL);
+
+   /* ---------------- clz.w rd, rj ---------------- */
+   TESTINST_RR("clz.w", "$r19", "$r8", 0x374348642747a8dcUL, 0xd8ec1d547d95ada5UL);
+   TESTINST_RR("clz.w", "$r26", "$r4", 0x741ab4d14b9ee1f8UL, 0x99e2ef840817cfffUL);
+   TESTINST_RR("clz.w", "$r17", "$r4", 0x45c9ce7217f501b3UL, 0xa387a194cd03bcf1UL);
+   TESTINST_RR("clz.w", "$r13", "$r26", 0x69707656f354d758UL, 0xd4a8f8ab02b876b0UL);
+   TESTINST_RR("clz.w", "$r25", "$r13", 0x103ce6ee41e094c3UL, 0xd7a85bf4006e655aUL);
+   TESTINST_RR("clz.w", "$r5", "$r13", 0x3910578929e7cd4aUL, 0x93c87b02b7b1b603UL);
+   TESTINST_RR("clz.w", "$r18", "$r29", 0x10639f8979feefe5UL, 0x9d8b4b8f8493f844UL);
+   TESTINST_RR("clz.w", "$r25", "$r16", 0x7b35b3e995b3b44dUL, 0xad953d0ae0b3e870UL);
+   TESTINST_RR("clz.w", "$r6", "$r25", 0xda6cbd19f10ef86fUL, 0x1d6665db1162cfb4UL);
+   TESTINST_RR("clz.w", "$r5", "$r12", 0x8a6f4d6ec8d7c00dUL, 0x19b40cb8dd8d1679UL);
+
+   /* ---------------- cto.w rd, rj ---------------- */
+   TESTINST_RR("cto.w", "$r7", "$r15", 0x7285e9c364562d11UL, 0x963655c7f58de520UL);
+   TESTINST_RR("cto.w", "$r4", "$r15", 0x105dceebc6d7e641UL, 0xfc01c17baaca9c46UL);
+   TESTINST_RR("cto.w", "$r31", "$r28", 0xdeff9742b93f0591UL, 0x2cf98074b0151f33UL);
+   TESTINST_RR("cto.w", "$r13", "$r8", 0xeee665743cd218ffUL, 0xbdd700b2535aa3b7UL);
+   TESTINST_RR("cto.w", "$r23", "$r13", 0x1cc22cfd7c0c869cUL, 0x5b848b64decbee8fUL);
+   TESTINST_RR("cto.w", "$r12", "$r18", 0x5c32b3db803e5988UL, 0x2d5d1ebf93b79dd0UL);
+   TESTINST_RR("cto.w", "$r17", "$r9", 0xc11d806786501f0eUL, 0xd175fe2ca41bda38UL);
+   TESTINST_RR("cto.w", "$r24", "$r16", 0x504f9b43af62e2adUL, 0xfce545d98e2361daUL);
+   TESTINST_RR("cto.w", "$r24", "$r8", 0xc13ac5668538f5a4UL, 0x3096912e575d64dbUL);
+   TESTINST_RR("cto.w", "$r27", "$r17", 0xd27f68629dd8d4fbUL, 0x15ac43632e175a8bUL);
+
+   /* ---------------- ctz.w rd, rj ---------------- */
+   TESTINST_RR("ctz.w", "$r8", "$r12", 0xfc9bd3736a3c08bdUL, 0xaebba33c2e268daaUL);
+   TESTINST_RR("ctz.w", "$r5", "$r27", 0x5dc8af7bac7db01aUL, 0xabce2f0e113597aaUL);
+   TESTINST_RR("ctz.w", "$r18", "$r6", 0xe4ac5b59d8442dfeUL, 0x935d1b694e96bd04UL);
+   TESTINST_RR("ctz.w", "$r9", "$r15", 0x9b760f465efbb52eUL, 0x834c9974dba65d99UL);
+   TESTINST_RR("ctz.w", "$r13", "$r7", 0x95b5748f5f8bfb38UL, 0x75dd7a9890cdf2d9UL);
+   TESTINST_RR("ctz.w", "$r29", "$r17", 0xa25119fd892d1b20UL, 0x38c12e795dc52acfUL);
+   TESTINST_RR("ctz.w", "$r15", "$r12", 0x95c2ce0f0446807cUL, 0x623a5915ac8164b2UL);
+   TESTINST_RR("ctz.w", "$r6", "$r17", 0xd9034892a300dca8UL, 0x5911fea4e6ce1df3UL);
+   TESTINST_RR("ctz.w", "$r10", "$r25", 0xda1e0d0eb34884abUL, 0x8d70d49a10ba8968UL);
+   TESTINST_RR("ctz.w", "$r14", "$r13", 0x207d275c076e5247UL, 0xd243debc9b557922UL);
+
+   /* ---------------- clo.d rd, rj ---------------- */
+   TESTINST_RR("clo.d", "$r7", "$r16", 0x9432ccd773e86812UL, 0x9f921ea959c97c2bUL);
+   TESTINST_RR("clo.d", "$r7", "$r12", 0xaf19ef0b422b09bfUL, 0x8773ec5c72444fe2UL);
+   TESTINST_RR("clo.d", "$r5", "$r10", 0xa2912bc0ca36fa58UL, 0x2c93a7506a8979b7UL);
+   TESTINST_RR("clo.d", "$r7", "$r28", 0x69dd3f71121c7380UL, 0x1784b7c2c7558b4aUL);
+   TESTINST_RR("clo.d", "$r15", "$r9", 0x95b40b42f113ceccUL, 0xf0cdb7b9c17bb9e1UL);
+   TESTINST_RR("clo.d", "$r9", "$r27", 0x1961ee1499945d08UL, 0x23c7a2252c1cbc78UL);
+   TESTINST_RR("clo.d", "$r30", "$r19", 0xda0aa8b04f719a51UL, 0x8f93c7a1b3cc9f12UL);
+   TESTINST_RR("clo.d", "$r26", "$r20", 0xdd4f62bfe1237a28UL, 0xd61c7bfe05165d04UL);
+   TESTINST_RR("clo.d", "$r26", "$r6", 0x44a1378e22d6ec81UL, 0x1b21543ee9abd103UL);
+   TESTINST_RR("clo.d", "$r24", "$r16", 0x51efcf6ef8eb9917UL, 0x602cbdf020ee6da8UL);
+
+   /* ---------------- clz.d rd, rj ---------------- */
+   TESTINST_RR("clz.d", "$r27", "$r7", 0x91df318f7b476077UL, 0x6ca0b9cf9bb84c4aUL);
+   TESTINST_RR("clz.d", "$r19", "$r30", 0x435d7fb412d9c12cUL, 0xc926e58bdb46104eUL);
+   TESTINST_RR("clz.d", "$r12", "$r30", 0x906b06441b2ef62bUL, 0x4b9b91966077ef0UL);
+   TESTINST_RR("clz.d", "$r28", "$r6", 0x28bb3e3324f33e14UL, 0x7628cd8752be6223UL);
+   TESTINST_RR("clz.d", "$r14", "$r15", 0xb7a5ae04bf2e60c0UL, 0x41a328a79afda305UL);
+   TESTINST_RR("clz.d", "$r4", "$r23", 0x5fd8327a265b1a3bUL, 0x66b92d8b5b842d4aUL);
+   TESTINST_RR("clz.d", "$r18", "$r29", 0x73df6808e38c72adUL, 0x6b91b11261dd26b6UL);
+   TESTINST_RR("clz.d", "$r13", "$r8", 0xd8d2dbd71d1783adUL, 0xdc50b7586ccab6a1UL);
+   TESTINST_RR("clz.d", "$r17", "$r10", 0xee6f842bb7686b8dUL, 0xdf52e003cd95f02fUL);
+   TESTINST_RR("clz.d", "$r13", "$r8", 0x91e717aef96cc046UL, 0x5dd0743ed560ba78UL);
+
+   /* ---------------- cto.d rd, rj ---------------- */
+   TESTINST_RR("cto.d", "$r31", "$r5", 0xf361d5d1fb232769UL, 0x1530b67240d804cfUL);
+   TESTINST_RR("cto.d", "$r5", "$r26", 0xbedb393d17f69d40UL, 0xcef56269ef7aecdaUL);
+   TESTINST_RR("cto.d", "$r5", "$r31", 0xadd75db878cdbf84UL, 0x8e08acc65c97f0b2UL);
+   TESTINST_RR("cto.d", "$r31", "$r31", 0x6a8a89827e4929f9UL, 0x7df0f59d97924bb3UL);
+   TESTINST_RR("cto.d", "$r14", "$r30", 0xefb0874ef3600b6dUL, 0x97a4b45ab971a548UL);
+   TESTINST_RR("cto.d", "$r5", "$r17", 0x144271fb49c8d2d8UL, 0x787e6dbb4fec4d21UL);
+   TESTINST_RR("cto.d", "$r28", "$r20", 0xd6d0953d2a12c998UL, 0xafd578caad0dfa09UL);
+   TESTINST_RR("cto.d", "$r16", "$r18", 0xde650be54a7990cUL, 0x3ea8f45e10441829UL);
+   TESTINST_RR("cto.d", "$r15", "$r16", 0xbbd328743f49a86UL, 0x5cafc638b6b509beUL);
+   TESTINST_RR("cto.d", "$r6", "$r20", 0x598ee27859cf8d0eUL, 0x4bce530e537ad762UL);
+
+   /* ---------------- ctz.d rd, rj ---------------- */
+   TESTINST_RR("ctz.d", "$r14", "$r28", 0xf2e4d886a8fd3fe3UL, 0xdafbabdfefac692UL);
+   TESTINST_RR("ctz.d", "$r6", "$r27", 0xe005a6a20d44fbcaUL, 0xe000ac4f4cfb2ce2UL);
+   TESTINST_RR("ctz.d", "$r15", "$r26", 0x871c2ccd50ec0784UL, 0xa82b0d96dd72f11cUL);
+   TESTINST_RR("ctz.d", "$r17", "$r20", 0xebe7d9f4ec5055d5UL, 0x65575957936d1d6eUL);
+   TESTINST_RR("ctz.d", "$r19", "$r8", 0x394effa243e5f14cUL, 0xf6852349a7b00561UL);
+   TESTINST_RR("ctz.d", "$r5", "$r9", 0x3c67392fc408e9dbUL, 0xeff4bf8e886d7cc3UL);
+   TESTINST_RR("ctz.d", "$r31", "$r15", 0xbf5435775bd0435bUL, 0x19760246c8d1d680UL);
+   TESTINST_RR("ctz.d", "$r9", "$r5", 0xccde230362ce06aUL, 0x7590c6e73077c2bcUL);
+   TESTINST_RR("ctz.d", "$r28", "$r25", 0x2518777b06d608a0UL, 0xb87647dad481ba32UL);
+   TESTINST_RR("ctz.d", "$r23", "$r19", 0xbe232a9fe2090e75UL, 0x2dceda5cdc990d2eUL);
+
+   /* ---------------- revb.2h rd, rj ---------------- */
+   TESTINST_RR("revb.2h", "$r29", "$r30", 0x75397084990a0745UL, 0xd4c83f5966c1c17UL);
+   TESTINST_RR("revb.2h", "$r17", "$r23", 0xecfbee2a69bbe344UL, 0x5a42dc5dc5705f68UL);
+   TESTINST_RR("revb.2h", "$r6", "$r14", 0xbfeffdbd68845522UL, 0x3490af5b50fd56bfUL);
+   TESTINST_RR("revb.2h", "$r13", "$r6", 0x58e1821d319a1598UL, 0x4c6711d021a72be6UL);
+   TESTINST_RR("revb.2h", "$r18", "$r8", 0x6e14994d4e16ff86UL, 0x9fda01513ab5ceb8UL);
+   TESTINST_RR("revb.2h", "$r7", "$r30", 0x9979d3a3fcfc9323UL, 0x504c708535bc136fUL);
+   TESTINST_RR("revb.2h", "$r28", "$r19", 0x9daf4aa3a33eec5fUL, 0xaa376fc54f4be6f5UL);
+   TESTINST_RR("revb.2h", "$r30", "$r8", 0x2e0bba43ec83e59eUL, 0xaee8b8acd436f6daUL);
+   TESTINST_RR("revb.2h", "$r14", "$r7", 0x9634787c9be10863UL, 0xe9da521d42716c0aUL);
+   TESTINST_RR("revb.2h", "$r23", "$r14", 0x687b89225667081aUL, 0x9089e36a4f12f9c6UL);
+
+   /* ---------------- revb.4h rd, rj ---------------- */
+   TESTINST_RR("revb.4h", "$r4", "$r25", 0xc42859bd06b669d2UL, 0x782e4ae6ab812191UL);
+   TESTINST_RR("revb.4h", "$r18", "$r19", 0x45ca4499d789fe5bUL, 0x6e558c98b95d346dUL);
+   TESTINST_RR("revb.4h", "$r24", "$r10", 0x2d04871fd753c43fUL, 0xbeab033e2b5a979eUL);
+   TESTINST_RR("revb.4h", "$r24", "$r8", 0xbc4deb39fb2ffe2eUL, 0x5e3e50b8025e77f3UL);
+   TESTINST_RR("revb.4h", "$r7", "$r14", 0xf44a6ea6f42e0918UL, 0x9f617a848e4ad8f2UL);
+   TESTINST_RR("revb.4h", "$r13", "$r12", 0xda815ff8648e92b9UL, 0xa401e74c4dd88e12UL);
+   TESTINST_RR("revb.4h", "$r31", "$r19", 0x7964d861d2ecb8d5UL, 0xe402e87f73fb4c68UL);
+   TESTINST_RR("revb.4h", "$r29", "$r25", 0x6beff3fa6167cdccUL, 0x11e350b71aee0229UL);
+   TESTINST_RR("revb.4h", "$r4", "$r8", 0x357a56e8ae275376UL, 0xdf8ebc175f4be7e3UL);
+   TESTINST_RR("revb.4h", "$r15", "$r27", 0xeb11b29acfe397d6UL, 0x42d231083cd97aa0UL);
+
+   /* ---------------- revb.2w rd, rj ---------------- */
+   TESTINST_RR("revb.2w", "$r27", "$r31", 0x978f867dd7f0cb8UL, 0x19eec2d357cd6a06UL);
+   TESTINST_RR("revb.2w", "$r10", "$r10", 0x7897a40c4fda96d5UL, 0xcb849783a18de892UL);
+   TESTINST_RR("revb.2w", "$r23", "$r14", 0x18338c734be53a1UL, 0x6258664ec1bb96b8UL);
+   TESTINST_RR("revb.2w", "$r12", "$r19", 0x7417ec4fef3451ccUL, 0x216ad32ee149542bUL);
+   TESTINST_RR("revb.2w", "$r31", "$r30", 0x8132835b9905b650UL, 0x6fac007fbefdecf2UL);
+   TESTINST_RR("revb.2w", "$r25", "$r10", 0x7336ebe375c83bedUL, 0x643f76ac3010a6bbUL);
+   TESTINST_RR("revb.2w", "$r31", "$r29", 0x5d99f79f18e805b8UL, 0xe65e70ca4cf299faUL);
+   TESTINST_RR("revb.2w", "$r30", "$r19", 0xec10dd6d7249c5faUL, 0x3f6bb22d66caf299UL);
+   TESTINST_RR("revb.2w", "$r6", "$r30", 0x2c394783817c0870UL, 0xd823cff07efd78dbUL);
+   TESTINST_RR("revb.2w", "$r4", "$r15", 0xc5acf61f075cd4e4UL, 0xc154dd7479b90c6cUL);
+
+   /* ---------------- revb.d rd, rj ---------------- */
+   TESTINST_RR("revb.d", "$r6", "$r23", 0xe6e05a0dafda37ceUL, 0x2ac7d047f197f6fbUL);
+   TESTINST_RR("revb.d", "$r19", "$r4", 0xc07a757bea6011ffUL, 0xcef6cef3e0f941ffUL);
+   TESTINST_RR("revb.d", "$r6", "$r15", 0x711bb31e18fcb2f3UL, 0x522068042cf5be1aUL);
+   TESTINST_RR("revb.d", "$r9", "$r7", 0xf9654c655c67392eUL, 0xa1b065742110e3f4UL);
+   TESTINST_RR("revb.d", "$r29", "$r4", 0x70c0dcad23609060UL, 0x5d04b7b2ece6f6bbUL);
+   TESTINST_RR("revb.d", "$r15", "$r4", 0x809930516f3136ebUL, 0xda33327a8d42ef55UL);
+   TESTINST_RR("revb.d", "$r10", "$r4", 0x1a7ee04b354f6af5UL, 0xcda6c6943e46fed7UL);
+   TESTINST_RR("revb.d", "$r20", "$r4", 0x315f95452d748459UL, 0xa001e934745758e0UL);
+   TESTINST_RR("revb.d", "$r6", "$r8", 0xabbd06000374627aUL, 0x85441006689de89bUL);
+   TESTINST_RR("revb.d", "$r27", "$r24", 0x2d404e69f54afa48UL, 0x46f47b822772f3cdUL);
+
+   /* ---------------- revh.2w rd, rj ---------------- */
+   TESTINST_RR("revh.2w", "$r6", "$r15", 0x5b764c7bfb1999ebUL, 0x86603fc3f96843edUL);
+   TESTINST_RR("revh.2w", "$r19", "$r10", 0xf39f8e6b43dd63ceUL, 0x141d294d06276941UL);
+   TESTINST_RR("revh.2w", "$r5", "$r20", 0x3ff54e5c35d83e69UL, 0xd677d6a21384278aUL);
+   TESTINST_RR("revh.2w", "$r4", "$r31", 0xce463b02a2f840ccUL, 0x6f87c9636f9cfca6UL);
+   TESTINST_RR("revh.2w", "$r19", "$r26", 0x34abc96ddde64e27UL, 0x723ec7ce92720502UL);
+   TESTINST_RR("revh.2w", "$r8", "$r18", 0x1454a1ee8739c235UL, 0xd890efa373a6dfb0UL);
+   TESTINST_RR("revh.2w", "$r12", "$r31", 0xf0c8b856751cae70UL, 0xb675dff2568e6ebfUL);
+   TESTINST_RR("revh.2w", "$r24", "$r9", 0xb36984e3a7a3eaeaUL, 0xa169cfa9f35f6a8aUL);
+   TESTINST_RR("revh.2w", "$r25", "$r27", 0x640b3e6b41180473UL, 0x9bc307f0a2ef368fUL);
+   TESTINST_RR("revh.2w", "$r7", "$r9", 0x897e1406a0eb2dc9UL, 0x1921bcf657fecdccUL);
+
+   /* ---------------- revh.d rd, rj ---------------- */
+   TESTINST_RR("revh.d", "$r14", "$r25", 0xec3573411ea025e5UL, 0x6976d4371b08f1abUL);
+   TESTINST_RR("revh.d", "$r24", "$r31", 0x9ef9e5cb1375d42aUL, 0x9ce130c8a579e11dUL);
+   TESTINST_RR("revh.d", "$r9", "$r28", 0x3c8cd0055a5e7031UL, 0xf05f9381753ded16UL);
+   TESTINST_RR("revh.d", "$r24", "$r26", 0x6a4e5797f19041f6UL, 0xd26a5ae65e21041cUL);
+   TESTINST_RR("revh.d", "$r14", "$r24", 0xe2cb9a83aee22d97UL, 0x6405d71e0bb63321UL);
+   TESTINST_RR("revh.d", "$r19", "$r23", 0x91cdf3bcd9afe76dUL, 0x171953826107396aUL);
+   TESTINST_RR("revh.d", "$r23", "$r14", 0x93ed49255d084e12UL, 0x374bd76990198b43UL);
+   TESTINST_RR("revh.d", "$r31", "$r12", 0x8e54a908f04882bUL, 0xf7e8756491b9d346UL);
+   TESTINST_RR("revh.d", "$r31", "$r20", 0xbb7cd34502fdf01fUL, 0x906b7289a6957d3fUL);
+   TESTINST_RR("revh.d", "$r27", "$r30", 0xacbca1aacdd9dd3fUL, 0x3072d9c69004d4b5UL);
+
+   /* ---------------- bitrev.4b rd, rj ---------------- */
+   TESTINST_RR("bitrev.4b", "$r23", "$r19", 0xb422f2854b491d92UL, 0x7649084cec69098aUL);
+   TESTINST_RR("bitrev.4b", "$r27", "$r16", 0xd14736328d74b448UL, 0x1abee3a271c71db9UL);
+   TESTINST_RR("bitrev.4b", "$r15", "$r23", 0xf17c0f0ccfbb2c38UL, 0x490107ff4155bd17UL);
+   TESTINST_RR("bitrev.4b", "$r5", "$r18", 0x8408d6a30523619dUL, 0x625d5aedf0add9fbUL);
+   TESTINST_RR("bitrev.4b", "$r8", "$r15", 0xc41a2fdb60ba75a6UL, 0xe2562eab3b333a00UL);
+   TESTINST_RR("bitrev.4b", "$r17", "$r18", 0x6a409394f364c02aUL, 0xea970d90edb343ccUL);
+   TESTINST_RR("bitrev.4b", "$r25", "$r29", 0xd8d1c9b8dcff266dUL, 0xacca47ac7597ca65UL);
+   TESTINST_RR("bitrev.4b", "$r26", "$r24", 0xe2a0d11df8c5055bUL, 0xc57559d03e3e216dUL);
+   TESTINST_RR("bitrev.4b", "$r8", "$r27", 0xb6a5815170d657f0UL, 0x9f60901eefa1347aUL);
+   TESTINST_RR("bitrev.4b", "$r20", "$r16", 0x432a2fbf2b073732UL, 0x604b8d7ecb5e86dcUL);
+
+   /* ---------------- bitrev.8b rd, rj ---------------- */
+   TESTINST_RR("bitrev.8b", "$r25", "$r7", 0x22b2e6007f742fd1UL, 0xe8c23886def1bbc9UL);
+   TESTINST_RR("bitrev.8b", "$r28", "$r30", 0xf985d7779c5ca157UL, 0x285cbdc0f47395d1UL);
+   TESTINST_RR("bitrev.8b", "$r29", "$r13", 0xd9b8364a793bc50cUL, 0xded35d7c7ba73d29UL);
+   TESTINST_RR("bitrev.8b", "$r12", "$r28", 0x18d7769bc1147dc5UL, 0xfb6cda8c7f12313aUL);
+   TESTINST_RR("bitrev.8b", "$r23", "$r6", 0xeff84dc134b3acbeUL, 0xee7c4e89e333eda8UL);
+   TESTINST_RR("bitrev.8b", "$r24", "$r20", 0xad65748f0bc46e9fUL, 0xd0d88137a6284eacUL);
+   TESTINST_RR("bitrev.8b", "$r10", "$r5", 0xe0e1c1e262352e89UL, 0x9c43ebc4f7c65dc1UL);
+   TESTINST_RR("bitrev.8b", "$r27", "$r13", 0x444a53aa65d317dcUL, 0x473eea7ea5691da7UL);
+   TESTINST_RR("bitrev.8b", "$r13", "$r9", 0xfc48d0fdf4c7a6e5UL, 0x5dcad407df3401a5UL);
+   TESTINST_RR("bitrev.8b", "$r12", "$r5", 0xebef32fcbd91e9aUL, 0xe1eeea527816355eUL);
+
+   /* ---------------- bitrev.w rd, rj ---------------- */
+   TESTINST_RR("bitrev.w", "$r18", "$r15", 0x2028b0c8691a767UL, 0x5822df2950c9c2d3UL);
+   TESTINST_RR("bitrev.w", "$r30", "$r27", 0x2a2d48209d9f377bUL, 0xde9d59b836df41fcUL);
+   TESTINST_RR("bitrev.w", "$r17", "$r4", 0xe6fb8b07c90464e6UL, 0x65976cb5c6c6a5b0UL);
+   TESTINST_RR("bitrev.w", "$r9", "$r31", 0x1b95159ec5c37644UL, 0x62c549b741c2adadUL);
+   TESTINST_RR("bitrev.w", "$r17", "$r14", 0x8b414dfa7156f0ceUL, 0x9642d0186f420e7cUL);
+   TESTINST_RR("bitrev.w", "$r15", "$r8", 0x2722ecb374b4d5e3UL, 0xeaf151a286bbc4cfUL);
+   TESTINST_RR("bitrev.w", "$r27", "$r19", 0x58ec913c63634a5UL, 0xe723c39df96a4fd2UL);
+   TESTINST_RR("bitrev.w", "$r7", "$r26", 0xa245e7dd80a324a2UL, 0xe7d6c2b2683291eUL);
+   TESTINST_RR("bitrev.w", "$r31", "$r6", 0x114292ed02ba1255UL, 0x13cd62afac5ac3d4UL);
+   TESTINST_RR("bitrev.w", "$r7", "$r25", 0xbd46d88fc8d2933bUL, 0x69ce9ccb487dadd1UL);
+
+   /* ---------------- bitrev.d rd, rj ---------------- */
+   TESTINST_RR("bitrev.d", "$r4", "$r29", 0xeaacaeb60b227eabUL, 0x799f36da44887e2cUL);
+   TESTINST_RR("bitrev.d", "$r29", "$r6", 0xcfbb055ab1ebf7faUL, 0x2924f63fec744b02UL);
+   TESTINST_RR("bitrev.d", "$r28", "$r31", 0xaac74a398d76900dUL, 0xf6c75e45e33b4cb7UL);
+   TESTINST_RR("bitrev.d", "$r24", "$r12", 0xfc8bc33fb4a8d023UL, 0xcccd98e9d53aa26aUL);
+   TESTINST_RR("bitrev.d", "$r8", "$r7", 0x7502cd68289f4c3aUL, 0x746ddfd3c3a512b1UL);
+   TESTINST_RR("bitrev.d", "$r6", "$r16", 0xe8b94bfe615774aeUL, 0x518770bbee53d619UL);
+   TESTINST_RR("bitrev.d", "$r24", "$r4", 0x6318c17dbae816c3UL, 0x9ab684e129b57f07UL);
+   TESTINST_RR("bitrev.d", "$r27", "$r23", 0x8a22909b005a86b8UL, 0x69337e8c3b1fc2bbUL);
+   TESTINST_RR("bitrev.d", "$r20", "$r9", 0x9f43885d40caf0UL, 0x193cbf609dbc33d4UL);
+   TESTINST_RR("bitrev.d", "$r30", "$r19", 0x30fa02e0fc390ac9UL, 0x21686c931c6260daUL);
+
+   /* ---------------- bytepick.w rd, rj, rk, sa2 ---------------- */
+   TESTINST_RRRI("bytepick.w", "$r26", "$r15", "$r19", SA2, 0x1b0b980dd3271273UL, 0x8737ca6c8106ceeeUL, 0x2807e0dcb47d6efUL, 1);
+   TESTINST_RRRI("bytepick.w", "$r15", "$r17", "$r7", SA2, 0x3d2e3fbcbd032001UL, 0x5eced8cf3da8b205UL, 0xb8155b41321e09c0UL, 0);
+   TESTINST_RRRI("bytepick.w", "$r12", "$r15", "$r17", SA2, 0x2670c80f12a87520UL, 0x29ab42125e3ea5c8UL, 0x32a39ac435460f2fUL, 3);
+   TESTINST_RRRI("bytepick.w", "$r4", "$r20", "$r18", SA2, 0x5a64271926277c04UL, 0xcbde225cc736e5d5UL, 0x18abacc874db47e9UL, 3);
+   TESTINST_RRRI("bytepick.w", "$r8", "$r5", "$r24", SA2, 0xdb41606ce3f9df94UL, 0xc3f6ce370d754a3fUL, 0x34ad5a423a5c42e3UL, 3);
+   TESTINST_RRRI("bytepick.w", "$r5", "$r30", "$r14", SA2, 0xedb3aad221050d0bUL, 0x46f5823389f2581aUL, 0xf766f1e75349809eUL, 2);
+   TESTINST_RRRI("bytepick.w", "$r4", "$r19", "$r18", SA2, 0xf92ed0231f25c991UL, 0xba59df0352ed6b3eUL, 0x58d6fbce4e4325e8UL, 0);
+   TESTINST_RRRI("bytepick.w", "$r18", "$r28", "$r24", SA2, 0x177dcaf8fcd30180UL, 0xbdc04b3b8f707462UL, 0x6102168606deb3edUL, 3);
+   TESTINST_RRRI("bytepick.w", "$r13", "$r27", "$r29", SA2, 0x383d82c5d717259bUL, 0x495e30e5e680d7fcUL, 0x1c17f315ebb3bec3UL, 2);
+   TESTINST_RRRI("bytepick.w", "$r5", "$r29", "$r4", SA2, 0x26a0fb212ab80a3aUL, 0x78b167aecd81f869UL, 0x6daab499f228fef4UL, 1);
+
+   /* ---------------- bytepick.d rd, rj, rk, sa3 ---------------- */
+   TESTINST_RRRI("bytepick.d", "$r28", "$r4", "$r28", SA3, 0x794fa22d52f7e834UL, 0x2f084db071d3bcceUL, 0xa0cf51d7020f10c1UL, 7);
+   TESTINST_RRRI("bytepick.d", "$r10", "$r18", "$r4", SA3, 0x9fd7a6b378604833UL, 0x37da15f8a7154cabUL, 0xaedd64328d27a0a8UL, 2);
+   TESTINST_RRRI("bytepick.d", "$r7", "$r6", "$r24", SA3, 0xdee49920d429d3c2UL, 0x15e3f61f2f82a2d1UL, 0xdeba03c7761e4678UL, 3);
+   TESTINST_RRRI("bytepick.d", "$r19", "$r16", "$r5", SA3, 0x53bda4d18e61fc44UL, 0xc79bd94439006673UL, 0xa8024ab452a2bd52UL, 4);
+   TESTINST_RRRI("bytepick.d", "$r26", "$r19", "$r25", SA3, 0xc8aae5136d925592UL, 0xea109dd2837d3acfUL, 0x30e93a75e695666aUL, 7);
+   TESTINST_RRRI("bytepick.d", "$r8", "$r14", "$r8", SA3, 0xa03db273c845b37fUL, 0xa7fd0053a136769fUL, 0x6ab932903229b035UL, 2);
+   TESTINST_RRRI("bytepick.d", "$r9", "$r14", "$r23", SA3, 0x2f160a0d147b300fUL, 0xdae9d5d15bb8f5b5UL, 0xc4fdfbb29d49dfe4UL, 2);
+   TESTINST_RRRI("bytepick.d", "$r20", "$r18", "$r15", SA3, 0x30cefdebc30b841aUL, 0xbfd016fb0312277cUL, 0x44269b95d496912fUL, 5);
+   TESTINST_RRRI("bytepick.d", "$r12", "$r17", "$r5", SA3, 0xde32bc5d3471eed2UL, 0xdb807610c6e762e4UL, 0xb2148e34e649d1b8UL, 2);
+   TESTINST_RRRI("bytepick.d", "$r5", "$r24", "$r28", SA3, 0x9ab1be6a0faa61a8UL, 0x97d4a12579967739UL, 0xaa592ef1fd606badUL, 3);
+
+   /* ---------------- maskeqz rd, rj, rk ---------------- */
+   TESTINST_RRR("maskeqz", "$r14", "$r28", "$r25", 0xc263b6b8f3404c8dUL, 0x90ef733c88c88866UL, 0xd256888d94e8d21aUL);
+   TESTINST_RRR("maskeqz", "$r13", "$r9", "$r15", 0x5bdd86b962c61db4UL, 0x8a78f7b88a728d92UL, 0x69e707acb2c26a83UL);
+   TESTINST_RRR("maskeqz", "$r7", "$r7", "$r13", 0xea86abdbdea660cbUL, 0xfb778deef0a5b893UL, 0xad10e23c971d1a9fUL);
+   TESTINST_RRR("maskeqz", "$r8", "$r7", "$r19", 0xf64df33b6146939fUL, 0xe7376d3da44f4dfdUL, 0x7987e122af2505abUL);
+   TESTINST_RRR("maskeqz", "$r10", "$r27", "$r29", 0x404a261c069b488bUL, 0x81886c523ec2658cUL, 0x3236dc83d0a27cc1UL);
+   TESTINST_RRR("maskeqz", "$r23", "$r16", "$r25", 0x8671050519b7bda0UL, 0x26fa2567b106d73aUL, 0xd884011e0d767feUL);
+   TESTINST_RRR("maskeqz", "$r5", "$r19", "$r18", 0xbd8d4cef53122132UL, 0x4976c047c57ec148UL, 0x602312f372049a5eUL);
+   TESTINST_RRR("maskeqz", "$r29", "$r24", "$r23", 0x7f390b695d8b12eUL, 0x70043e7666a24a34UL, 0xfee8f8f90ab3ac9bUL);
+   TESTINST_RRR("maskeqz", "$r25", "$r4", "$r18", 0x7eaffcb6dac1b5bUL, 0x4b12f8c6738216a2UL, 0x409acb80b7391511UL);
+   TESTINST_RRR("maskeqz", "$r30", "$r6", "$r24", 0x14d829636b628dc9UL, 0xdb88a366a2271c2cUL, 0xea0d5998835940aUL);
+
+   /* ---------------- masknez rd, rj, rk ---------------- */
+   TESTINST_RRR("masknez", "$r14", "$r24", "$r5", 0x46b15bbb9507bd79UL, 0xc92af628c880a454UL, 0x846a586db0af0965UL);
+   TESTINST_RRR("masknez", "$r30", "$r8", "$r8", 0x43cd20b5234db4e8UL, 0x7aeee6ab6b10561fUL, 0x45ab4fdb4ca8b325UL);
+   TESTINST_RRR("masknez", "$r24", "$r19", "$r15", 0xd3d50bbb34b528e2UL, 0xdd71746b0beedae3UL, 0xa34d82fc50174094UL);
+   TESTINST_RRR("masknez", "$r29", "$r26", "$r26", 0x576cb2da15b1462dUL, 0x6c669f0195b50b7aUL, 0xec1609ef36aa938fUL);
+   TESTINST_RRR("masknez", "$r4", "$r29", "$r10", 0xaa220f67a02617dbUL, 0xffcd18e3016e10fUL, 0x4cf9bdd8dca7f88fUL);
+   TESTINST_RRR("masknez", "$r23", "$r9", "$r29", 0x774e1c840428fbdeUL, 0x391268694388d2a7UL, 0xf06192a4e5780c53UL);
+   TESTINST_RRR("masknez", "$r7", "$r25", "$r28", 0x7b75099f16135faaUL, 0xf95af681c18bf31cUL, 0x2f6122581dfdef74UL);
+   TESTINST_RRR("masknez", "$r26", "$r10", "$r16", 0xe6006c9bd6bae204UL, 0x7e84e5db1181249dUL, 0x6ab2371059cdc875UL);
+   TESTINST_RRR("masknez", "$r26", "$r15", "$r28", 0xb4c9c784ef74245fUL, 0x20cc1c4c169ca02cUL, 0x606eeb8ce6278d16UL);
+   TESTINST_RRR("masknez", "$r19", "$r16", "$r16", 0x75a721553f7c7054UL, 0x7b63b7b7b3f5bd5fUL, 0xf8c7933e92e155eeUL);
+
+   /* ---------------- bstrins.w rd, rj, msbw, lsbw ---------------- */
+   TESTINST_RRII("bstrins.w", "$r27", "$r16", MSBW, LSBW, 0x431055863e78b187UL, 0xe18dda9620a50e9dUL, 31, 8);
+   TESTINST_RRII("bstrins.w", "$r26", "$r27", MSBW, LSBW, 0x19f800eab7e1ab51UL, 0x61e7d86005d21d29UL, 30, 27);
+   TESTINST_RRII("bstrins.w", "$r15", "$r4", MSBW, LSBW, 0xb141d462e777528dUL, 0xb7aebff9bcca1643UL, 17, 14);
+   TESTINST_RRII("bstrins.w", "$r30", "$r17", MSBW, LSBW, 0xfac48083375844feUL, 0x6d3283ba14cc27ebUL, 24, 6);
+   TESTINST_RRII("bstrins.w", "$r12", "$r12", MSBW, LSBW, 0x9b7629774f19f64aUL, 0x84ee8d65b2842686UL, 30, 25);
+   TESTINST_RRII("bstrins.w", "$r15", "$r10", MSBW, LSBW, 0x290172844863090fUL, 0x85ea298976069fcdUL, 26, 1);
+   TESTINST_RRII("bstrins.w", "$r10", "$r13", MSBW, LSBW, 0x66942ba1c15e85aaUL, 0xddb2dfa7474a4370UL, 23, 8);
+   TESTINST_RRII("bstrins.w", "$r5", "$r20", MSBW, LSBW, 0x3dcfecca80bf0d79UL, 0x5044b246f2d3f890UL, 18, 16);
+   TESTINST_RRII("bstrins.w", "$r23", "$r5", MSBW, LSBW, 0xa11723142f1472a7UL, 0xcbaaa9a23d119663UL, 25, 21);
+   TESTINST_RRII("bstrins.w", "$r20", "$r31", MSBW, LSBW, 0x6a1110240ba884b8UL, 0x45cadf0ffe08cc25UL, 13, 12);
+
+   /* ---------------- bstrpick.w rd, rj, msbw, lsbw ---------------- */
+   TESTINST_RRII("bstrpick.w", "$r5", "$r23", MSBW, LSBW, 0x6885eaa89f691954UL, 0x94f8458597294f2eUL, 23, 11);
+   TESTINST_RRII("bstrpick.w", "$r25", "$r8", MSBW, LSBW, 0x11be9b9923ebee96UL, 0x23deda120a49df15UL, 18, 11);
+   TESTINST_RRII("bstrpick.w", "$r6", "$r6", MSBW, LSBW, 0x3546d655181289bcUL, 0x7ee84a41c952b690UL, 10, 3);
+   TESTINST_RRII("bstrpick.w", "$r25", "$r5", MSBW, LSBW, 0xb2eec884ea77f548UL, 0x23992bc40919416fUL, 15, 9);
+   TESTINST_RRII("bstrpick.w", "$r26", "$r14", MSBW, LSBW, 0x8e591161730ac582UL, 0xf45f4435cc1cb138UL, 21, 8);
+   TESTINST_RRII("bstrpick.w", "$r9", "$r14", MSBW, LSBW, 0x1ac92d930e8361f9UL, 0xcc11dd56e96c6256UL, 7, 3);
+   TESTINST_RRII("bstrpick.w", "$r19", "$r9", MSBW, LSBW, 0xd15fd80fafe60a58UL, 0xb1426a8c680d628cUL, 8, 8);
+   TESTINST_RRII("bstrpick.w", "$r17", "$r13", MSBW, LSBW, 0xfa48c3cd091d2b5eUL, 0x3a2827a58a014a72UL, 30, 12);
+   TESTINST_RRII("bstrpick.w", "$r6", "$r31", MSBW, LSBW, 0xca10a858ebfa78a1UL, 0x202a38722f270884UL, 16, 7);
+   TESTINST_RRII("bstrpick.w", "$r20", "$r10", MSBW, LSBW, 0xc010deb269ae6ba2UL, 0x98f1d297734f9f4cUL, 31, 15);
+
+   /* ---------------- bstrins.d rd, rj, msbd, lsbd ---------------- */
+   TESTINST_RRII("bstrins.d", "$r29", "$r17", MSBD, LSBD, 0x7cf4a9ec79307e59UL, 0xb1b5afc00eef90a3UL, 60, 25);
+   TESTINST_RRII("bstrins.d", "$r10", "$r27", MSBD, LSBD, 0xc708602dee32579fUL, 0x199d90a711e94375UL, 31, 22);
+   TESTINST_RRII("bstrins.d", "$r4", "$r24", MSBD, LSBD, 0x4e5ce98e217a4b59UL, 0xaf25b5661daefdeaUL, 58, 58);
+   TESTINST_RRII("bstrins.d", "$r12", "$r30", MSBD, LSBD, 0x9505d862c56b1708UL, 0x7f3f0c983ce27863UL, 16, 6);
+   TESTINST_RRII("bstrins.d", "$r29", "$r5", MSBD, LSBD, 0x248f295ef3afe5aaUL, 0x9469277db61227b7UL, 43, 0);
+   TESTINST_RRII("bstrins.d", "$r31", "$r31", MSBD, LSBD, 0xbc5f0c47c3a63a94UL, 0x4aacc1c77ad0c09aUL, 49, 23);
+   TESTINST_RRII("bstrins.d", "$r6", "$r24", MSBD, LSBD, 0x79110235b8c34188UL, 0x75e3e311aef2bef9UL, 12, 2);
+   TESTINST_RRII("bstrins.d", "$r6", "$r16", MSBD, LSBD, 0xaa6e63ffd80b76c5UL, 0xb1ea7dcb3af0881dUL, 43, 13);
+   TESTINST_RRII("bstrins.d", "$r15", "$r25", MSBD, LSBD, 0x5b68a802f26a1804UL, 0xb4f651115b84591bUL, 53, 29);
+   TESTINST_RRII("bstrins.d", "$r9", "$r9", MSBD, LSBD, 0x3394218c965d5f1aUL, 0xf3d30b5d4d4089b4UL, 61, 40);
+
+   /* ---------------- bstrpick.d rd, rj, msbd, lsbd ---------------- */
+   TESTINST_RRII("bstrpick.d", "$r27", "$r27", MSBD, LSBD, 0x503c8fae2d6d7b58UL, 0x9fd9869ca812de0cUL, 63, 33);
+   TESTINST_RRII("bstrpick.d", "$r14", "$r5", MSBD, LSBD, 0x65f05eaa5e13856aUL, 0xd52c72fbeccc39f5UL, 52, 40);
+   TESTINST_RRII("bstrpick.d", "$r13", "$r20", MSBD, LSBD, 0x9cea777df4d2eae0UL, 0x6326727a36499800UL, 48, 14);
+   TESTINST_RRII("bstrpick.d", "$r10", "$r17", MSBD, LSBD, 0xf30a073a4a56604bUL, 0xc12d112f6a0c8f1UL, 43, 20);
+   TESTINST_RRII("bstrpick.d", "$r13", "$r25", MSBD, LSBD, 0xe559d975e0d9ac85UL, 0xcf41f30cc4a46713UL, 55, 37);
+   TESTINST_RRII("bstrpick.d", "$r29", "$r4", MSBD, LSBD, 0x41843db6c2a206cbUL, 0x343f795d45fcff8cUL, 34, 20);
+   TESTINST_RRII("bstrpick.d", "$r27", "$r28", MSBD, LSBD, 0xb359821297377feeUL, 0x4fc51c5773e64f69UL, 27, 10);
+   TESTINST_RRII("bstrpick.d", "$r24", "$r24", MSBD, LSBD, 0xed3cb5d1e8f0e55eUL, 0x9cdbb70a8b8d3945UL, 63, 20);
+   TESTINST_RRII("bstrpick.d", "$r7", "$r30", MSBD, LSBD, 0x11b7344343be1ccfUL, 0xa3422c671803480fUL, 34, 30);
+   TESTINST_RRII("bstrpick.d", "$r15", "$r4", MSBD, LSBD, 0x3670c6b869f28085UL, 0x2caa9d9c1351e402UL, 55, 4);
+
+   /* ---------------- crc.w.b.w rd, rj, rk ---------------- */
+   TESTINST_RRR("crc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4b154113f7d32514UL, 0xcce230caafbf9cc9UL);
+   TESTINST_RRR("crc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x33d5d595721d4f13UL, 0xf4509311f443a7ceUL);
+   TESTINST_RRR("crc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4a3c6de6954cbc17UL, 0x111b21e39fbd7254UL);
+   TESTINST_RRR("crc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xfbb5c64ed1b044c6UL, 0x33ca4c4fb3960326UL);
+   TESTINST_RRR("crc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x2b7c5939d7c0f528UL, 0xb73870a5a6630162UL);
+   TESTINST_RRR("crc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x02fe41918ac5cdbaUL, 0x48e0815289728f05UL);
+   TESTINST_RRR("crc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xb60a8f381f187baeUL, 0x008c208cc413ff72UL);
+
+   /* ---------------- crc.w.h.w rd, rj, rk ---------------- */
+   TESTINST_RRR("crc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4b154113f7d32514UL, 0xcce230caafbf9cc9UL);
+   TESTINST_RRR("crc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x33d5d595721d4f13UL, 0xf4509311f443a7ceUL);
+   TESTINST_RRR("crc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4a3c6de6954cbc17UL, 0x111b21e39fbd7254UL);
+   TESTINST_RRR("crc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xfbb5c64ed1b044c6UL, 0x33ca4c4fb3960326UL);
+   TESTINST_RRR("crc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x2b7c5939d7c0f528UL, 0xb73870a5a6630162UL);
+   TESTINST_RRR("crc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x02fe41918ac5cdbaUL, 0x48e0815289728f05UL);
+   TESTINST_RRR("crc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xb60a8f381f187baeUL, 0x008c208cc413ff72UL);
+
+   /* ---------------- crc.w.w.w rd, rj, rk ---------------- */
+   TESTINST_RRR("crc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4b154113f7d32514UL, 0xcce230caafbf9cc9UL);
+   TESTINST_RRR("crc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x33d5d595721d4f13UL, 0xf4509311f443a7ceUL);
+   TESTINST_RRR("crc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4a3c6de6954cbc17UL, 0x111b21e39fbd7254UL);
+   TESTINST_RRR("crc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xfbb5c64ed1b044c6UL, 0x33ca4c4fb3960326UL);
+   TESTINST_RRR("crc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x2b7c5939d7c0f528UL, 0xb73870a5a6630162UL);
+   TESTINST_RRR("crc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x02fe41918ac5cdbaUL, 0x48e0815289728f05UL);
+   TESTINST_RRR("crc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xb60a8f381f187baeUL, 0x008c208cc413ff72UL);
+
+   /* ---------------- crc.w.d.w rd, rj, rk ---------------- */
+   TESTINST_RRR("crc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4b154113f7d32514UL, 0xcce230caafbf9cc9UL);
+   TESTINST_RRR("crc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x33d5d595721d4f13UL, 0xf4509311f443a7ceUL);
+   TESTINST_RRR("crc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4a3c6de6954cbc17UL, 0x111b21e39fbd7254UL);
+   TESTINST_RRR("crc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xfbb5c64ed1b044c6UL, 0x33ca4c4fb3960326UL);
+   TESTINST_RRR("crc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x2b7c5939d7c0f528UL, 0xb73870a5a6630162UL);
+   TESTINST_RRR("crc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x02fe41918ac5cdbaUL, 0x48e0815289728f05UL);
+   TESTINST_RRR("crc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xb60a8f381f187baeUL, 0x008c208cc413ff72UL);
+
+   /* ---------------- crcc.w.b.w rd, rj, rk ---------------- */
+   TESTINST_RRR("crcc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4b154113f7d32514UL, 0xcce230caafbf9cc9UL);
+   TESTINST_RRR("crcc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x33d5d595721d4f13UL, 0xf4509311f443a7ceUL);
+   TESTINST_RRR("crcc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4a3c6de6954cbc17UL, 0x111b21e39fbd7254UL);
+   TESTINST_RRR("crcc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xfbb5c64ed1b044c6UL, 0x33ca4c4fb3960326UL);
+   TESTINST_RRR("crcc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x2b7c5939d7c0f528UL, 0xb73870a5a6630162UL);
+   TESTINST_RRR("crcc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x02fe41918ac5cdbaUL, 0x48e0815289728f05UL);
+   TESTINST_RRR("crcc.w.b.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xb60a8f381f187baeUL, 0x008c208cc413ff72UL);
+
+   /* ---------------- crcc.w.h.w rd, rj, rk ---------------- */
+   TESTINST_RRR("crcc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4b154113f7d32514UL, 0xcce230caafbf9cc9UL);
+   TESTINST_RRR("crcc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x33d5d595721d4f13UL, 0xf4509311f443a7ceUL);
+   TESTINST_RRR("crcc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4a3c6de6954cbc17UL, 0x111b21e39fbd7254UL);
+   TESTINST_RRR("crcc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xfbb5c64ed1b044c6UL, 0x33ca4c4fb3960326UL);
+   TESTINST_RRR("crcc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x2b7c5939d7c0f528UL, 0xb73870a5a6630162UL);
+   TESTINST_RRR("crcc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x02fe41918ac5cdbaUL, 0x48e0815289728f05UL);
+   TESTINST_RRR("crcc.w.h.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xb60a8f381f187baeUL, 0x008c208cc413ff72UL);
+
+   /* ---------------- crcc.w.w.w rd, rj, rk ---------------- */
+   TESTINST_RRR("crcc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4b154113f7d32514UL, 0xcce230caafbf9cc9UL);
+   TESTINST_RRR("crcc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x33d5d595721d4f13UL, 0xf4509311f443a7ceUL);
+   TESTINST_RRR("crcc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4a3c6de6954cbc17UL, 0x111b21e39fbd7254UL);
+   TESTINST_RRR("crcc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xfbb5c64ed1b044c6UL, 0x33ca4c4fb3960326UL);
+   TESTINST_RRR("crcc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x2b7c5939d7c0f528UL, 0xb73870a5a6630162UL);
+   TESTINST_RRR("crcc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x02fe41918ac5cdbaUL, 0x48e0815289728f05UL);
+   TESTINST_RRR("crcc.w.w.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xb60a8f381f187baeUL, 0x008c208cc413ff72UL);
+
+   /* ---------------- crcc.w.d.w rd, rj, rk ---------------- */
+   TESTINST_RRR("crcc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4b154113f7d32514UL, 0xcce230caafbf9cc9UL);
+   TESTINST_RRR("crcc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x33d5d595721d4f13UL, 0xf4509311f443a7ceUL);
+   TESTINST_RRR("crcc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x4a3c6de6954cbc17UL, 0x111b21e39fbd7254UL);
+   TESTINST_RRR("crcc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xfbb5c64ed1b044c6UL, 0x33ca4c4fb3960326UL);
+   TESTINST_RRR("crcc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x2b7c5939d7c0f528UL, 0xb73870a5a6630162UL);
+   TESTINST_RRR("crcc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0x02fe41918ac5cdbaUL, 0x48e0815289728f05UL);
+   TESTINST_RRR("crcc.w.d.w", "$r12", "$r13", "$r14", 0x123456789abcdefUL, 0xb60a8f381f187baeUL, 0x008c208cc413ff72UL);
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/integer.stderr.exp b/none/tests/loongarch64/integer.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/integer.stdout.exp b/none/tests/loongarch64/integer.stdout.exp
new file mode 100644
index 0000000..a4592b7
--- /dev/null
+++ b/none/tests/loongarch64/integer.stdout.exp
@@ -0,0 +1,2748 @@
+add.w $r19, $r20, $r25 ::
+before: $r19=0xf7f01ffbc9696094, $r20=0xb664b1ce21c8c7fc, $r25=0x0d0a02b79ace85cf
+after:  $r19=0xffffffffbc974dcb, $r20=0xb664b1ce21c8c7fc, $r25=0x0d0a02b79ace85cf
+add.w $r29, $r9, $r12 ::
+before: $r29=0x5418cd6f6b640953, $r9=0x6465907ca2dac58c, $r12=0xefea76d0d526df3a
+after:  $r29=0x000000007801a4c6, $r9=0x6465907ca2dac58c, $r12=0xefea76d0d526df3a
+add.w $r23, $r15, $r28 ::
+before: $r23=0x6ae34fbc6f2f7a9a, $r15=0xbf21c48ab5c2edcc, $r28=0x24824ebd458ed20e
+after:  $r23=0xfffffffffb51bfda, $r15=0xbf21c48ab5c2edcc, $r28=0x24824ebd458ed20e
+add.w $r27, $r14, $r26 ::
+before: $r27=0x9f33e38db05616cc, $r14=0xf12ee0c276c52c78, $r26=0xc3054d65ecec3fe6
+after:  $r27=0x0000000063b16c5e, $r14=0xf12ee0c276c52c78, $r26=0xc3054d65ecec3fe6
+add.w $r14, $r23, $r27 ::
+before: $r14=0x17eaa07c4607901f, $r23=0xa5fa9d0c8472848e, $r27=0xa34301227bb57f76
+after:  $r14=0x0000000000280404, $r23=0xa5fa9d0c8472848e, $r27=0xa34301227bb57f76
+add.w $r19, $r19, $r4 ::
+before: $r19=0xd2e0644d9532b5ea, $r19=0x2957c6f0638238bc, $r4=0xf01566d0031ee917
+after:  $r19=0x0000000066a121d3, $r19=0x0000000066a121d3, $r4=0xf01566d0031ee917
+add.w $r19, $r26, $r13 ::
+before: $r19=0x7b39b3f2ccbdaf79, $r26=0xee877221beef9d45, $r13=0x4a743034eefe075d
+after:  $r19=0xffffffffadeda4a2, $r26=0xee877221beef9d45, $r13=0x4a743034eefe075d
+add.w $r29, $r18, $r14 ::
+before: $r29=0x95214c4de7e6d3ba, $r18=0x26502eb481799cd1, $r14=0x34d57b775083fb91
+after:  $r29=0xffffffffd1fd9862, $r18=0x26502eb481799cd1, $r14=0x34d57b775083fb91
+add.w $r16, $r26, $r8 ::
+before: $r16=0xb66b18865bbb3036, $r26=0x8881ccbe1e31aa8d, $r8=0xffe0d2dde8325edc
+after:  $r16=0x0000000006640969, $r26=0x8881ccbe1e31aa8d, $r8=0xffe0d2dde8325edc
+add.w $r26, $r5, $r8 ::
+before: $r26=0xc367af71c905540c, $r5=0xcdcbe4860d983fe3, $r8=0x6687aa19ee1fc503
+after:  $r26=0xfffffffffbb804e6, $r5=0xcdcbe4860d983fe3, $r8=0x6687aa19ee1fc503
+add.d $r16, $r18, $r8 ::
+before: $r16=0xbe5505b409ce995c, $r18=0x561a85fd57e87226, $r8=0x923f3293987edab0
+after:  $r16=0xe859b890f0674cd6, $r18=0x561a85fd57e87226, $r8=0x923f3293987edab0
+add.d $r12, $r7, $r29 ::
+before: $r12=0xff2682151edc3476, $r7=0x90beb037eacfe3db, $r29=0xa4017082880f1151
+after:  $r12=0x34c020ba72def52c, $r7=0x90beb037eacfe3db, $r29=0xa4017082880f1151
+add.d $r31, $r31, $r5 ::
+before: $r31=0x81e38385e39d9f16, $r31=0xedb2ffa50c0c8b5f, $r5=0x8776f30d75fc97c2
+after:  $r31=0x7529f2b282092321, $r31=0x7529f2b282092321, $r5=0x8776f30d75fc97c2
+add.d $r31, $r6, $r26 ::
+before: $r31=0x64ff385d97b60dc2, $r6=0x80f903f206f08f60, $r26=0x4f5b589532e85398
+after:  $r31=0xd0545c8739d8e2f8, $r6=0x80f903f206f08f60, $r26=0x4f5b589532e85398
+add.d $r25, $r10, $r20 ::
+before: $r25=0xdd8973d6b99634ca, $r10=0x34c0fe5a72dd43d9, $r20=0x2494af03cf5878e7
+after:  $r25=0x5955ad5e4235bcc0, $r10=0x34c0fe5a72dd43d9, $r20=0x2494af03cf5878e7
+add.d $r5, $r10, $r4 ::
+before: $r5=0x94b272b05ffe39c8, $r10=0x152d15efbbc54c04, $r4=0x25afc06cf151ab29
+after:  $r5=0x3adcd65cad16f72d, $r10=0x152d15efbbc54c04, $r4=0x25afc06cf151ab29
+add.d $r19, $r30, $r18 ::
+before: $r19=0xa6e14d42459cadf6, $r30=0x558620ff616141b1, $r18=0x1978905697120747
+after:  $r19=0x6efeb155f87348f8, $r30=0x558620ff616141b1, $r18=0x1978905697120747
+add.d $r7, $r8, $r20 ::
+before: $r7=0x02ea6f88031a29ae, $r8=0x6a08c12301e00d49, $r20=0xdd533acf17f59142
+after:  $r7=0x475bfbf219d59e8b, $r8=0x6a08c12301e00d49, $r20=0xdd533acf17f59142
+add.d $r24, $r14, $r26 ::
+before: $r24=0xb88df6b8315eb7a6, $r14=0x0137d04f7f6fe285, $r26=0x2ccb253ff7ea93d6
+after:  $r24=0x2e02f58f775a765b, $r14=0x0137d04f7f6fe285, $r26=0x2ccb253ff7ea93d6
+add.d $r7, $r19, $r23 ::
+before: $r7=0xad464722c0967f28, $r19=0x30295c1fd85ae029, $r23=0x2c69edb227e01d94
+after:  $r7=0x5c9349d2003afdbd, $r19=0x30295c1fd85ae029, $r23=0x2c69edb227e01d94
+sub.w $r16, $r28, $r17 ::
+before: $r16=0x8b0ba4ef20207fdd, $r28=0x90493cb39ff734a2, $r17=0x519842bab5cc1208
+after:  $r16=0xffffffffea2b229a, $r28=0x90493cb39ff734a2, $r17=0x519842bab5cc1208
+sub.w $r6, $r13, $r15 ::
+before: $r6=0x13af983aafc53691, $r13=0x27bc6a037865e47f, $r15=0xe20df003930575d5
+after:  $r6=0xffffffffe5606eaa, $r13=0x27bc6a037865e47f, $r15=0xe20df003930575d5
+sub.w $r8, $r19, $r23 ::
+before: $r8=0x4177aec74585d42d, $r19=0xba89b6aa9b7728ac, $r23=0x0e6a089b8eaf43fe
+after:  $r8=0x000000000cc7e4ae, $r19=0xba89b6aa9b7728ac, $r23=0x0e6a089b8eaf43fe
+sub.w $r7, $r10, $r23 ::
+before: $r7=0x0ca1b83a7ab88912, $r10=0xd5e2759ea82c2c80, $r23=0x76e9d6f88c2624ff
+after:  $r7=0x000000001c060781, $r10=0xd5e2759ea82c2c80, $r23=0x76e9d6f88c2624ff
+sub.w $r19, $r24, $r24 ::
+before: $r19=0x99d63505ea0474b3, $r24=0x1b53c4c34957af8e, $r24=0x6146da47b731d3ed
+after:  $r19=000000000000000000, $r24=0x6146da47b731d3ed, $r24=0x6146da47b731d3ed
+sub.w $r26, $r31, $r7 ::
+before: $r26=0x8eca560d8234ff55, $r31=0x5beb18985c3f451e, $r7=0x9c9634dfaa7b9313
+after:  $r26=0xffffffffb1c3b20b, $r31=0x5beb18985c3f451e, $r7=0x9c9634dfaa7b9313
+sub.w $r29, $r16, $r6 ::
+before: $r29=0x229544d2cb1d5a64, $r16=0xd23751d515597128, $r6=0xa09dd29330aa8d15
+after:  $r29=0xffffffffe4aee413, $r16=0xd23751d515597128, $r6=0xa09dd29330aa8d15
+sub.w $r12, $r16, $r4 ::
+before: $r12=0x229f5aefe9fb7fb7, $r16=0x0740ed49b5e95fae, $r4=0xbc6304a0df442807
+after:  $r12=0xffffffffd6a537a7, $r16=0x0740ed49b5e95fae, $r4=0xbc6304a0df442807
+sub.w $r30, $r29, $r26 ::
+before: $r30=0x94f3a67d188df281, $r29=0x048e066cdad20ac2, $r26=0x1e032e60568554a7
+after:  $r30=0xffffffff844cb61b, $r29=0x048e066cdad20ac2, $r26=0x1e032e60568554a7
+sub.w $r18, $r23, $r25 ::
+before: $r18=0xedb4f44fb338ba4f, $r23=0xf06e698cd08c8e7b, $r25=0xa22b91e88b77d4d8
+after:  $r18=0x000000004514b9a3, $r23=0xf06e698cd08c8e7b, $r25=0xa22b91e88b77d4d8
+sub.d $r18, $r10, $r27 ::
+before: $r18=0x68647aa06a23c8f9, $r10=0xd001cb46cb78fc4f, $r27=0x460cc8702b1761f9
+after:  $r18=0x89f502d6a0619a56, $r10=0xd001cb46cb78fc4f, $r27=0x460cc8702b1761f9
+sub.d $r7, $r24, $r18 ::
+before: $r7=0x8d18e952fb747f43, $r24=0x1e7d1a019fb96490, $r18=0xb466fb9891e8c151
+after:  $r7=0x6a161e690dd0a33f, $r24=0x1e7d1a019fb96490, $r18=0xb466fb9891e8c151
+sub.d $r4, $r16, $r27 ::
+before: $r4=0x5f6647277ca4c99d, $r16=0xa1156b863ec98e1d, $r27=0xc15612f3ce819d64
+after:  $r4=0xdfbf58927047f0b9, $r16=0xa1156b863ec98e1d, $r27=0xc15612f3ce819d64
+sub.d $r4, $r25, $r9 ::
+before: $r4=0xe67b33778df480b4, $r25=0xc24b2711be7e4ef1, $r9=0xd940ca25b956100f
+after:  $r4=0xe90a5cec05283ee2, $r25=0xc24b2711be7e4ef1, $r9=0xd940ca25b956100f
+sub.d $r5, $r12, $r18 ::
+before: $r5=0x258ae461ef798ce7, $r12=0x3f4984ea3f5692de, $r18=0x99fa673f30e69019
+after:  $r5=0xa54f1dab0e7002c5, $r12=0x3f4984ea3f5692de, $r18=0x99fa673f30e69019
+sub.d $r13, $r10, $r9 ::
+before: $r13=0xdafb48debea5211e, $r10=0xeac1d3b25f6bf8db, $r9=0x297d671b1c96e48f
+after:  $r13=0xc1446c9742d5144c, $r10=0xeac1d3b25f6bf8db, $r9=0x297d671b1c96e48f
+sub.d $r7, $r15, $r23 ::
+before: $r7=0xc6b03274ff37baf6, $r15=0x05b37ffc2c84aec9, $r23=0x74d62a52cbaaec15
+after:  $r7=0x90dd55a960d9c2b4, $r15=0x05b37ffc2c84aec9, $r23=0x74d62a52cbaaec15
+sub.d $r26, $r18, $r26 ::
+before: $r26=0x35c71e0956ffcd43, $r18=0xad703a4e8078070b, $r26=0x634924e8a9fdbb9e
+after:  $r26=0x4a271565d67a4b6d, $r18=0xad703a4e8078070b, $r26=0x4a271565d67a4b6d
+sub.d $r16, $r29, $r5 ::
+before: $r16=0x18bf961cba922928, $r29=0x54ed9198405f8983, $r5=0x977f5b65e5f86b4a
+after:  $r16=0xbd6e36325a671e39, $r29=0x54ed9198405f8983, $r5=0x977f5b65e5f86b4a
+sub.d $r31, $r28, $r14 ::
+before: $r31=0xa38a1e8cb3c7ba00, $r28=0xd220d1ef3cf8f3f7, $r14=0xc972df2ace170d61
+after:  $r31=0x08adf2c46ee1e696, $r28=0xd220d1ef3cf8f3f7, $r14=0xc972df2ace170d61
+slt $r12, $r17, $r18 ::
+before: $r12=0xd7a0e65c279e1082, $r17=0x819edf00a849ba44, $r18=0x41a0b2fe37d44db2
+after:  $r12=0x0000000000000001, $r17=0x819edf00a849ba44, $r18=0x41a0b2fe37d44db2
+slt $r31, $r13, $r18 ::
+before: $r31=0x2ef00a5cfd100f71, $r13=0x4792cd9f9abf36d3, $r18=0x2c117902110ef9a8
+after:  $r31=000000000000000000, $r13=0x4792cd9f9abf36d3, $r18=0x2c117902110ef9a8
+slt $r4, $r30, $r29 ::
+before: $r4=0x6d8be2fb73e2c006, $r30=0xf76ce97d7658995e, $r29=0x3856e09bfe39df6e
+after:  $r4=0x0000000000000001, $r30=0xf76ce97d7658995e, $r29=0x3856e09bfe39df6e
+slt $r4, $r18, $r10 ::
+before: $r4=0xeddcb9dcf092c3f5, $r18=0x0e57b7c25d13dea8, $r10=0x761d86b48cb5ce21
+after:  $r4=0x0000000000000001, $r18=0x0e57b7c25d13dea8, $r10=0x761d86b48cb5ce21
+slt $r16, $r18, $r16 ::
+before: $r16=0xcddd92e2340cd593, $r18=0xc9a30f4707743f80, $r16=0x3ff7d36f17396d3a
+after:  $r16=0x0000000000000001, $r18=0xc9a30f4707743f80, $r16=0x0000000000000001
+slt $r6, $r14, $r10 ::
+before: $r6=0xa9e71c6376093499, $r14=0x26bb3955b588461f, $r10=0xfae7e7a950447826
+after:  $r6=000000000000000000, $r14=0x26bb3955b588461f, $r10=0xfae7e7a950447826
+slt $r19, $r4, $r17 ::
+before: $r19=0x35bb27f64ebd7d62, $r4=0x4a7d3941ebf88bc1, $r17=0x0cda32e4b1c1d5c4
+after:  $r19=000000000000000000, $r4=0x4a7d3941ebf88bc1, $r17=0x0cda32e4b1c1d5c4
+slt $r19, $r28, $r15 ::
+before: $r19=0x29419b8261e40b99, $r28=0xe7e9b059033afa7d, $r15=0x1ea916293b1cc3dd
+after:  $r19=0x0000000000000001, $r28=0xe7e9b059033afa7d, $r15=0x1ea916293b1cc3dd
+slt $r31, $r16, $r16 ::
+before: $r31=0xe0fb75047bc62c9a, $r16=0xa634f6174dcced7d, $r16=0xcca5a9d25b670e70
+after:  $r31=000000000000000000, $r16=0xcca5a9d25b670e70, $r16=0xcca5a9d25b670e70
+slt $r4, $r4, $r10 ::
+before: $r4=0x724ee03fb3fcdec8, $r4=0xae2587f097065e2c, $r10=0x65c69548f83dd0df
+after:  $r4=0x0000000000000001, $r4=0x0000000000000001, $r10=0x65c69548f83dd0df
+sltu $r14, $r10, $r13 ::
+before: $r14=0x1956e5498db3fb6e, $r10=0x2d909abfec4490bd, $r13=0xa7d554ebe591d5cc
+after:  $r14=0x0000000000000001, $r10=0x2d909abfec4490bd, $r13=0xa7d554ebe591d5cc
+sltu $r6, $r5, $r18 ::
+before: $r6=0xc34214447a064eb8, $r5=0xad4413e45f0a226a, $r18=0x4b09aab500b04bff
+after:  $r6=000000000000000000, $r5=0xad4413e45f0a226a, $r18=0x4b09aab500b04bff
+sltu $r31, $r17, $r17 ::
+before: $r31=0x86e16a1618a639c4, $r17=0x87917b281cef8df0, $r17=0x0d543115a56dee48
+after:  $r31=000000000000000000, $r17=0x0d543115a56dee48, $r17=0x0d543115a56dee48
+sltu $r20, $r6, $r25 ::
+before: $r20=0x164fff47b8b23752, $r6=0x9ad830d46b1660f6, $r25=0xc5d72c146f4aba72
+after:  $r20=0x0000000000000001, $r6=0x9ad830d46b1660f6, $r25=0xc5d72c146f4aba72
+sltu $r6, $r26, $r7 ::
+before: $r6=0x1428360430b7c9b5, $r26=0xc2052dc6eea5a53c, $r7=0xda1a8e35dd060adf
+after:  $r6=0x0000000000000001, $r26=0xc2052dc6eea5a53c, $r7=0xda1a8e35dd060adf
+sltu $r19, $r15, $r26 ::
+before: $r19=0xdfc9984966167604, $r15=0xa9ea12b5a37dd492, $r26=0x7a24be9fcf349afc
+after:  $r19=000000000000000000, $r15=0xa9ea12b5a37dd492, $r26=0x7a24be9fcf349afc
+sltu $r29, $r26, $r29 ::
+before: $r29=0x5a3822db2cc26fc5, $r26=0x5985f02e77511d80, $r29=0x370f15cc98f2a6c1
+after:  $r29=000000000000000000, $r26=0x5985f02e77511d80, $r29=000000000000000000
+sltu $r7, $r28, $r16 ::
+before: $r7=0x0e4594ee2cc8c6d7, $r28=0x0177ac0014f5dd20, $r16=0xde1724c7590a4908
+after:  $r7=0x0000000000000001, $r28=0x0177ac0014f5dd20, $r16=0xde1724c7590a4908
+sltu $r8, $r12, $r4 ::
+before: $r8=0x1df979e50aa0ed18, $r12=0x5b410cd0985fce18, $r4=0x9d3c39d61e29025d
+after:  $r8=0x0000000000000001, $r12=0x5b410cd0985fce18, $r4=0x9d3c39d61e29025d
+sltu $r30, $r23, $r25 ::
+before: $r30=0x1cba022788d49d13, $r23=0xd2b40941478ee865, $r25=0xa503a74e41535830
+after:  $r30=000000000000000000, $r23=0xd2b40941478ee865, $r25=0xa503a74e41535830
+slti $r15, $r27, 1913 ::
+before: $r15=0xe24c4ca567d1d5f4, $r27=0xfef05a88adf4b892
+after:  $r15=0x0000000000000001, $r27=0xfef05a88adf4b892
+slti $r8, $r31, -738 ::
+before: $r8=0xfba7284a8ab83b2d, $r31=0xff63b80173f1e368
+after:  $r8=0x0000000000000001, $r31=0xff63b80173f1e368
+slti $r31, $r31, -1544 ::
+before: $r31=0xb4599a9fa734365a, $r31=0x4327139de75dde1e
+after:  $r31=000000000000000000, $r31=000000000000000000
+slti $r5, $r4, 1529 ::
+before: $r5=0xa5572272e0c04a20, $r4=0x87657c1b1699936b
+after:  $r5=0x0000000000000001, $r4=0x87657c1b1699936b
+slti $r10, $r28, 557 ::
+before: $r10=0x1260731618214410, $r28=0xd0de0dfbafb7960a
+after:  $r10=0x0000000000000001, $r28=0xd0de0dfbafb7960a
+slti $r5, $r12, -222 ::
+before: $r5=0x4c6317772a4b06b0, $r12=0x7a1d4eeb507d649b
+after:  $r5=000000000000000000, $r12=0x7a1d4eeb507d649b
+slti $r4, $r31, 717 ::
+before: $r4=0x23b4d62a21994afb, $r31=0x85304cc393f6506b
+after:  $r4=0x0000000000000001, $r31=0x85304cc393f6506b
+slti $r18, $r26, 730 ::
+before: $r18=0x67b6f5dbf6a0c55d, $r26=0x451013f9a2337f9f
+after:  $r18=000000000000000000, $r26=0x451013f9a2337f9f
+slti $r25, $r8, 1193 ::
+before: $r25=0xdb278cca57f1ad7b, $r8=0x7371a60f5af6334b
+after:  $r25=000000000000000000, $r8=0x7371a60f5af6334b
+slti $r17, $r24, 329 ::
+before: $r17=0xffa3ed31f9ea3a29, $r24=0x1138e06e1a45c4f3
+after:  $r17=000000000000000000, $r24=0x1138e06e1a45c4f3
+sltui $r13, $r26, -462 ::
+before: $r13=0x62677116040aebff, $r26=0xeedd6ccd0e5e2771
+after:  $r13=0x0000000000000001, $r26=0xeedd6ccd0e5e2771
+sltui $r24, $r28, 1890 ::
+before: $r24=0xef9500b68a87984a, $r28=0xaf5922683f40599d
+after:  $r24=000000000000000000, $r28=0xaf5922683f40599d
+sltui $r9, $r6, -1538 ::
+before: $r9=0x9996aa21d2b51922, $r6=0xd5214fb275e738dc
+after:  $r9=0x0000000000000001, $r6=0xd5214fb275e738dc
+sltui $r19, $r26, -215 ::
+before: $r19=0x3eb2777655f0f1c5, $r26=0x98ed915860f0eb26
+after:  $r19=0x0000000000000001, $r26=0x98ed915860f0eb26
+sltui $r8, $r19, -780 ::
+before: $r8=0x5c44b5807c43724c, $r19=0x63a068026b529b03
+after:  $r8=0x0000000000000001, $r19=0x63a068026b529b03
+sltui $r19, $r17, -1041 ::
+before: $r19=0xf6926016cdbfacc1, $r17=0xec04a9bcc8d1192a
+after:  $r19=0x0000000000000001, $r17=0xec04a9bcc8d1192a
+sltui $r26, $r14, 1653 ::
+before: $r26=0x542f05c795aa07c2, $r14=0xb634bf537df4c4ce
+after:  $r26=000000000000000000, $r14=0xb634bf537df4c4ce
+sltui $r8, $r5, 441 ::
+before: $r8=0x371daf74e330ee8b, $r5=0xedb0321c888ae22e
+after:  $r8=000000000000000000, $r5=0xedb0321c888ae22e
+sltui $r25, $r4, 678 ::
+before: $r25=0xba813c7acc8f5621, $r4=0x8d5ce4750fe7603b
+after:  $r25=000000000000000000, $r4=0x8d5ce4750fe7603b
+sltui $r17, $r15, 2019 ::
+before: $r17=0x199b641cefe0a0e2, $r15=0x7ea0508a3fed3453
+after:  $r17=000000000000000000, $r15=0x7ea0508a3fed3453
+nor $r14, $r28, $r9 ::
+before: $r14=0xccf23cf02a48844d, $r28=0x2608ea0069c4e9dd, $r9=0x1c7a04255a2d13f8
+after:  $r14=0xc18511da84120402, $r28=0x2608ea0069c4e9dd, $r9=0x1c7a04255a2d13f8
+nor $r6, $r30, $r4 ::
+before: $r6=0xbfcc3de6da2483be, $r30=0xd24e9abca28d6cb5, $r4=0xbb01b508523673c6
+after:  $r6=0x04b040430d408008, $r30=0xd24e9abca28d6cb5, $r4=0xbb01b508523673c6
+nor $r6, $r28, $r13 ::
+before: $r6=0x28dacd828d5736d7, $r28=0xb365ff31474f736c, $r13=0x593621c0f82b445c
+after:  $r6=0x0488000e00908883, $r28=0xb365ff31474f736c, $r13=0x593621c0f82b445c
+nor $r24, $r16, $r31 ::
+before: $r24=0x5898010a4c6cf1bb, $r16=0xecac6e093ba6146a, $r31=0x050e6093f19b1194
+after:  $r24=0x125191640440ea01, $r16=0xecac6e093ba6146a, $r31=0x050e6093f19b1194
+nor $r15, $r7, $r20 ::
+before: $r15=0x2ddb1dea334fd92a, $r7=0x401d7a663be0b31a, $r20=0xb6c008973a85f779
+after:  $r15=0x09228508c41a0884, $r7=0x401d7a663be0b31a, $r20=0xb6c008973a85f779
+nor $r18, $r31, $r29 ::
+before: $r18=0x0c987982e1d91684, $r31=0x181f20f581ed38f4, $r29=0xefaa786e00a2e5b9
+after:  $r18=0x004087007e100202, $r31=0x181f20f581ed38f4, $r29=0xefaa786e00a2e5b9
+nor $r19, $r31, $r13 ::
+before: $r19=0x39e476d555cd20bc, $r31=0xfb8fab5d35576d50, $r13=0x71a92a8377c0f729
+after:  $r19=0x0450542088280086, $r31=0xfb8fab5d35576d50, $r13=0x71a92a8377c0f729
+nor $r25, $r7, $r5 ::
+before: $r25=0x7f36d0c6d173e8c8, $r7=0x181763a9f9350680, $r5=0x5ec5099605d7d418
+after:  $r25=0xa128944002082967, $r7=0x181763a9f9350680, $r5=0x5ec5099605d7d418
+nor $r30, $r23, $r23 ::
+before: $r30=0x688e1d04976ac8db, $r23=0xd37b6d6a1c510287, $r23=0x8670301ee2a715df
+after:  $r30=0x798fcfe11d58ea20, $r23=0x8670301ee2a715df, $r23=0x8670301ee2a715df
+nor $r5, $r23, $r14 ::
+before: $r5=0x71c4a211dd9262f4, $r23=0xcb8a4aebc2c6c4f2, $r14=0x084d79a5254447c9
+after:  $r5=0x3430841018393804, $r23=0xcb8a4aebc2c6c4f2, $r14=0x084d79a5254447c9
+and $r8, $r14, $r31 ::
+before: $r8=0xbddf22c4109e20b5, $r14=0xb2d25973efd1a8ff, $r31=0x28b78b59dfe641e9
+after:  $r8=0x20920951cfc000e9, $r14=0xb2d25973efd1a8ff, $r31=0x28b78b59dfe641e9
+and $r19, $r23, $r17 ::
+before: $r19=0xb25e185c549f6661, $r23=0xb6ccc215c2f17718, $r17=0xf20669c51aee8ffe
+after:  $r19=0xb204400502e00718, $r23=0xb6ccc215c2f17718, $r17=0xf20669c51aee8ffe
+and $r30, $r27, $r23 ::
+before: $r30=0xa7f4ad796393e12b, $r27=0xefbcf405df3e7aff, $r23=0x548a0141e9fe1700
+after:  $r30=0x44880001c93e1200, $r27=0xefbcf405df3e7aff, $r23=0x548a0141e9fe1700
+and $r18, $r31, $r29 ::
+before: $r18=0xa399c7f46c61d974, $r31=0xe0fe8cca1cbab773, $r29=0x49e680ddee7f666b
+after:  $r18=0x40e680c80c3a2663, $r31=0xe0fe8cca1cbab773, $r29=0x49e680ddee7f666b
+and $r5, $r26, $r25 ::
+before: $r5=0x1682ca17c11f90ac, $r26=0x4e9706cb2c885742, $r25=0x250ff6304dd87d57
+after:  $r5=0x040706000c885542, $r26=0x4e9706cb2c885742, $r25=0x250ff6304dd87d57
+and $r28, $r14, $r8 ::
+before: $r28=0xcacf15e6ffad256f, $r14=0x99527f4fa2aa8fb1, $r8=0xcff546a883b63cfb
+after:  $r28=0x8950460882a20cb1, $r14=0x99527f4fa2aa8fb1, $r8=0xcff546a883b63cfb
+and $r28, $r9, $r28 ::
+before: $r28=0xc60423b9cf70d112, $r9=0x2fb0db47f1d8f166, $r28=0x1e9cec9d13e85210
+after:  $r28=0x0e90c80511c85000, $r9=0x2fb0db47f1d8f166, $r28=0x0e90c80511c85000
+and $r18, $r28, $r5 ::
+before: $r18=0x5059c37ee38d2f25, $r28=0x74bf57d85d90af3a, $r5=0x35479df0ebec9209
+after:  $r18=0x340715d049808208, $r28=0x74bf57d85d90af3a, $r5=0x35479df0ebec9209
+and $r23, $r25, $r12 ::
+before: $r23=0x18742ef4c73416be, $r25=0x8b93e775860ef52b, $r12=0xa909915f60a546d2
+after:  $r23=0x8901815500044402, $r25=0x8b93e775860ef52b, $r12=0xa909915f60a546d2
+and $r18, $r17, $r24 ::
+before: $r18=0xadb2cc6aec909946, $r17=0x3068f8b21d583e4c, $r24=0xcf8aae1918f3a88e
+after:  $r18=0x0008a8101850280c, $r17=0x3068f8b21d583e4c, $r24=0xcf8aae1918f3a88e
+or $r19, $r28, $r25 ::
+before: $r19=0x46819825f87044c2, $r28=0x65cb2cc7e5f5a720, $r25=0x1fc0130146f13f76
+after:  $r19=0x7fcb3fc7e7f5bf76, $r28=0x65cb2cc7e5f5a720, $r25=0x1fc0130146f13f76
+or $r8, $r25, $r4 ::
+before: $r8=0x45083dd59c60e6fe, $r25=0x936ecfaeb4d51c95, $r4=0xdc37c27c69024f6e
+after:  $r8=0xdf7fcffefdd75fff, $r25=0x936ecfaeb4d51c95, $r4=0xdc37c27c69024f6e
+or $r15, $r16, $r8 ::
+before: $r15=0x516659e51cf19b26, $r16=0x7589da0802d59510, $r8=0x6b713c60390f3fbf
+after:  $r15=0x7ff9fe683bdfbfbf, $r16=0x7589da0802d59510, $r8=0x6b713c60390f3fbf
+or $r9, $r15, $r6 ::
+before: $r9=0x1646568625c40022, $r15=0xa68db9141a88850c, $r6=0x756d912fbefef973
+after:  $r9=0xf7edb93fbefefd7f, $r15=0xa68db9141a88850c, $r6=0x756d912fbefef973
+or $r24, $r9, $r25 ::
+before: $r24=0xda34c24d14fce443, $r9=0x6ad9bf24481630b0, $r25=0x02aefcdfa652395b
+after:  $r24=0x6affffffee5639fb, $r9=0x6ad9bf24481630b0, $r25=0x02aefcdfa652395b
+or $r13, $r9, $r14 ::
+before: $r13=0x900358ad1e848728, $r9=0xa0e361b5b891a62e, $r14=0xddfa0c1377ce01ac
+after:  $r13=0xfdfb6db7ffdfa7ae, $r9=0xa0e361b5b891a62e, $r14=0xddfa0c1377ce01ac
+or $r23, $r16, $r15 ::
+before: $r23=0x27a55515d39aded9, $r16=0xd0daf17f9cb0bf5a, $r15=0xf44c4372982c4d74
+after:  $r23=0xf4def37f9cbcff7e, $r16=0xd0daf17f9cb0bf5a, $r15=0xf44c4372982c4d74
+or $r20, $r16, $r16 ::
+before: $r20=0x7045887bb8325d6f, $r16=0xbac771cbb78dae04, $r16=0x23f4928023125a5c
+after:  $r20=0x23f4928023125a5c, $r16=0x23f4928023125a5c, $r16=0x23f4928023125a5c
+or $r30, $r5, $r7 ::
+before: $r30=0xcf609aa2057d1b98, $r5=0x379641544fd1cd48, $r7=0x5275ef34f265f01a
+after:  $r30=0x77f7ef74fff5fd5a, $r5=0x379641544fd1cd48, $r7=0x5275ef34f265f01a
+or $r23, $r4, $r30 ::
+before: $r23=0xc43fc1c750887406, $r4=0x44a3229c33d1cd65, $r30=0xceaa00084fc04912
+after:  $r23=0xceab229c7fd1cd77, $r4=0x44a3229c33d1cd65, $r30=0xceaa00084fc04912
+xor $r6, $r19, $r31 ::
+before: $r6=0x018522418b59bf8a, $r19=0x270a2ec823f26e39, $r31=0x99ef76e6d4495ae3
+after:  $r6=0xbee5582ef7bb34da, $r19=0x270a2ec823f26e39, $r31=0x99ef76e6d4495ae3
+xor $r28, $r20, $r27 ::
+before: $r28=0x57de83cac9dade15, $r20=0xd39fdecdfd4ccb08, $r27=0x00c97b854adacdb4
+after:  $r28=0xd356a548b79606bc, $r20=0xd39fdecdfd4ccb08, $r27=0x00c97b854adacdb4
+xor $r4, $r29, $r5 ::
+before: $r4=0x9f7356fff2445f77, $r29=0xc3c3a34d2c226b5a, $r5=0x51abdd266816b94f
+after:  $r4=0x92687e6b4434d215, $r29=0xc3c3a34d2c226b5a, $r5=0x51abdd266816b94f
+xor $r14, $r6, $r28 ::
+before: $r14=0xdd5ca0b5c6c45804, $r6=0xa0ba047990ec0798, $r28=0x089e6efd43651c28
+after:  $r14=0xa8246a84d3891bb0, $r6=0xa0ba047990ec0798, $r28=0x089e6efd43651c28
+xor $r8, $r19, $r23 ::
+before: $r8=0xc3e35cd44af166fa, $r19=0x6affcfe12104ccc7, $r23=0x4adbb3601a07a1d9
+after:  $r8=0x20247c813b036d1e, $r19=0x6affcfe12104ccc7, $r23=0x4adbb3601a07a1d9
+xor $r16, $r5, $r18 ::
+before: $r16=0x685cdc5ca969c8e1, $r5=0xd88d0e2a9900b8eb, $r18=0xdd4dfbba723cde28
+after:  $r16=0x05c0f590eb3c66c3, $r5=0xd88d0e2a9900b8eb, $r18=0xdd4dfbba723cde28
+xor $r20, $r18, $r24 ::
+before: $r20=0x2362838018fa39be, $r18=0xbbc8d438b24c037a, $r24=0xe020a8456a45b667
+after:  $r20=0x5be87c7dd809b51d, $r18=0xbbc8d438b24c037a, $r24=0xe020a8456a45b667
+xor $r19, $r23, $r19 ::
+before: $r19=0x637cae50fc0a1c95, $r23=0x514b81a7227dd07e, $r19=0x59a27a7f9c8481c3
+after:  $r19=0x08e9fbd8bef951bd, $r23=0x514b81a7227dd07e, $r19=0x08e9fbd8bef951bd
+xor $r20, $r16, $r18 ::
+before: $r20=0xb728dd7a443bcc8f, $r16=0xe2de9bf67cdbdc0c, $r18=0x26687435fbe4dbf6
+after:  $r20=0xc4b6efc3873f07fa, $r16=0xe2de9bf67cdbdc0c, $r18=0x26687435fbe4dbf6
+xor $r23, $r14, $r6 ::
+before: $r23=0x744915919b52e27e, $r14=0x16863c1d3e1cded7, $r6=0x040ce8607349c380
+after:  $r23=0x128ad47d4d551d57, $r14=0x16863c1d3e1cded7, $r6=0x040ce8607349c380
+orn $r24, $r9, $r15 ::
+before: $r24=0x39320ce9aa25fb73, $r9=0xaaec06dc1b47cf43, $r15=0x5fa36a558c884a69
+after:  $r24=0xaafc97fe7b77ffd7, $r9=0xaaec06dc1b47cf43, $r15=0x5fa36a558c884a69
+orn $r12, $r4, $r26 ::
+before: $r12=0xa9c2abcbc14e3f3c, $r4=0x7c87d633528d97b0, $r26=0xe383c14e72ab8677
+after:  $r12=0x7cfffeb3dfddffb8, $r4=0x7c87d633528d97b0, $r26=0xe383c14e72ab8677
+orn $r20, $r24, $r28 ::
+before: $r20=0xb117d8b0280738a2, $r24=0x318fd949c3ba430f, $r28=0xc9edab5116dc1582
+after:  $r20=0x379fddefebbbeb7f, $r24=0x318fd949c3ba430f, $r28=0xc9edab5116dc1582
+orn $r8, $r25, $r25 ::
+before: $r8=0xb140441a36f8eded, $r25=0xa26782a5e34d7add, $r25=0x61bdd5b78d019958
+after:  $r8=0xffffffffffffffff, $r25=0x61bdd5b78d019958, $r25=0x61bdd5b78d019958
+orn $r16, $r18, $r25 ::
+before: $r16=0xcda0e2c1bce1eeec, $r18=0xa4486eefd2c444d9, $r25=0xbd007605c829cadc
+after:  $r16=0xe6ffeffff7d675fb, $r18=0xa4486eefd2c444d9, $r25=0xbd007605c829cadc
+orn $r5, $r28, $r19 ::
+before: $r5=0x8196fca50795a2aa, $r28=0xec7f689a0d676560, $r19=0xb4450418c4e1b333
+after:  $r5=0xeffffbff3f7f6dec, $r28=0xec7f689a0d676560, $r19=0xb4450418c4e1b333
+orn $r15, $r14, $r8 ::
+before: $r15=0xaf1e2a9fe35ba4ed, $r14=0xd2207f86d89b890a, $r8=0xfb31b9e37313a94d
+after:  $r15=0xd6ee7f9edcffdfba, $r14=0xd2207f86d89b890a, $r8=0xfb31b9e37313a94d
+orn $r27, $r14, $r14 ::
+before: $r27=0x1f24566bfa353160, $r14=0xc4e17319c4766bec, $r14=0x29a3bbaaf6b49218
+after:  $r27=0xffffffffffffffff, $r14=0x29a3bbaaf6b49218, $r14=0x29a3bbaaf6b49218
+orn $r17, $r12, $r31 ::
+before: $r17=0xf5195a72c175fed7, $r12=0x7aa8d4840359cbf6, $r31=0xa1a42af83c82215b
+after:  $r17=0x7efbd587c37ddff6, $r12=0x7aa8d4840359cbf6, $r31=0xa1a42af83c82215b
+orn $r16, $r20, $r20 ::
+before: $r16=0x76bb09b5b50705e2, $r20=0x613fdcbd8c1eba2a, $r20=0xfb1e04641f5da4ff
+after:  $r16=0xffffffffffffffff, $r20=0xfb1e04641f5da4ff, $r20=0xfb1e04641f5da4ff
+andn $r19, $r31, $r17 ::
+before: $r19=0xbcc81a9b2e349626, $r31=0x5a38a8ef9c7e30e4, $r17=0xcb490976d0652986
+after:  $r19=0x1030a0890c1a1060, $r31=0x5a38a8ef9c7e30e4, $r17=0xcb490976d0652986
+andn $r10, $r4, $r10 ::
+before: $r10=0x9acfa0cd6ea107fd, $r4=0x1d9b572e8f6bedb7, $r10=0x768fe778d2a543ea
+after:  $r10=0x091010060d4aac15, $r4=0x1d9b572e8f6bedb7, $r10=0x091010060d4aac15
+andn $r6, $r12, $r26 ::
+before: $r6=0x949e36cff3b5decb, $r12=0x56723f7285834fc9, $r26=0xf6fa544d6cd57fa8
+after:  $r6=0x00002b3281020041, $r12=0x56723f7285834fc9, $r26=0xf6fa544d6cd57fa8
+andn $r16, $r6, $r4 ::
+before: $r16=0x44a39d85132d6513, $r6=0x3ca7f972b865b7ce, $r4=0xf18819e4740308bc
+after:  $r16=0x0c27e0128864b742, $r6=0x3ca7f972b865b7ce, $r4=0xf18819e4740308bc
+andn $r19, $r26, $r15 ::
+before: $r19=0x856d1e3162c8fa2d, $r26=0x0c1ef79456be3885, $r15=0x03c089064e60da1d
+after:  $r19=0x0c1e7690109e2080, $r26=0x0c1ef79456be3885, $r15=0x03c089064e60da1d
+andn $r17, $r28, $r9 ::
+before: $r17=0x512a518c554f4b0a, $r28=0x043454425b8b7755, $r9=0xdc5dca386b49bdd7
+after:  $r17=0x0020144210824200, $r28=0x043454425b8b7755, $r9=0xdc5dca386b49bdd7
+andn $r16, $r16, $r14 ::
+before: $r16=0xa9c14796fec54f89, $r16=0xe31928f90d2723a4, $r14=0xcf2deaf4af11410a
+after:  $r16=0x20100009002622a4, $r16=0x20100009002622a4, $r14=0xcf2deaf4af11410a
+andn $r9, $r4, $r20 ::
+before: $r9=0x51d79964a699ec8d, $r4=0xe82135537ca93e7f, $r20=0xcbadcb1dc4dd0ed0
+after:  $r9=0x200034423820302f, $r4=0xe82135537ca93e7f, $r20=0xcbadcb1dc4dd0ed0
+andn $r18, $r25, $r25 ::
+before: $r18=0xeb546ce75bcba3f5, $r25=0x953d86e2bd6b136d, $r25=0x4914dbeee506d8ad
+after:  $r18=000000000000000000, $r25=0x4914dbeee506d8ad, $r25=0x4914dbeee506d8ad
+andn $r27, $r15, $r14 ::
+before: $r27=0xc8b599a43b0b4683, $r15=0x0509638630676b88, $r14=0x3d278ed22a112a89
+after:  $r27=0x0008610410664100, $r15=0x0509638630676b88, $r14=0x3d278ed22a112a89
+mul.w $r28, $r12, $r10 ::
+before: $r28=0xf6fcce3e1c5b1598, $r12=0xef2747013f911fe8, $r10=0x14a216fd69537967
+after:  $r28=0xffffffffabb07e58, $r12=0xef2747013f911fe8, $r10=0x14a216fd69537967
+mul.w $r13, $r18, $r24 ::
+before: $r13=0x5e8a32c1e1e12aa4, $r18=0x30e007bb8dd185fa, $r24=0x1a74dd893af9fb5a
+after:  $r13=0x000000003e2f37e4, $r18=0x30e007bb8dd185fa, $r24=0x1a74dd893af9fb5a
+mul.w $r10, $r20, $r4 ::
+before: $r10=0xf06f4af61b0e0c24, $r20=0x1b3624a77f26275f, $r4=0x653052ae3a1347df
+after:  $r10=0xffffffffc934a4c1, $r20=0x1b3624a77f26275f, $r4=0x653052ae3a1347df
+mul.w $r23, $r19, $r10 ::
+before: $r23=0xccb5485ae4605cdd, $r19=0x67c67c647eaf9e6c, $r10=0xfb9b6c7b49ec10cf
+after:  $r23=0x000000004177d954, $r19=0x67c67c647eaf9e6c, $r10=0xfb9b6c7b49ec10cf
+mul.w $r12, $r30, $r7 ::
+before: $r12=0xc1f45aaf98ffcb39, $r30=0x906f0c08c0bae02e, $r7=0xdf6cf5c05b5f2d34
+after:  $r12=0xffffffff8a6f9f58, $r30=0x906f0c08c0bae02e, $r7=0xdf6cf5c05b5f2d34
+mul.w $r27, $r12, $r12 ::
+before: $r27=0x9545c6d9f812c0d9, $r12=0xacd016cb69e028b3, $r12=0x2b68e3a280d9c0b6
+after:  $r27=0x00000000459d8164, $r12=0x2b68e3a280d9c0b6, $r12=0x2b68e3a280d9c0b6
+mul.w $r28, $r7, $r19 ::
+before: $r28=0x4cf68a9590da3da5, $r7=0x70ed8b9b03a6325d, $r19=0x1125383d12dad118
+after:  $r28=0x0000000073e4a5b8, $r7=0x70ed8b9b03a6325d, $r19=0x1125383d12dad118
+mul.w $r20, $r12, $r20 ::
+before: $r20=0x10683d31408fb4c5, $r12=0x9ef4ea79672ce58d, $r20=0x960a13776923d3e4
+after:  $r20=0x000000001c76a894, $r12=0x9ef4ea79672ce58d, $r20=0x000000001c76a894
+mul.w $r26, $r19, $r28 ::
+before: $r26=0xbf8a20b69fa4357b, $r19=0xf3e9b53a654e3cbf, $r28=0x20afdeb5a4b4e1c9
+after:  $r26=0x00000000601d90f7, $r19=0xf3e9b53a654e3cbf, $r28=0x20afdeb5a4b4e1c9
+mul.w $r13, $r26, $r25 ::
+before: $r13=0x78f637d350c666bf, $r26=0xff742d96dc73e9e9, $r25=0x94a3289b55744707
+after:  $r13=0xffffffff879f045f, $r26=0xff742d96dc73e9e9, $r25=0x94a3289b55744707
+mulh.w $r18, $r25, $r14 ::
+before: $r18=0xa988161162710d96, $r25=0x37443c6f5d0625ea, $r14=0x94da379219de8576
+after:  $r18=0x0000000009667587, $r25=0x37443c6f5d0625ea, $r14=0x94da379219de8576
+mulh.w $r13, $r16, $r18 ::
+before: $r13=0x246298a54a25030a, $r16=0x33643ceed35cff64, $r18=0xc25702631b42c849
+after:  $r13=0xfffffffffb3f29fd, $r16=0x33643ceed35cff64, $r18=0xc25702631b42c849
+mulh.w $r20, $r5, $r15 ::
+before: $r20=0x3b606ea986dcf13e, $r5=0x269dcd16567786d2, $r15=0x96c0983df45d5c03
+after:  $r20=0xfffffffffc11ee2e, $r5=0x269dcd16567786d2, $r15=0x96c0983df45d5c03
+mulh.w $r19, $r19, $r25 ::
+before: $r19=0xab8fc1c922ba3e7a, $r19=0xdec5bddca513d198, $r25=0xf05e814d67d43f5a
+after:  $r19=0xffffffffdb1f973d, $r19=0xffffffffdb1f973d, $r25=0xf05e814d67d43f5a
+mulh.w $r15, $r28, $r16 ::
+before: $r15=0x82fcfa24449231ba, $r28=0xf37548fee13133f3, $r16=0x256188ef96bb3d23
+after:  $r15=0x000000000cab1812, $r28=0xf37548fee13133f3, $r16=0x256188ef96bb3d23
+mulh.w $r24, $r9, $r27 ::
+before: $r24=0x858ddeb68e948058, $r9=0x0ffb64d62e202462, $r27=0xe07a6dae07f46c11
+after:  $r24=0x00000000016eeb19, $r9=0x0ffb64d62e202462, $r27=0xe07a6dae07f46c11
+mulh.w $r23, $r20, $r14 ::
+before: $r23=0x7713930e419350ff, $r20=0xd5d72e6efb86e428, $r14=0x49f87e78ddcc8400
+after:  $r23=0x000000000098fbfd, $r20=0xd5d72e6efb86e428, $r14=0x49f87e78ddcc8400
+mulh.w $r28, $r20, $r25 ::
+before: $r28=0x552a9b7f3fa0c48a, $r20=0xd616afd20f193287, $r25=0xbcd2ae680b131cd2
+after:  $r28=0x0000000000a735bd, $r20=0xd616afd20f193287, $r25=0xbcd2ae680b131cd2
+mulh.w $r16, $r19, $r12 ::
+before: $r16=0x94b154fc890497c3, $r19=0xd8217f47e4257a7c, $r12=0xb47bb0e4cff83cbf
+after:  $r16=0x000000000539d140, $r19=0xd8217f47e4257a7c, $r12=0xb47bb0e4cff83cbf
+mulh.w $r23, $r23, $r6 ::
+before: $r23=0x0afb7fddb344318f, $r23=0xaafee418c4267e18, $r6=0x1763f686cd41d46e
+after:  $r23=0x000000000bdcf0fd, $r23=0x000000000bdcf0fd, $r6=0x1763f686cd41d46e
+mulh.wu $r18, $r17, $r8 ::
+before: $r18=0xa92fa2817b19786c, $r17=0xaf23e3d2092f080c, $r8=0x771c36ac19259f2a
+after:  $r18=0x0000000000e6f14b, $r17=0xaf23e3d2092f080c, $r8=0x771c36ac19259f2a
+mulh.wu $r16, $r13, $r8 ::
+before: $r16=0xf4a7b7abe5f3831a, $r13=0xe8beff7f8f4330cd, $r8=0x38cebbe3d1af354d
+after:  $r16=0x000000007557e799, $r13=0xe8beff7f8f4330cd, $r8=0x38cebbe3d1af354d
+mulh.wu $r8, $r23, $r29 ::
+before: $r8=0x6ca8c7d8ec316750, $r23=0xc3a59754c752c3a5, $r29=0x4b77e251de7f45f1
+after:  $r8=0xffffffffad3cde2d, $r23=0xc3a59754c752c3a5, $r29=0x4b77e251de7f45f1
+mulh.wu $r20, $r25, $r30 ::
+before: $r20=0x6faa5d1372250132, $r25=0x68734123142c820a, $r30=0x0f7b4bdf342e2017
+after:  $r20=0x00000000041cacf0, $r25=0x68734123142c820a, $r30=0x0f7b4bdf342e2017
+mulh.wu $r31, $r18, $r19 ::
+before: $r31=0x08cfa67422c1c5d5, $r18=0xb48ac9531206cef2, $r19=0x9f9f5d925c5cf738
+after:  $r31=0x000000000680fe39, $r18=0xb48ac9531206cef2, $r19=0x9f9f5d925c5cf738
+mulh.wu $r25, $r7, $r27 ::
+before: $r25=0x85aa17ff1b3699ba, $r7=0x9a7aeabb800edb53, $r27=0x4eb1ec754c7cdb59
+after:  $r25=0x000000002642de08, $r7=0x9a7aeabb800edb53, $r27=0x4eb1ec754c7cdb59
+mulh.wu $r19, $r4, $r28 ::
+before: $r19=0x821038d7fb43149c, $r4=0x44cd20261f5ae87e, $r28=0xf9d8916e8eb4ecb1
+after:  $r19=0x00000000117a95de, $r4=0x44cd20261f5ae87e, $r28=0xf9d8916e8eb4ecb1
+mulh.wu $r30, $r23, $r28 ::
+before: $r30=0xef34433557594fb3, $r23=0x2f9401c8064c8ca0, $r28=0x5de6287c2a56e507
+after:  $r30=0x00000000010ab26c, $r23=0x2f9401c8064c8ca0, $r28=0x5de6287c2a56e507
+mulh.wu $r13, $r6, $r17 ::
+before: $r13=0xd6b38c427ad5f669, $r6=0xbe04ea8987b20188, $r17=0x52cee1d144e3c134
+after:  $r13=0x00000000248401a8, $r6=0xbe04ea8987b20188, $r17=0x52cee1d144e3c134
+mulh.wu $r26, $r19, $r17 ::
+before: $r26=0x2ea15eee9429b8a0, $r19=0x43598be92000d9f7, $r17=0x6364cfeb707aba6c
+after:  $r26=0x000000000e0fb712, $r19=0x43598be92000d9f7, $r17=0x6364cfeb707aba6c
+mul.d $r19, $r4, $r10 ::
+before: $r19=0xf0235819cf1bab1f, $r4=0xdc7a0086353cfddf, $r10=0x6f18aec465b5af87
+after:  $r19=0xb1beaa2f3e605199, $r4=0xdc7a0086353cfddf, $r10=0x6f18aec465b5af87
+mul.d $r19, $r31, $r20 ::
+before: $r19=0x24d7526c5e4669e3, $r31=0xaab7dd46e5af2493, $r20=0xd5df6eea42205e25
+after:  $r19=0x7ec27945fa1e433f, $r31=0xaab7dd46e5af2493, $r20=0xd5df6eea42205e25
+mul.d $r15, $r20, $r4 ::
+before: $r15=0x3740ba48d64cc478, $r20=0xcfeffb7c35a98382, $r4=0xeab050fc9bdb3c52
+after:  $r15=0x3ae548f8215497a4, $r20=0xcfeffb7c35a98382, $r4=0xeab050fc9bdb3c52
+mul.d $r29, $r7, $r25 ::
+before: $r29=0xe8858552c0e8eac8, $r7=0xb65ed231c27efb70, $r25=0xbb753de59e4ca3d1
+after:  $r29=0x57c0018869039670, $r7=0xb65ed231c27efb70, $r25=0xbb753de59e4ca3d1
+mul.d $r5, $r30, $r4 ::
+before: $r5=0xc4f17df5c983317d, $r30=0xb2af9e86d443d8ce, $r4=0xf9e3c6d18372d0d3
+after:  $r5=0xeff3c7ee09cf11ca, $r30=0xb2af9e86d443d8ce, $r4=0xf9e3c6d18372d0d3
+mul.d $r25, $r17, $r29 ::
+before: $r25=0xa09d11d50056b350, $r17=0x6609b14ca65f9aff, $r29=0x692def5a14a3278c
+after:  $r25=0xbd4098e529429c74, $r17=0x6609b14ca65f9aff, $r29=0x692def5a14a3278c
+mul.d $r13, $r15, $r26 ::
+before: $r13=0xd528ed047af75775, $r15=0x896658fe826a0817, $r26=0xa456f53d5f2760b1
+after:  $r13=0x630a2082b2d937e7, $r15=0x896658fe826a0817, $r26=0xa456f53d5f2760b1
+mul.d $r23, $r9, $r7 ::
+before: $r23=0x5d33f63ce8637a69, $r9=0xad38922264c721ff, $r7=0xe0514fea4ee52aca
+after:  $r23=0x9d478a3f4bcfa936, $r9=0xad38922264c721ff, $r7=0xe0514fea4ee52aca
+mul.d $r25, $r23, $r30 ::
+before: $r25=0x5d74125f059662f3, $r23=0xa708100731e88710, $r30=0x739e4de71fec92e0
+after:  $r25=0xeb30fae9bb3d4e00, $r23=0xa708100731e88710, $r30=0x739e4de71fec92e0
+mul.d $r26, $r18, $r30 ::
+before: $r26=0x110a94ffa2e12f32, $r18=0x01b770d6c423d4f8, $r30=0x38bf04d66f91531a
+after:  $r26=0x5937a05ab2280930, $r18=0x01b770d6c423d4f8, $r30=0x38bf04d66f91531a
+mulh.d $r5, $r15, $r12 ::
+before: $r5=0xd72f46d42ca4db6b, $r15=0xe1771af0e69e49a6, $r12=0xd796f52fbd01a4bb
+after:  $r5=0x04d1eb3a7f530298, $r15=0xe1771af0e69e49a6, $r12=0xd796f52fbd01a4bb
+mulh.d $r28, $r18, $r14 ::
+before: $r28=0x904e699bcbe32b08, $r18=0x9b5b69b4d817779c, $r14=0xa02ca97cc4e37f13
+after:  $r28=0x25ac2970a5b47a76, $r18=0x9b5b69b4d817779c, $r14=0xa02ca97cc4e37f13
+mulh.d $r6, $r12, $r7 ::
+before: $r6=0xc75e1065b8dbcd34, $r12=0xec7d8ae6a65f2fd3, $r7=0xb7e32b52f40bc8ef
+after:  $r6=0x057ee36929066010, $r12=0xec7d8ae6a65f2fd3, $r7=0xb7e32b52f40bc8ef
+mulh.d $r5, $r25, $r19 ::
+before: $r5=0x7b2e04c0c2f95e4f, $r25=0x9a5037ff200e982a, $r19=0xf862c0c6425ff2bc
+after:  $r5=0x03064462e05709fc, $r25=0x9a5037ff200e982a, $r19=0xf862c0c6425ff2bc
+mulh.d $r14, $r8, $r23 ::
+before: $r14=0x5fd7ae31ad151daa, $r8=0x444243172f499ec0, $r23=0x9003c8aeabc39884
+after:  $r14=0xe22404eefbd57910, $r8=0x444243172f499ec0, $r23=0x9003c8aeabc39884
+mulh.d $r7, $r23, $r13 ::
+before: $r7=0x0bc21ca397041a2b, $r23=0xe886455c8737b2ca, $r13=0xd5ccec2f631a1d60
+after:  $r7=0x03dea7b02a86f5c2, $r23=0xe886455c8737b2ca, $r13=0xd5ccec2f631a1d60
+mulh.d $r26, $r16, $r13 ::
+before: $r26=0xd3894783f187ee9c, $r16=0xa7a6c4abeda9a22c, $r13=0x4375f7e49ed91384
+after:  $r26=0xe8b7ef23e33e1269, $r16=0xa7a6c4abeda9a22c, $r13=0x4375f7e49ed91384
+mulh.d $r17, $r31, $r16 ::
+before: $r17=0xa93bd0cf9137745e, $r31=0x3a1b2b922b7645f1, $r16=0x7e33f64c19972ae3
+after:  $r17=0x1ca52ac301413b29, $r31=0x3a1b2b922b7645f1, $r16=0x7e33f64c19972ae3
+mulh.d $r20, $r19, $r8 ::
+before: $r20=0xda9224c9ab488939, $r19=0xb7f5978bf509641d, $r8=0xf6fcd615333c30c0
+after:  $r20=0x028941970b9c41ae, $r19=0xb7f5978bf509641d, $r8=0xf6fcd615333c30c0
+mulh.d $r12, $r17, $r20 ::
+before: $r12=0xcdbd51e35d5c1df3, $r17=0x254bd8eaadc946fe, $r20=0x9de163435088598b
+after:  $r12=0xf1b4813d0885ff33, $r17=0x254bd8eaadc946fe, $r20=0x9de163435088598b
+mulh.du $r25, $r28, $r29 ::
+before: $r25=0xf7ef0dbf1bf7938a, $r28=0xd267d11ae422f604, $r29=0x089d6fd68226e13d
+after:  $r25=0x0714a41f660b233e, $r28=0xd267d11ae422f604, $r29=0x089d6fd68226e13d
+mulh.du $r7, $r28, $r24 ::
+before: $r7=0xe568cf4a6d6bc199, $r28=0x6efedad6fbe95f2a, $r24=0xdf55853ed22d024e
+after:  $r7=0x60d51505935d32a4, $r28=0x6efedad6fbe95f2a, $r24=0xdf55853ed22d024e
+mulh.du $r25, $r8, $r9 ::
+before: $r25=0x0bf7c0226b0c2072, $r8=0x794fd44a65c65ebb, $r9=0xa0391c3fa3cf1e5c
+after:  $r25=0x4becf4d7a7a9ffeb, $r8=0x794fd44a65c65ebb, $r9=0xa0391c3fa3cf1e5c
+mulh.du $r30, $r16, $r7 ::
+before: $r30=0x3df3f3b3ff17f61a, $r16=0xcadd1f7e7150ad7b, $r7=0xbdc63d3f762cf02d
+after:  $r30=0x966257cfb0059e70, $r16=0xcadd1f7e7150ad7b, $r7=0xbdc63d3f762cf02d
+mulh.du $r6, $r10, $r19 ::
+before: $r6=0x6601e05fc5f801cb, $r10=0xbc10a70104969251, $r19=0x2f50a00036fb7821
+after:  $r6=0x22c24967f0edf696, $r10=0xbc10a70104969251, $r19=0x2f50a00036fb7821
+mulh.du $r17, $r9, $r5 ::
+before: $r17=0xffabc0cbdc8aa7b0, $r9=0x5288bc60da558afb, $r5=0x2795644a58b2668f
+after:  $r17=0x0cc2fe9dc756ea23, $r9=0x5288bc60da558afb, $r5=0x2795644a58b2668f
+mulh.du $r26, $r8, $r15 ::
+before: $r26=0x68b64c997f561b59, $r8=0xe2ed2375e64b1bf3, $r15=0xe1033e583092ad96
+after:  $r26=0xc7754c35a4f2f082, $r8=0xe2ed2375e64b1bf3, $r15=0xe1033e583092ad96
+mulh.du $r10, $r13, $r30 ::
+before: $r10=0x6450ec488eb4753b, $r13=0x4287b82860366cf8, $r30=0x01c15ed3f051fe8c
+after:  $r10=0x0074c8aee8c0e7ce, $r13=0x4287b82860366cf8, $r30=0x01c15ed3f051fe8c
+mulh.du $r24, $r13, $r15 ::
+before: $r24=0x1169fa9dd6f8273d, $r13=0x6fd2cdb39e5d1fa3, $r15=0xff0526e206880684
+after:  $r24=0x6f653afff4bd7810, $r13=0x6fd2cdb39e5d1fa3, $r15=0xff0526e206880684
+mulh.du $r8, $r9, $r10 ::
+before: $r8=0xe9cb6416a1492fbf, $r9=0xaf89960e18913df0, $r10=0x76b4251409ff9830
+after:  $r8=0x5164f154a1871400, $r9=0xaf89960e18913df0, $r10=0x76b4251409ff9830
+mulw.d.w $r6, $r31, $r7 ::
+before: $r6=0x50ce021eb3b3f3a4, $r31=0xb859e7514e4c4d7c, $r7=0x372cb1e2b3200f36
+after:  $r6=0xe87cdae260229c28, $r31=0xb859e7514e4c4d7c, $r7=0x372cb1e2b3200f36
+mulw.d.w $r31, $r7, $r28 ::
+before: $r31=0x925642fa7e2de9ab, $r7=0x61404b6550238ceb, $r28=0x75ed502242ed0430
+after:  $r31=0x14f35c8da06d1810, $r7=0x61404b6550238ceb, $r28=0x75ed502242ed0430
+mulw.d.w $r19, $r16, $r10 ::
+before: $r19=0x0ef82de697f7239f, $r16=0xdf1c56dfe5c0e48d, $r10=0xbc7e740fe1b1dc25
+after:  $r19=0x031b681eebc73461, $r16=0xdf1c56dfe5c0e48d, $r10=0xbc7e740fe1b1dc25
+mulw.d.w $r29, $r12, $r27 ::
+before: $r29=0xc104a400fa0d1dbf, $r12=0x2aa34e8a5fad6c6f, $r27=0x7f8e4d23644b0d4d
+after:  $r29=0x257bcb22b6304063, $r12=0x2aa34e8a5fad6c6f, $r27=0x7f8e4d23644b0d4d
+mulw.d.w $r25, $r16, $r25 ::
+before: $r25=0x5b8ff9172c849fb9, $r16=0x843f90380af6f2af, $r25=0x12f7f8780cb8bfe0
+after:  $r25=0x008b7d1678ecea20, $r16=0x843f90380af6f2af, $r25=0x008b7d1678ecea20
+mulw.d.w $r13, $r13, $r7 ::
+before: $r13=0x6bba79a88056d891, $r13=0x6757a43d403285ab, $r7=0x2d2ea385888c2664
+after:  $r13=0xe20b7699851798cc, $r13=0xe20b7699851798cc, $r7=0x2d2ea385888c2664
+mulw.d.w $r12, $r8, $r23 ::
+before: $r12=0x5c96927dcf1fb14e, $r8=0x2b3767b9e9029d4b, $r23=0x252bbcc66b5d834b
+after:  $r12=0xf65bb1e7178075f9, $r8=0x2b3767b9e9029d4b, $r23=0x252bbcc66b5d834b
+mulw.d.w $r6, $r13, $r10 ::
+before: $r6=0x5fa5a8b36e8ec3e0, $r13=0xcbca4b4d518b9466, $r10=0xabdf2ec674f70c5b
+after:  $r6=0x2541f0d9edfc8842, $r13=0xcbca4b4d518b9466, $r10=0xabdf2ec674f70c5b
+mulw.d.w $r16, $r15, $r23 ::
+before: $r16=0x5b94eeb9c3c9fa01, $r15=0x5c4ebef486f83b43, $r23=0x73f3781c3a1e9216
+after:  $r16=0xe485c9734afb4dc2, $r15=0x5c4ebef486f83b43, $r23=0x73f3781c3a1e9216
+mulw.d.w $r6, $r31, $r7 ::
+before: $r6=0xbc263312a123caed, $r31=0xe9aa8545d3a99a97, $r7=0x71b5dbacf4f7f2b8
+after:  $r6=0x01e91b5b89bada88, $r31=0xe9aa8545d3a99a97, $r7=0x71b5dbacf4f7f2b8
+mulw.d.wu $r14, $r17, $r30 ::
+before: $r14=0x94452e0d7eb407b7, $r17=0x629b1902a484a77d, $r30=0x474359ca7f7165ed
+after:  $r14=0x51e6af2596105fb9, $r17=0x629b1902a484a77d, $r30=0x474359ca7f7165ed
+mulw.d.wu $r26, $r7, $r5 ::
+before: $r26=0xae9771f0d59319b3, $r7=0x1bcb563dea8f3a3f, $r5=0x759334cc2d543103
+after:  $r26=0x29885124597fbdbd, $r7=0x1bcb563dea8f3a3f, $r5=0x759334cc2d543103
+mulw.d.wu $r25, $r28, $r27 ::
+before: $r25=0x27ca0bf2d6cd2699, $r28=0x5a015da9b52ffc64, $r27=0x482a4fa5b5625914
+after:  $r25=0x806088dd28c67bd0, $r28=0x5a015da9b52ffc64, $r27=0x482a4fa5b5625914
+mulw.d.wu $r8, $r4, $r16 ::
+before: $r8=0x22f61239dad7bc92, $r4=0xe8c9964b31b0e199, $r16=0x99fdef421aa22322
+after:  $r8=0x052b6faa1527e152, $r4=0xe8c9964b31b0e199, $r16=0x99fdef421aa22322
+mulw.d.wu $r29, $r17, $r15 ::
+before: $r29=0xcc5eec6e4f2b5fdb, $r17=0x2d08ada074c2ac37, $r15=0x8967ce1cd4c2362e
+after:  $r29=0x6109cada18fc8be2, $r17=0x2d08ada074c2ac37, $r15=0x8967ce1cd4c2362e
+mulw.d.wu $r27, $r23, $r16 ::
+before: $r27=0x2d057e2ead214d6c, $r23=0x987e7a10a0f3ee5d, $r16=0xd515e2a2f06be633
+after:  $r27=0x97288627099f0a87, $r23=0x987e7a10a0f3ee5d, $r16=0xd515e2a2f06be633
+mulw.d.wu $r15, $r19, $r12 ::
+before: $r15=0xce24943d6fe20263, $r19=0xd6bbdcb20d76de15, $r12=0xcc277905bc41da62
+after:  $r15=0x09e6c1c22ff3e60a, $r19=0xd6bbdcb20d76de15, $r12=0xcc277905bc41da62
+mulw.d.wu $r4, $r4, $r19 ::
+before: $r4=0xe37942a26dc0e882, $r4=0x6a30fb04c3b5431f, $r19=0x4c937bed67cb6c73
+after:  $r4=0x4f5971a615533aed, $r4=0x4f5971a615533aed, $r19=0x4c937bed67cb6c73
+mulw.d.wu $r7, $r12, $r9 ::
+before: $r7=0xbdebe7a7b19b7dc0, $r12=0x3f6e790fb24d19f1, $r9=0x7a19c4fdd0d29f3e
+after:  $r7=0x9171573c297af75e, $r12=0x3f6e790fb24d19f1, $r9=0x7a19c4fdd0d29f3e
+mulw.d.wu $r31, $r30, $r28 ::
+before: $r31=0x690687056e169108, $r30=0xa8abab5bf1d42538, $r28=0x0636a31884ca1e99
+after:  $r31=0x7d70517da256ce78, $r30=0xa8abab5bf1d42538, $r28=0x0636a31884ca1e99
+div.w $r13, $r28, $r23 ::
+before: $r13=0x0000000016546290, $r28=0x00000000627aa138, $r23=0x000000000534168c
+after:  $r13=0x0000000000000012, $r28=0x00000000627aa138, $r23=0x000000000534168c
+div.w $r28, $r19, $r9 ::
+before: $r28=0xffffffffbe03930d, $r19=0x00000000223d0ec7, $r9=0xffffffff8404aa67
+after:  $r28=000000000000000000, $r19=0x00000000223d0ec7, $r9=0xffffffff8404aa67
+div.w $r18, $r19, $r30 ::
+before: $r18=0xffffffffac214649, $r19=0xffffffff8019c3b7, $r30=0xffffffff871cbf90
+after:  $r18=0x0000000000000001, $r19=0xffffffff8019c3b7, $r30=0xffffffff871cbf90
+div.w $r24, $r25, $r7 ::
+before: $r24=0xffffffffa144ed80, $r25=0x000000001c4370c7, $r7=0x000000004695aa29
+after:  $r24=000000000000000000, $r25=0x000000001c4370c7, $r7=0x000000004695aa29
+div.w $r9, $r27, $r4 ::
+before: $r9=0x000000003ae8b7c7, $r27=0xfffffffff3a6ebb2, $r4=0x00000000181d816a
+after:  $r9=000000000000000000, $r27=0xfffffffff3a6ebb2, $r4=0x00000000181d816a
+div.w $r28, $r15, $r7 ::
+before: $r28=0xffffffff956a7de4, $r15=0xffffffff9aab217b, $r7=0x000000003b061b78
+after:  $r28=0xffffffffffffffff, $r15=0xffffffff9aab217b, $r7=0x000000003b061b78
+div.w $r25, $r24, $r12 ::
+before: $r25=0x000000003c6167d4, $r24=0x000000002673145e, $r12=0x0000000001d5e391
+after:  $r25=0x0000000000000014, $r24=0x000000002673145e, $r12=0x0000000001d5e391
+div.w $r23, $r15, $r4 ::
+before: $r23=0x000000003e0820ee, $r15=0x0000000042793c51, $r4=0x00000000286cdb51
+after:  $r23=0x0000000000000001, $r15=0x0000000042793c51, $r4=0x00000000286cdb51
+div.w $r28, $r16, $r30 ::
+before: $r28=0xffffffffcf8fd242, $r16=0x000000002a76141e, $r30=0x0000000002429a52
+after:  $r28=0x0000000000000012, $r16=0x000000002a76141e, $r30=0x0000000002429a52
+div.w $r29, $r8, $r18 ::
+before: $r29=0x0000000074991388, $r8=0xffffffffd594ef43, $r18=0x000000006d3f9603
+after:  $r29=000000000000000000, $r8=0xffffffffd594ef43, $r18=0x000000006d3f9603
+mod.w $r8, $r13, $r14 ::
+before: $r8=0x000000005cc9e6db, $r13=0xfffffffff7327c6d, $r14=0x0000000023eef833
+after:  $r8=0xfffffffff7327c6d, $r13=0xfffffffff7327c6d, $r14=0x0000000023eef833
+mod.w $r25, $r24, $r25 ::
+before: $r25=0x00000000539195e4, $r24=0xffffffffd94f10c8, $r25=0x000000002c5786d9
+after:  $r25=0xffffffffd94f10c8, $r24=0xffffffffd94f10c8, $r25=0xffffffffd94f10c8
+mod.w $r10, $r16, $r23 ::
+before: $r10=0xffffffff9b15f725, $r16=0x00000000448a831d, $r23=0xffffffffd5d7d92b
+after:  $r10=0x000000001a625c48, $r16=0x00000000448a831d, $r23=0xffffffffd5d7d92b
+mod.w $r6, $r5, $r29 ::
+before: $r6=0x000000001794d969, $r5=0x000000002fba86b0, $r29=0x0000000040e6ab6b
+after:  $r6=0x000000002fba86b0, $r5=0x000000002fba86b0, $r29=0x0000000040e6ab6b
+mod.w $r16, $r14, $r29 ::
+before: $r16=0x000000006a503328, $r14=0xffffffffdf0b2ad2, $r29=0xffffffff90dc29c6
+after:  $r16=0xffffffffdf0b2ad2, $r14=0xffffffffdf0b2ad2, $r29=0xffffffff90dc29c6
+mod.w $r30, $r14, $r18 ::
+before: $r30=0xffffffffc7670acd, $r14=0x0000000053f3b34f, $r18=0xffffffff84b62159
+after:  $r30=0x0000000053f3b34f, $r14=0x0000000053f3b34f, $r18=0xffffffff84b62159
+mod.w $r31, $r6, $r18 ::
+before: $r31=0xffffffff98334c95, $r6=0xfffffffff241ffd8, $r18=0xffffffffa73314aa
+after:  $r31=0xfffffffff241ffd8, $r6=0xfffffffff241ffd8, $r18=0xffffffffa73314aa
+mod.w $r12, $r8, $r4 ::
+before: $r12=0xffffffffd9f19db4, $r8=0xffffffffc89f9796, $r4=0xffffffffaa8e2a3b
+after:  $r12=0xffffffffc89f9796, $r8=0xffffffffc89f9796, $r4=0xffffffffaa8e2a3b
+mod.w $r23, $r12, $r4 ::
+before: $r23=0xffffffff94e93220, $r12=0xfffffffffea1587a, $r4=0xffffffffb88b2b87
+after:  $r23=0xfffffffffea1587a, $r12=0xfffffffffea1587a, $r4=0xffffffffb88b2b87
+mod.w $r13, $r9, $r18 ::
+before: $r13=0x0000000000f718c0, $r9=0xffffffffe264a3a5, $r18=0x0000000002f29ef3
+after:  $r13=0xffffffffffded923, $r9=0xffffffffe264a3a5, $r18=0x0000000002f29ef3
+div.wu $r24, $r5, $r16 ::
+before: $r24=0x000000000ddf57c5, $r5=0x000000006b1a808c, $r16=0x000000000576fe70
+after:  $r24=0x0000000000000013, $r5=0x000000006b1a808c, $r16=0x000000000576fe70
+div.wu $r26, $r7, $r9 ::
+before: $r26=0x00000000665e82ff, $r7=0x00000000344d887f, $r9=0x000000007fd6d6d8
+after:  $r26=000000000000000000, $r7=0x00000000344d887f, $r9=0x000000007fd6d6d8
+div.wu $r13, $r18, $r15 ::
+before: $r13=0xffffffffe82e2cf8, $r18=0x000000007c66b628, $r15=0x000000000305c899
+after:  $r13=0x0000000000000029, $r18=0x000000007c66b628, $r15=0x000000000305c899
+div.wu $r15, $r14, $r7 ::
+before: $r15=0x0000000000b06b1f, $r14=0x0000000056016282, $r7=0x00000000095a8701
+after:  $r15=0x0000000000000009, $r14=0x0000000056016282, $r7=0x00000000095a8701
+div.wu $r19, $r12, $r31 ::
+before: $r19=0xffffffffb3a487d1, $r12=0xffffffffbe2fe16e, $r31=0xffffffff8dc0ff7f
+after:  $r19=0x0000000000000001, $r12=0xffffffffbe2fe16e, $r31=0xffffffff8dc0ff7f
+div.wu $r6, $r10, $r20 ::
+before: $r6=0x000000001bb491e9, $r10=0x00000000064e382e, $r20=0x000000005977f9f1
+after:  $r6=000000000000000000, $r10=0x00000000064e382e, $r20=0x000000005977f9f1
+div.wu $r9, $r29, $r28 ::
+before: $r9=0x00000000498c3349, $r29=0x0000000014cbb257, $r28=0xffffffff95165a4a
+after:  $r9=000000000000000000, $r29=0x0000000014cbb257, $r28=0xffffffff95165a4a
+div.wu $r10, $r29, $r15 ::
+before: $r10=0xffffffffbb3f9c5d, $r29=0x000000002755057d, $r15=0x0000000014039cc4
+after:  $r10=0x0000000000000001, $r29=0x000000002755057d, $r15=0x0000000014039cc4
+div.wu $r24, $r31, $r7 ::
+before: $r24=0xffffffffe5a9a3cd, $r31=0xffffffffa1f84b49, $r7=0xffffffffe45bd3b9
+after:  $r24=000000000000000000, $r31=0xffffffffa1f84b49, $r7=0xffffffffe45bd3b9
+div.wu $r23, $r18, $r6 ::
+before: $r23=0x0000000054e07e9f, $r18=0xffffffffaccbdd8c, $r6=0xfffffffff3729b57
+after:  $r23=000000000000000000, $r18=0xffffffffaccbdd8c, $r6=0xfffffffff3729b57
+mod.wu $r5, $r20, $r18 ::
+before: $r5=0xffffffffa1ce2e4e, $r20=0xffffffffdbeb0e2d, $r18=0x0000000070157135
+after:  $r5=0x000000006bd59cf8, $r20=0xffffffffdbeb0e2d, $r18=0x0000000070157135
+mod.wu $r14, $r30, $r17 ::
+before: $r14=0x0000000010e75d07, $r30=0x00000000039c3080, $r17=0x000000001658d87b
+after:  $r14=0x00000000039c3080, $r30=0x00000000039c3080, $r17=0x000000001658d87b
+mod.wu $r28, $r7, $r4 ::
+before: $r28=0x000000006df194db, $r7=0x0000000055fae7c9, $r4=0xffffffff9a87c1ef
+after:  $r28=0x0000000055fae7c9, $r7=0x0000000055fae7c9, $r4=0xffffffff9a87c1ef
+mod.wu $r6, $r14, $r10 ::
+before: $r6=0xffffffff8feb78cc, $r14=0xffffffffe5032316, $r10=0x0000000018ab441e
+after:  $r6=0x0000000006fdbe08, $r14=0xffffffffe5032316, $r10=0x0000000018ab441e
+mod.wu $r13, $r15, $r9 ::
+before: $r13=0xffffffffbb28952c, $r15=0x000000002d43f57d, $r9=0x000000002dfbf584
+after:  $r13=0x000000002d43f57d, $r15=0x000000002d43f57d, $r9=0x000000002dfbf584
+mod.wu $r7, $r30, $r5 ::
+before: $r7=0x0000000009bfb2cf, $r30=0x000000006595d7b3, $r5=0xfffffffffffd1025
+after:  $r7=0x000000006595d7b3, $r30=0x000000006595d7b3, $r5=0xfffffffffffd1025
+mod.wu $r10, $r9, $r16 ::
+before: $r10=0x00000000342671c6, $r9=0xfffffffff1ff8be3, $r16=0xfffffffffaea052b
+after:  $r10=0xfffffffff1ff8be3, $r9=0xfffffffff1ff8be3, $r16=0xfffffffffaea052b
+mod.wu $r16, $r16, $r23 ::
+before: $r16=0xffffffffc0356055, $r16=0x000000002ac1f414, $r23=0x000000004a75c890
+after:  $r16=0x000000002ac1f414, $r16=0x000000002ac1f414, $r23=0x000000004a75c890
+mod.wu $r19, $r8, $r7 ::
+before: $r19=0xfffffffff8ed6580, $r8=0x000000005fef460e, $r7=0x0000000068eedef2
+after:  $r19=0x000000005fef460e, $r8=0x000000005fef460e, $r7=0x0000000068eedef2
+mod.wu $r29, $r25, $r25 ::
+before: $r29=0xffffffff9ea76eb0, $r25=0xffffffff818904b9, $r25=0xffffffffe92f4f30
+after:  $r29=000000000000000000, $r25=0xffffffffe92f4f30, $r25=0xffffffffe92f4f30
+div.d $r7, $r17, $r7 ::
+before: $r7=0xc8f25fb958f2d668, $r17=0x074a14cbaa00fdea, $r7=0xcf95f3de82ceb015
+after:  $r7=000000000000000000, $r17=0x074a14cbaa00fdea, $r7=000000000000000000
+div.d $r10, $r19, $r12 ::
+before: $r10=0x9ead8a6f6ea63534, $r19=0xaf80d344d48e6cd5, $r12=0xe1f40f759cbfe0e7
+after:  $r10=0x0000000000000002, $r19=0xaf80d344d48e6cd5, $r12=0xe1f40f759cbfe0e7
+div.d $r23, $r28, $r28 ::
+before: $r23=0x35481a5285093e04, $r28=0xfd79e3c19b697fa8, $r28=0x6ffab603b9e1b7fb
+after:  $r23=0x0000000000000001, $r28=0x6ffab603b9e1b7fb, $r28=0x6ffab603b9e1b7fb
+div.d $r30, $r25, $r4 ::
+before: $r30=0x3eacf1d695a34b95, $r25=0xfbff957ab051d494, $r4=0x0670724b8930d53f
+after:  $r30=000000000000000000, $r25=0xfbff957ab051d494, $r4=0x0670724b8930d53f
+div.d $r31, $r29, $r6 ::
+before: $r31=0xce8d3df48871d655, $r29=0xf351f7f35927e83d, $r6=0x93a3085686f4101f
+after:  $r31=000000000000000000, $r29=0xf351f7f35927e83d, $r6=0x93a3085686f4101f
+div.d $r17, $r23, $r8 ::
+before: $r17=0xfc913f8b14dda5a5, $r23=0x001f938af81988de, $r8=0x9d021a9f06b46953
+after:  $r17=000000000000000000, $r23=0x001f938af81988de, $r8=0x9d021a9f06b46953
+div.d $r7, $r29, $r15 ::
+before: $r7=0x4593da2923f2ac5b, $r29=0x11fc5a958b182a55, $r15=0x2edafaf2857c6697
+after:  $r7=000000000000000000, $r29=0x11fc5a958b182a55, $r15=0x2edafaf2857c6697
+div.d $r13, $r31, $r27 ::
+before: $r13=0x97236145608dd8c3, $r31=0x1f0ee96afd23910b, $r27=0xe35e4d5efd2204d3
+after:  $r13=0xffffffffffffffff, $r31=0x1f0ee96afd23910b, $r27=0xe35e4d5efd2204d3
+div.d $r13, $r26, $r14 ::
+before: $r13=0x2c057bd222f216df, $r26=0x1e006853720971c3, $r14=0x81e35a993e6a15b5
+after:  $r13=000000000000000000, $r26=0x1e006853720971c3, $r14=0x81e35a993e6a15b5
+div.d $r5, $r9, $r4 ::
+before: $r5=0x93c0d85c66f2c5ab, $r9=0x774fbe894b2ed067, $r4=0x2c46387d55732742
+after:  $r5=0x0000000000000002, $r9=0x774fbe894b2ed067, $r4=0x2c46387d55732742
+mod.d $r19, $r26, $r16 ::
+before: $r19=0x63304d2181f4a4da, $r26=0x9ed948849ddee475, $r16=0x18a360d3ab980398
+after:  $r19=0xe8c36affa0a6ef3d, $r26=0x9ed948849ddee475, $r16=0x18a360d3ab980398
+mod.d $r27, $r23, $r13 ::
+before: $r27=0xf7156e74db7a8d92, $r23=0x324e7001287ce2a8, $r13=0x3cc7524686bed31c
+after:  $r27=0x324e7001287ce2a8, $r23=0x324e7001287ce2a8, $r13=0x3cc7524686bed31c
+mod.d $r8, $r26, $r19 ::
+before: $r8=0x7bda37a222135803, $r26=0x1daf8fd66ff987ed, $r19=0x334631279104fc3b
+after:  $r8=0x1daf8fd66ff987ed, $r26=0x1daf8fd66ff987ed, $r19=0x334631279104fc3b
+mod.d $r25, $r15, $r7 ::
+before: $r25=0xd1a0f45d5b463d53, $r15=0x9c4cd7bef3bf0712, $r7=0x420a5c702006f3cc
+after:  $r25=0xde57342f13c5fade, $r15=0x9c4cd7bef3bf0712, $r7=0x420a5c702006f3cc
+mod.d $r25, $r18, $r7 ::
+before: $r25=0x93487a905cb08a75, $r18=0x8c79cafa8bebf0a8, $r7=0x1478409d192c144b
+after:  $r25=0xf2d30e0c09c8561f, $r18=0x8c79cafa8bebf0a8, $r7=0x1478409d192c144b
+mod.d $r8, $r27, $r27 ::
+before: $r8=0x8756a1690dd7896d, $r27=0x35273279ea76319f, $r27=0xc5292f2331abc6dd
+after:  $r8=000000000000000000, $r27=0xc5292f2331abc6dd, $r27=0xc5292f2331abc6dd
+mod.d $r15, $r10, $r24 ::
+before: $r15=0xf8c476adbc930802, $r10=0x8b5832bcd0f6c87e, $r24=0x6cba54a72da38702
+after:  $r15=0xf8128763fe9a4f80, $r10=0x8b5832bcd0f6c87e, $r24=0x6cba54a72da38702
+mod.d $r27, $r7, $r6 ::
+before: $r27=0x2387015bddb2c076, $r7=0x231e30de7a72ad90, $r6=0x81f1285973e8dc11
+after:  $r27=0x231e30de7a72ad90, $r7=0x231e30de7a72ad90, $r6=0x81f1285973e8dc11
+mod.d $r16, $r9, $r12 ::
+before: $r16=0x3388d23c07feb1da, $r9=0xe8c01f744b310474, $r12=0xa29071d702959009
+after:  $r16=0xe8c01f744b310474, $r9=0xe8c01f744b310474, $r12=0xa29071d702959009
+mod.d $r13, $r10, $r20 ::
+before: $r13=0xbd45a261f8de4fe4, $r10=0x6fb0a8c9a2681a8e, $r20=0x2f1b7055cf2409ec
+after:  $r13=0x1179c81e042006b6, $r10=0x6fb0a8c9a2681a8e, $r20=0x2f1b7055cf2409ec
+div.du $r17, $r10, $r24 ::
+before: $r17=0x4d363fd48a626fda, $r10=0x7ccdeeaa6c24885f, $r24=0xfcc68e72f59750ae
+after:  $r17=000000000000000000, $r10=0x7ccdeeaa6c24885f, $r24=0xfcc68e72f59750ae
+div.du $r20, $r20, $r10 ::
+before: $r20=0x808fa5cb6a75fd6f, $r20=0x0f3f712970031005, $r10=0x1709a8adab2fa578
+after:  $r20=000000000000000000, $r20=000000000000000000, $r10=0x1709a8adab2fa578
+div.du $r15, $r14, $r19 ::
+before: $r15=0xcd3107423486c8fe, $r14=0xf6bc56277282cd14, $r19=0x0961ac833f00f3e3
+after:  $r15=0x000000000000001a, $r14=0xf6bc56277282cd14, $r19=0x0961ac833f00f3e3
+div.du $r4, $r29, $r18 ::
+before: $r4=0xa0bfc2fc5b35fa79, $r29=0x2b28c09aa5f12845, $r18=0xed44da2fdf5dce00
+after:  $r4=000000000000000000, $r29=0x2b28c09aa5f12845, $r18=0xed44da2fdf5dce00
+div.du $r4, $r6, $r25 ::
+before: $r4=0x1fc6e23fd0f09ed0, $r6=0xeaa71d9fb42223ca, $r25=0x045689545e60381c
+after:  $r4=0x0000000000000036, $r6=0xeaa71d9fb42223ca, $r25=0x045689545e60381c
+div.du $r10, $r8, $r12 ::
+before: $r10=0xa3710c512d4c006c, $r8=0xc011778733c50a6e, $r12=0xb44475ee048d8167
+after:  $r10=0x0000000000000001, $r8=0xc011778733c50a6e, $r12=0xb44475ee048d8167
+div.du $r29, $r4, $r29 ::
+before: $r29=0x46d27abff0da1972, $r4=0x17a4e863a182dcd0, $r29=0x59a7b82980ac6a6d
+after:  $r29=000000000000000000, $r4=0x17a4e863a182dcd0, $r29=000000000000000000
+div.du $r15, $r8, $r30 ::
+before: $r15=0x68120919dbbd9b19, $r8=0x4c296c89a6f7a6df, $r30=0x9d9166c1cd0eecfa
+after:  $r15=000000000000000000, $r8=0x4c296c89a6f7a6df, $r30=0x9d9166c1cd0eecfa
+div.du $r7, $r18, $r17 ::
+before: $r7=0xd2389cb7af92be89, $r18=0x9a1f65b2c59cfda3, $r17=0xe316cf92f8f0574f
+after:  $r7=000000000000000000, $r18=0x9a1f65b2c59cfda3, $r17=0xe316cf92f8f0574f
+div.du $r15, $r25, $r17 ::
+before: $r15=0x49651d72d87da955, $r25=0xd22c499c27908743, $r17=0x08d824b01058ecb8
+after:  $r15=0x0000000000000017, $r25=0xd22c499c27908743, $r17=0x08d824b01058ecb8
+mod.du $r26, $r8, $r23 ::
+before: $r26=0xb0bd66f10c34fe23, $r8=0x5eb9b775d83b4893, $r23=0x08867d4b638f2622
+after:  $r26=0x00f255389114a51d, $r8=0x5eb9b775d83b4893, $r23=0x08867d4b638f2622
+mod.du $r8, $r10, $r25 ::
+before: $r8=0xe236349cd47eeb11, $r10=0x119102fd7b236a81, $r25=0x08fd72a09e4fb45f
+after:  $r8=0x0893905cdcd3b622, $r10=0x119102fd7b236a81, $r25=0x08fd72a09e4fb45f
+mod.du $r25, $r4, $r5 ::
+before: $r25=0x1b669725a0c3a970, $r4=0x0175359099c87b83, $r5=0xcad295c79f1d835a
+after:  $r25=0x0175359099c87b83, $r4=0x0175359099c87b83, $r5=0xcad295c79f1d835a
+mod.du $r7, $r28, $r20 ::
+before: $r7=0x7117e70798869df4, $r28=0xe35b93aa0c37fe97, $r20=0x741084dead7970d0
+after:  $r7=0x6f4b0ecb5ebe8dc7, $r28=0xe35b93aa0c37fe97, $r20=0x741084dead7970d0
+mod.du $r30, $r24, $r9 ::
+before: $r30=0xc4d432a8ce91f693, $r24=0x77c03aceb2ea6b45, $r9=0xb8cd7773fb72b7ca
+after:  $r30=0x77c03aceb2ea6b45, $r24=0x77c03aceb2ea6b45, $r9=0xb8cd7773fb72b7ca
+mod.du $r23, $r9, $r28 ::
+before: $r23=0x13f1f3e1891b6b73, $r9=0x9811699becce53a9, $r28=0xed15e264f0c39b88
+after:  $r23=0x9811699becce53a9, $r9=0x9811699becce53a9, $r28=0xed15e264f0c39b88
+mod.du $r13, $r12, $r14 ::
+before: $r13=0xb8b22bcb0cb970e8, $r12=0x16cdecd7c0091cd2, $r14=0x4fcab819ebadbdfd
+after:  $r13=0x16cdecd7c0091cd2, $r12=0x16cdecd7c0091cd2, $r14=0x4fcab819ebadbdfd
+mod.du $r30, $r17, $r12 ::
+before: $r30=0xbf96226d2de1240d, $r17=0x9fe4b2c7557d6b9a, $r12=0x3668e581a5de6efd
+after:  $r30=0x3312e7c409c08da0, $r17=0x9fe4b2c7557d6b9a, $r12=0x3668e581a5de6efd
+mod.du $r14, $r4, $r6 ::
+before: $r14=0x9bc8f8a69a7f55c2, $r4=0x530a9c5a21769bab, $r6=0x2805bef72d33cbd5
+after:  $r14=0x02ff1e6bc70f0401, $r4=0x530a9c5a21769bab, $r6=0x2805bef72d33cbd5
+mod.du $r23, $r28, $r12 ::
+before: $r23=0x82a854f86e642cba, $r28=0x0dd0fd63485d6c3d, $r12=0x56b21f15cb9d2bf2
+after:  $r23=0x0dd0fd63485d6c3d, $r28=0x0dd0fd63485d6c3d, $r12=0x56b21f15cb9d2bf2
+alsl.w $r18, $r10, $r15, 2 ::
+before: $r18=0xafb40df16156827b, $r10=0x9b0b86116a0d89cb, $r15=0x80086c066ea6842b
+after:  $r18=0x0000000016dcab57, $r10=0x9b0b86116a0d89cb, $r15=0x80086c066ea6842b
+alsl.w $r24, $r5, $r4, 2 ::
+before: $r24=0xb8b63b8205a919df, $r5=0x7319260322fa2d6d, $r4=0x1efce6644a51ebf9
+after:  $r24=0xffffffffd63aa1ad, $r5=0x7319260322fa2d6d, $r4=0x1efce6644a51ebf9
+alsl.w $r24, $r5, $r27, 2 ::
+before: $r24=0xb4f0fd355869e078, $r5=0x26abeea20b7d1ac1, $r27=0x4108f7f27e321c8f
+after:  $r24=0xffffffffac268793, $r5=0x26abeea20b7d1ac1, $r27=0x4108f7f27e321c8f
+alsl.w $r24, $r29, $r10, 1 ::
+before: $r24=0x4b948e9a0b82df22, $r29=0x11893c9dd43d0112, $r10=0x51a030165671a055
+after:  $r24=0xfffffffffeeba279, $r29=0x11893c9dd43d0112, $r10=0x51a030165671a055
+alsl.w $r5, $r10, $r18, 1 ::
+before: $r5=0xfc253ac9e2b55590, $r10=0x2682507563a85b07, $r18=0xa467083f66457d1d
+after:  $r5=0x000000002d96332b, $r10=0x2682507563a85b07, $r18=0xa467083f66457d1d
+alsl.w $r20, $r13, $r10, 3 ::
+before: $r20=0x76e8c346a721cdab, $r13=0x548f2762bfb1bc01, $r10=0xa6e0d27e62dcc594
+after:  $r20=0x00000000606aa59c, $r13=0x548f2762bfb1bc01, $r10=0xa6e0d27e62dcc594
+alsl.w $r16, $r6, $r24, 3 ::
+before: $r16=0x039f77b88fc3b663, $r6=0x281818bf4a36a7e5, $r24=0x86cd2a06ef475a61
+after:  $r16=0x0000000040fc9989, $r6=0x281818bf4a36a7e5, $r24=0x86cd2a06ef475a61
+alsl.w $r14, $r18, $r9, 4 ::
+before: $r14=0x08a58ea94346ff16, $r18=0x4ff191f91397adea, $r9=0x4cda359b03c97a53
+after:  $r14=0x000000003d4458f3, $r18=0x4ff191f91397adea, $r9=0x4cda359b03c97a53
+alsl.w $r8, $r6, $r29, 1 ::
+before: $r8=0xae0bfa182556c725, $r6=0xda179bc2f41d03d3, $r29=0x1d23e4da08af7978
+after:  $r8=0xfffffffff0e9811e, $r6=0xda179bc2f41d03d3, $r29=0x1d23e4da08af7978
+alsl.w $r31, $r26, $r30, 1 ::
+before: $r31=0xd6af9fcd7ffd8e75, $r26=0x3e88bb77d6665633, $r30=0x23a0414c69b804c1
+after:  $r31=0x000000001684b127, $r26=0x3e88bb77d6665633, $r30=0x23a0414c69b804c1
+alsl.wu $r20, $r24, $r18, 2 ::
+before: $r20=0xc714872ff3c39370, $r24=0xcaea31ddabb275f9, $r18=0xedbfc2cedca8eb7a
+after:  $r20=0x000000008b72c35e, $r24=0xcaea31ddabb275f9, $r18=0xedbfc2cedca8eb7a
+alsl.wu $r13, $r26, $r15, 3 ::
+before: $r13=0xe1a0ba1adcb75aa4, $r26=0x8adbed432acf321a, $r15=0xeae447eaa60bb142
+after:  $r13=0x00000000fc854212, $r26=0x8adbed432acf321a, $r15=0xeae447eaa60bb142
+alsl.wu $r4, $r17, $r27, 3 ::
+before: $r4=0xb153f9ecea23068c, $r17=0xd2066b089c9499a3, $r27=0x36ed3c96ac4751aa
+after:  $r4=0x0000000090ec1ec2, $r17=0xd2066b089c9499a3, $r27=0x36ed3c96ac4751aa
+alsl.wu $r20, $r10, $r4, 4 ::
+before: $r20=0x8fb2705357e98d66, $r10=0xd353329585fc71dd, $r4=0x739237ed6a677f00
+after:  $r20=0x00000000ca2e9cd0, $r10=0xd353329585fc71dd, $r4=0x739237ed6a677f00
+alsl.wu $r31, $r12, $r23, 2 ::
+before: $r31=0x6caac60acd9bc6f4, $r12=0xc87131b9171530df, $r23=0x39c8e321a6e131c0
+after:  $r31=0x000000000335f53c, $r12=0xc87131b9171530df, $r23=0x39c8e321a6e131c0
+alsl.wu $r13, $r14, $r19, 2 ::
+before: $r13=0xd2c7072036f54e45, $r14=0x35ea1627556f8f98, $r19=0x97054728433042d3
+after:  $r13=0x0000000098ee8133, $r14=0x35ea1627556f8f98, $r19=0x97054728433042d3
+alsl.wu $r7, $r14, $r5, 1 ::
+before: $r7=0x5a0f1fae80105d64, $r14=0xd300b74879e33a53, $r5=0x3a1e7389d0669d4c
+after:  $r7=0x00000000c42d11f2, $r14=0xd300b74879e33a53, $r5=0x3a1e7389d0669d4c
+alsl.wu $r28, $r4, $r9, 1 ::
+before: $r28=0xcd7fd8389b4f4062, $r4=0xad1830d644c205e7, $r9=0xced1c031d73f9087
+after:  $r28=0x0000000060c39c55, $r4=0xad1830d644c205e7, $r9=0xced1c031d73f9087
+alsl.wu $r13, $r9, $r29, 4 ::
+before: $r13=0x081601560f53b081, $r9=0xd3ee3c45f08cd218, $r29=0xa7d5a43a1df2aa1d
+after:  $r13=0x0000000026bfcb9d, $r9=0xd3ee3c45f08cd218, $r29=0xa7d5a43a1df2aa1d
+alsl.wu $r30, $r29, $r31, 2 ::
+before: $r30=0xf383bd5bfae7e46d, $r29=0x67862a0151c65567, $r31=0x9cdcbf604f46c48a
+after:  $r30=0x0000000096601a26, $r29=0x67862a0151c65567, $r31=0x9cdcbf604f46c48a
+alsl.d $r18, $r28, $r16, 4 ::
+before: $r18=0x53e533e973dfa49c, $r28=0x6665a9d32abaaf55, $r16=0xf70490874fb75e6e
+after:  $r18=0x5d5f2db9fb6253be, $r28=0x6665a9d32abaaf55, $r16=0xf70490874fb75e6e
+alsl.d $r10, $r30, $r18, 2 ::
+before: $r10=0xfb14c3e6acd722c3, $r30=0xcae19862ab088fcc, $r18=0x87c434d85259d923
+after:  $r10=0xb34a9662fe7c1853, $r30=0xcae19862ab088fcc, $r18=0x87c434d85259d923
+alsl.d $r17, $r25, $r26, 1 ::
+before: $r17=0x95e79a567c313ec7, $r25=0x83a0e706c2c4c534, $r26=0x2f49f1e9d5b91fc9
+after:  $r17=0x368bbff75b42aa31, $r25=0x83a0e706c2c4c534, $r26=0x2f49f1e9d5b91fc9
+alsl.d $r7, $r24, $r24, 2 ::
+before: $r7=0x35b966d0db9f681c, $r24=0xc0bc97593f1054fc, $r24=0x7e564928b0a53ac6
+after:  $r7=0x77af6dcb733a25de, $r24=0x7e564928b0a53ac6, $r24=0x7e564928b0a53ac6
+alsl.d $r6, $r30, $r24, 3 ::
+before: $r6=0x38ad1fb21e071421, $r30=0xb959c439b0436d6d, $r24=0x647c742c9ce02fc5
+after:  $r6=0x2f4a95fa1efb9b2d, $r30=0xb959c439b0436d6d, $r24=0x647c742c9ce02fc5
+alsl.d $r18, $r28, $r10, 2 ::
+before: $r18=0x1bde2962dc5bb68b, $r28=0x67c403d00c9389bd, $r10=0x8fc18921f225d05a
+after:  $r18=0x2ed198622473f74e, $r28=0x67c403d00c9389bd, $r10=0x8fc18921f225d05a
+alsl.d $r8, $r27, $r15, 3 ::
+before: $r8=0x5b8de9d8b393fa06, $r27=0x393ec1c28e89e9d8, $r15=0x1a59f9d852c3f8ba
+after:  $r8=0xe45007ecc713477a, $r27=0x393ec1c28e89e9d8, $r15=0x1a59f9d852c3f8ba
+alsl.d $r27, $r24, $r6, 4 ::
+before: $r27=0x72195c1ca51cc4db, $r24=0x4ee5b51e1e161ab2, $r6=0x08a10acb4b625fef
+after:  $r27=0xf6fc5cad2cc40b0f, $r24=0x4ee5b51e1e161ab2, $r6=0x08a10acb4b625fef
+alsl.d $r29, $r4, $r18, 2 ::
+before: $r29=0xf3ed9e39d83d3dec, $r4=0xa3816509b9a6c23d, $r18=0x6949e8e534450dd5
+after:  $r29=0xf74f7d0c1ae016c9, $r4=0xa3816509b9a6c23d, $r18=0x6949e8e534450dd5
+alsl.d $r16, $r13, $r8, 1 ::
+before: $r16=0x588f388f25a342df, $r13=0xde33a74109c7be30, $r8=0x8b02cf06997a065a
+after:  $r16=0x476a1d88ad0982ba, $r13=0xde33a74109c7be30, $r8=0x8b02cf06997a065a
+lu12i.w $r9, 94146 ::
+before: $r9=0xdf45bd002ccf48e1
+after:  $r9=0x0000000016fc2000
+lu12i.w $r10, 129014 ::
+before: $r10=0xa5138a37d09ada8a
+after:  $r10=0x000000001f7f6000
+lu12i.w $r18, -130138 ::
+before: $r18=0x0efe46a52b8b3e5e
+after:  $r18=0xffffffffe03a6000
+lu12i.w $r7, -467080 ::
+before: $r7=0x29084adf6d033a88
+after:  $r7=0xffffffff8df78000
+lu12i.w $r10, 360675 ::
+before: $r10=0xe9072e7fec2a5d1c
+after:  $r10=0x00000000580e3000
+lu12i.w $r28, 205272 ::
+before: $r28=0x2f7d41c7bd959cd5
+after:  $r28=0x00000000321d8000
+lu12i.w $r16, -266298 ::
+before: $r16=0xcb48200d89b48566
+after:  $r16=0xffffffffbefc6000
+lu12i.w $r12, -186346 ::
+before: $r12=0xd605223c244f4a50
+after:  $r12=0xffffffffd2816000
+lu12i.w $r15, 247864 ::
+before: $r15=0x22c035c8c90016be
+after:  $r15=0x000000003c838000
+lu12i.w $r20, -511005 ::
+before: $r20=0x6b2fd1aa0b603fec
+after:  $r20=0xffffffff833e3000
+lu32i.d $r8, -310956 ::
+before: $r8=0xb331616751ed8877
+after:  $r8=0xfffb415451ed8877
+lu32i.d $r17, 35590 ::
+before: $r17=0x0e49bab8d80e1dd7
+after:  $r17=0x00008b06d80e1dd7
+lu32i.d $r4, 500474 ::
+before: $r4=0x842cdc9ac0a0adf6
+after:  $r4=0x0007a2fac0a0adf6
+lu32i.d $r23, -447277 ::
+before: $r23=0xc9ca69b8e5ab079e
+after:  $r23=0xfff92cd3e5ab079e
+lu32i.d $r12, -503028 ::
+before: $r12=0x27d83e1c77dec50a
+after:  $r12=0xfff8530c77dec50a
+lu32i.d $r26, -355708 ::
+before: $r26=0xc00dcc918a89f350
+after:  $r26=0xfffa92848a89f350
+lu32i.d $r16, -231989 ::
+before: $r16=0xd180188cdc073491
+after:  $r16=0xfffc75cbdc073491
+lu32i.d $r26, 250642 ::
+before: $r26=0x4efae034432bbb3b
+after:  $r26=0x0003d312432bbb3b
+lu32i.d $r15, 237105 ::
+before: $r15=0x7bf2141e673e336f
+after:  $r15=0x00039e31673e336f
+lu32i.d $r4, -312071 ::
+before: $r4=0x187c50bfc5eb8f32
+after:  $r4=0xfffb3cf9c5eb8f32
+lu52i.d $r8, $r25, 1920 ::
+before: $r8=0x1da74dfcb33d471a, $r25=0x453ae9f1200f4d41
+after:  $r8=0x780ae9f1200f4d41, $r25=0x453ae9f1200f4d41
+lu52i.d $r14, $r25, -2008 ::
+before: $r14=0x5e954055ebaec78f, $r25=0xb7637f9119e12e31
+after:  $r14=0x82837f9119e12e31, $r25=0xb7637f9119e12e31
+lu52i.d $r26, $r24, -1803 ::
+before: $r26=0xead69e40b96b23bf, $r24=0x779862b03d1ab575
+after:  $r26=0x8f5862b03d1ab575, $r24=0x779862b03d1ab575
+lu52i.d $r5, $r25, -1406 ::
+before: $r5=0x452236306da7c667, $r25=0x9f16a6e48cca3a7b
+after:  $r5=0xa826a6e48cca3a7b, $r25=0x9f16a6e48cca3a7b
+lu52i.d $r26, $r23, -667 ::
+before: $r26=0x5604b9744291e45a, $r23=0x70eecb3116b1795c
+after:  $r26=0xd65ecb3116b1795c, $r23=0x70eecb3116b1795c
+lu52i.d $r14, $r27, -1221 ::
+before: $r14=0x6d9a8cfe459c1c48, $r27=0x85452bdd40205e0d
+after:  $r14=0xb3b52bdd40205e0d, $r27=0x85452bdd40205e0d
+lu52i.d $r25, $r8, 423 ::
+before: $r25=0x1a8d72e42f68a33d, $r8=0x7089b6fe4c1f7a70
+after:  $r25=0x1a79b6fe4c1f7a70, $r8=0x7089b6fe4c1f7a70
+lu52i.d $r30, $r10, -177 ::
+before: $r30=0x7c4fe646acac7ac0, $r10=0xe7d222ba1fd5cae2
+after:  $r30=0xf4f222ba1fd5cae2, $r10=0xe7d222ba1fd5cae2
+lu52i.d $r6, $r13, -1438 ::
+before: $r6=0xdb3d6a615a9e492f, $r13=0xaa9303648ff489f2
+after:  $r6=0xa62303648ff489f2, $r13=0xaa9303648ff489f2
+lu52i.d $r25, $r4, -634 ::
+before: $r25=0x8b41b813d85b8ee8, $r4=0xe4d31961e42e713c
+after:  $r25=0xd8631961e42e713c, $r4=0xe4d31961e42e713c
+addi.w $r6, $r27, 1727 ::
+before: $r6=0x12845f036198fa6f, $r27=0xda77c63c764655da
+after:  $r6=0x0000000076465c99, $r27=0xda77c63c764655da
+addi.w $r9, $r8, -381 ::
+before: $r9=0x21a7e3cfa2649a4f, $r8=0xc64c73b3bd4c1dcb
+after:  $r9=0xffffffffbd4c1c4e, $r8=0xc64c73b3bd4c1dcb
+addi.w $r16, $r6, -186 ::
+before: $r16=0x6c47b02ef52a3502, $r6=0x24ca1a646dac5cc3
+after:  $r16=0x000000006dac5c09, $r6=0x24ca1a646dac5cc3
+addi.w $r20, $r31, 1503 ::
+before: $r20=0xb6144d8f9513c78e, $r31=0xc4b808764e894e6c
+after:  $r20=0x000000004e89544b, $r31=0xc4b808764e894e6c
+addi.w $r19, $r17, -1918 ::
+before: $r19=0xcf97c9215c961121, $r17=0x9b714c4cb899399b
+after:  $r19=0xffffffffb899321d, $r17=0x9b714c4cb899399b
+addi.w $r14, $r8, -1781 ::
+before: $r14=0xe1abf22f6c3c82ec, $r8=0x4110e9c1b5f59ef6
+after:  $r14=0xffffffffb5f59801, $r8=0x4110e9c1b5f59ef6
+addi.w $r29, $r18, 2047 ::
+before: $r29=0x4b64427195dda12d, $r18=0xadf5af70b7b3f37b
+after:  $r29=0xffffffffb7b3fb7a, $r18=0xadf5af70b7b3f37b
+addi.w $r4, $r30, 244 ::
+before: $r4=0xfc785d46f5bbdff4, $r30=0x1e061e9d51362d9c
+after:  $r4=0x0000000051362e90, $r30=0x1e061e9d51362d9c
+addi.w $r7, $r23, -376 ::
+before: $r7=0xe037576d82c12e8d, $r23=0xa77c8da72af708f1
+after:  $r7=0x000000002af70779, $r23=0xa77c8da72af708f1
+addi.w $r23, $r17, 1924 ::
+before: $r23=0x00a10df57c4103ef, $r17=0x26d2628746ad0a3e
+after:  $r23=0x0000000046ad11c2, $r17=0x26d2628746ad0a3e
+addi.d $r14, $r14, 152 ::
+before: $r14=0x61b497fb58a816d9, $r14=0x29eb218dd65d9d6c
+after:  $r14=0x29eb218dd65d9e04, $r14=0x29eb218dd65d9e04
+addi.d $r20, $r13, -640 ::
+before: $r20=0xd80db8387a8cdd93, $r13=0x5e23e4b01f2bbd6d
+after:  $r20=0x5e23e4b01f2bbaed, $r13=0x5e23e4b01f2bbd6d
+addi.d $r13, $r25, -743 ::
+before: $r13=0x5dfea060c6e8f587, $r25=0x95f49b783954f9f9
+after:  $r13=0x95f49b783954f712, $r25=0x95f49b783954f9f9
+addi.d $r4, $r30, 676 ::
+before: $r4=0xd72f370f6ce7bc4c, $r30=0x148550b0f97ce601
+after:  $r4=0x148550b0f97ce8a5, $r30=0x148550b0f97ce601
+addi.d $r26, $r8, 1630 ::
+before: $r26=0xa4120a67f8d6df1a, $r8=0xa83f4bbcaf5bc52e
+after:  $r26=0xa83f4bbcaf5bcb8c, $r8=0xa83f4bbcaf5bc52e
+addi.d $r20, $r29, -1971 ::
+before: $r20=0xa8f9c82780ac16d5, $r29=0x7ab169a5751642bc
+after:  $r20=0x7ab169a575163b09, $r29=0x7ab169a5751642bc
+addi.d $r8, $r8, 1160 ::
+before: $r8=0x6f22bdb480c14540, $r8=0x94e1253c331b17f2
+after:  $r8=0x94e1253c331b1c7a, $r8=0x94e1253c331b1c7a
+addi.d $r15, $r27, 844 ::
+before: $r15=0x0312473547bcfe03, $r27=0x7a786cbc8149d818
+after:  $r15=0x7a786cbc8149db64, $r27=0x7a786cbc8149d818
+addi.d $r8, $r26, -1185 ::
+before: $r8=0xee2b1be852671bc3, $r26=0x6a36d61dfee3a6fb
+after:  $r8=0x6a36d61dfee3a25a, $r26=0x6a36d61dfee3a6fb
+addi.d $r17, $r27, -2046 ::
+before: $r17=0x70e068b54ed72e20, $r27=0x922681ab8837027b
+after:  $r17=0x922681ab8836fa7d, $r27=0x922681ab8837027b
+addu16i.d $r20, $r29, -14564 ::
+before: $r20=0x8232770e3472bdc3, $r29=0x4d28c5567787c26e
+after:  $r20=0x4d28c5563ea3c26e, $r29=0x4d28c5567787c26e
+addu16i.d $r29, $r4, -3511 ::
+before: $r29=0x9076403ed2f0fdf4, $r4=0x471cafb4183a389f
+after:  $r29=0x471cafb40a83389f, $r4=0x471cafb4183a389f
+addu16i.d $r26, $r15, 25897 ::
+before: $r26=0x0dec118b1eb13234, $r15=0x06ff5ce56111b301
+after:  $r26=0x06ff5ce5c63ab301, $r15=0x06ff5ce56111b301
+addu16i.d $r9, $r5, -21829 ::
+before: $r9=0x73209239d98fb81a, $r5=0x1dc8f0ba4710eba3
+after:  $r9=0x1dc8f0b9f1cbeba3, $r5=0x1dc8f0ba4710eba3
+addu16i.d $r28, $r25, -23832 ::
+before: $r28=0xa39ba8429a9c13a6, $r25=0x4fffb32851c13ff2
+after:  $r28=0x4fffb327f4a93ff2, $r25=0x4fffb32851c13ff2
+addu16i.d $r23, $r30, -32189 ::
+before: $r23=0x08abd919f5ea43b1, $r30=0x40078826f7336f0e
+after:  $r23=0x4007882679766f0e, $r30=0x40078826f7336f0e
+addu16i.d $r28, $r24, 16372 ::
+before: $r28=0x695e543e25e7d3e4, $r24=0x30279db606efa8ec
+after:  $r28=0x30279db646e3a8ec, $r24=0x30279db606efa8ec
+addu16i.d $r4, $r18, -28041 ::
+before: $r4=0xa125cadb71209757, $r18=0xff287b5e7fb2a2ba
+after:  $r4=0xff287b5e1229a2ba, $r18=0xff287b5e7fb2a2ba
+addu16i.d $r5, $r17, -11268 ::
+before: $r5=0xd5d3e6da7c594ca9, $r17=0x2bc9be0ef252584c
+after:  $r5=0x2bc9be0ec64e584c, $r17=0x2bc9be0ef252584c
+addu16i.d $r29, $r28, -15645 ::
+before: $r29=0x0ee0391151007613, $r28=0xae616c39d87c4b6e
+after:  $r29=0xae616c399b5f4b6e, $r28=0xae616c39d87c4b6e
+andi $r28, $r18, 1288 ::
+before: $r28=0xd62f833fbbd483b3, $r18=0xa2f268cdcf18dd00
+after:  $r28=0x0000000000000500, $r18=0xa2f268cdcf18dd00
+andi $r12, $r13, 153 ::
+before: $r12=0xc40efc9a74a3a13b, $r13=0xfd609200795f877c
+after:  $r12=0x0000000000000018, $r13=0xfd609200795f877c
+andi $r6, $r18, 3633 ::
+before: $r6=0x79ee7ee7a7865b79, $r18=0x644bec92dca1ad7f
+after:  $r6=0x0000000000000c31, $r18=0x644bec92dca1ad7f
+andi $r5, $r31, 3299 ::
+before: $r5=0x2d64be0e5c2ec0f6, $r31=0x87253b6589f182c7
+after:  $r5=0x00000000000000c3, $r31=0x87253b6589f182c7
+andi $r28, $r5, 3189 ::
+before: $r28=0xf2e4ed85d98a1860, $r5=0x9f58e4edd98b60d1
+after:  $r28=0x0000000000000051, $r5=0x9f58e4edd98b60d1
+andi $r18, $r29, 4031 ::
+before: $r18=0x3c067920d48cf0d2, $r29=0x2bf35e68c503ecfe
+after:  $r18=0x0000000000000cbe, $r29=0x2bf35e68c503ecfe
+andi $r20, $r24, 3252 ::
+before: $r20=0xe1d95be05fd57a64, $r24=0xd33e771521b24bd3
+after:  $r20=0x0000000000000890, $r24=0xd33e771521b24bd3
+andi $r6, $r23, 1665 ::
+before: $r6=0x23341b2d86d02365, $r23=0x16de10f2b4a45064
+after:  $r6=000000000000000000, $r23=0x16de10f2b4a45064
+andi $r27, $r14, 325 ::
+before: $r27=0xd7db9d77aea4dcf5, $r14=0x142272b737435eb7
+after:  $r27=0x0000000000000005, $r14=0x142272b737435eb7
+andi $r23, $r16, 1056 ::
+before: $r23=0x57fee53581b09718, $r16=0x02ace25d9e2ddbaa
+after:  $r23=0x0000000000000020, $r16=0x02ace25d9e2ddbaa
+ori $r26, $r13, 3251 ::
+before: $r26=0x6d47cf7e5bb5c13e, $r13=0x93aed4996805ba3b
+after:  $r26=0x93aed4996805bebb, $r13=0x93aed4996805ba3b
+ori $r10, $r25, 568 ::
+before: $r10=0x42f0332098f938af, $r25=0xd7916fe8d569567b
+after:  $r10=0xd7916fe8d569567b, $r25=0xd7916fe8d569567b
+ori $r12, $r17, 1798 ::
+before: $r12=0xc507d4150a742b76, $r17=0x2b9a102a5b5b15f7
+after:  $r12=0x2b9a102a5b5b17f7, $r17=0x2b9a102a5b5b15f7
+ori $r15, $r15, 1781 ::
+before: $r15=0xa54ad5ecc0e72adb, $r15=0x37c18ad4ec6e678c
+after:  $r15=0x37c18ad4ec6e67fd, $r15=0x37c18ad4ec6e67fd
+ori $r5, $r4, 682 ::
+before: $r5=0x1f388b2a2b18004d, $r4=0xb5fa23fbb02eeedb
+after:  $r5=0xb5fa23fbb02eeefb, $r4=0xb5fa23fbb02eeedb
+ori $r27, $r24, 1931 ::
+before: $r27=0x73b086f8a8b4d7b5, $r24=0xd23e30ab1e45470a
+after:  $r27=0xd23e30ab1e45478b, $r24=0xd23e30ab1e45470a
+ori $r28, $r6, 3593 ::
+before: $r28=0x972967beac695928, $r6=0x2c701d0bc28816c5
+after:  $r28=0x2c701d0bc2881ecd, $r6=0x2c701d0bc28816c5
+ori $r27, $r4, 3679 ::
+before: $r27=0x54fecbbf0a06e5a6, $r4=0xf0b6d846464a3331
+after:  $r27=0xf0b6d846464a3f7f, $r4=0xf0b6d846464a3331
+ori $r9, $r16, 905 ::
+before: $r9=0x71f3cd001c729062, $r16=0xc5720758095e4592
+after:  $r9=0xc5720758095e479b, $r16=0xc5720758095e4592
+ori $r26, $r7, 3473 ::
+before: $r26=0xd7ce86800c3c0f4b, $r7=0xc4a58f787cdf5bb2
+after:  $r26=0xc4a58f787cdf5fb3, $r7=0xc4a58f787cdf5bb2
+xori $r27, $r31, 2690 ::
+before: $r27=0xe6d49c2dc629fbc7, $r31=0x91832665d1a898e2
+after:  $r27=0x91832665d1a89260, $r31=0x91832665d1a898e2
+xori $r15, $r5, 697 ::
+before: $r15=0xada49c0d48beffc5, $r5=0x0e3cf426f1be4766
+after:  $r15=0x0e3cf426f1be45df, $r5=0x0e3cf426f1be4766
+xori $r9, $r20, 2268 ::
+before: $r9=0x174a71d6d3757e3e, $r20=0x25ed4678037622be
+after:  $r9=0x25ed467803762a62, $r20=0x25ed4678037622be
+xori $r31, $r15, 3817 ::
+before: $r31=0x1fac1694b40fbf2e, $r15=0x4fe4fb2e0b660ca2
+after:  $r31=0x4fe4fb2e0b66024b, $r15=0x4fe4fb2e0b660ca2
+xori $r17, $r14, 3929 ::
+before: $r17=0x2dc443400df4e153, $r14=0x1db25e602ef8ece5
+after:  $r17=0x1db25e602ef8e3bc, $r14=0x1db25e602ef8ece5
+xori $r4, $r28, 2735 ::
+before: $r4=0x5fb5ad5a84e97835, $r28=0xc52da11293641639
+after:  $r4=0xc52da11293641c96, $r28=0xc52da11293641639
+xori $r5, $r13, 1153 ::
+before: $r5=0x5c5fc4ba45da005f, $r13=0xe46f853b7d602b84
+after:  $r5=0xe46f853b7d602f05, $r13=0xe46f853b7d602b84
+xori $r30, $r26, 3867 ::
+before: $r30=0x1419915b6f92678b, $r26=0xa984612f1266da94
+after:  $r30=0xa984612f1266d58f, $r26=0xa984612f1266da94
+xori $r13, $r13, 3426 ::
+before: $r13=0xc2b8fd036ba6314b, $r13=0x4cf49604f644713c
+after:  $r13=0x4cf49604f6447c5e, $r13=0x4cf49604f6447c5e
+xori $r25, $r23, 2669 ::
+before: $r25=0xde46e3673c9a75dc, $r23=0xfa1177a89f08c81e
+after:  $r25=0xfa1177a89f08c273, $r23=0xfa1177a89f08c81e
+sll.w $r13, $r8, $r12 ::
+before: $r13=0x26131fa72f4b76f1, $r8=0xf34f7108538078d0, $r12=0x10bbd12a8e087501
+after:  $r13=0xffffffffa700f1a0, $r8=0xf34f7108538078d0, $r12=0x10bbd12a8e087501
+sll.w $r29, $r8, $r15 ::
+before: $r29=0xb6f529da4017d0d9, $r8=0x49fbfb11ef643171, $r15=0x9d0425e747d11bde
+after:  $r29=0x0000000040000000, $r8=0x49fbfb11ef643171, $r15=0x9d0425e747d11bde
+sll.w $r30, $r31, $r12 ::
+before: $r30=0xcfc5236f5c070644, $r31=0xba8301a1087b3a96, $r12=0xff7589561824e1be
+after:  $r30=0xffffffff80000000, $r31=0xba8301a1087b3a96, $r12=0xff7589561824e1be
+sll.w $r28, $r10, $r7 ::
+before: $r28=0x37fa51674df87149, $r10=0x39212605c5d0cf7d, $r7=0x18a8e323326ce5aa
+after:  $r28=0x00000000433df400, $r10=0x39212605c5d0cf7d, $r7=0x18a8e323326ce5aa
+sll.w $r8, $r9, $r14 ::
+before: $r8=0x707a9e0ece8abe40, $r9=0x94b7b20a80c16c7b, $r14=0x6887c46efb4cc181
+after:  $r8=0x000000000182d8f6, $r9=0x94b7b20a80c16c7b, $r14=0x6887c46efb4cc181
+sll.w $r8, $r4, $r24 ::
+before: $r8=0xd718a01b03a53964, $r4=0x8ebd8bfeec304e2a, $r24=0x06b4a83a6838b5d1
+after:  $r8=0xffffffff9c540000, $r4=0x8ebd8bfeec304e2a, $r24=0x06b4a83a6838b5d1
+sll.w $r23, $r31, $r27 ::
+before: $r23=0xf50cab824a06d30e, $r31=0xa8ee12cbd8dec935, $r27=0x118002b3f0cecbab
+after:  $r23=0xfffffffff649a800, $r31=0xa8ee12cbd8dec935, $r27=0x118002b3f0cecbab
+sll.w $r8, $r25, $r26 ::
+before: $r8=0x8163368243faadee, $r25=0x3a04f47bf19a4cc8, $r26=0x6a58cd3a57b4eeb4
+after:  $r8=0xffffffffcc800000, $r25=0x3a04f47bf19a4cc8, $r26=0x6a58cd3a57b4eeb4
+sll.w $r25, $r13, $r12 ::
+before: $r25=0x3d6831e1afab1b1a, $r13=0x9ee672580cb39777, $r12=0x9084acd2bc7404ca
+after:  $r25=0xffffffffce5ddc00, $r13=0x9ee672580cb39777, $r12=0x9084acd2bc7404ca
+sll.w $r20, $r5, $r29 ::
+before: $r20=0x90f7ee3ff75817a6, $r5=0xe4ae07989d6148d7, $r29=0x3e208bfcf046fffd
+after:  $r20=0xffffffffe0000000, $r5=0xe4ae07989d6148d7, $r29=0x3e208bfcf046fffd
+srl.w $r20, $r29, $r30 ::
+before: $r20=0xff3f6b79b5e2b56d, $r29=0x1195aa09fa92d26b, $r30=0xa93a8fd11ad5ae99
+after:  $r20=0x000000000000007d, $r29=0x1195aa09fa92d26b, $r30=0xa93a8fd11ad5ae99
+srl.w $r8, $r15, $r4 ::
+before: $r8=0x5d2fb7cd04ecd00c, $r15=0x47bf914b6eca2852, $r4=0x1bc63138cc45a75c
+after:  $r8=0x0000000000000006, $r15=0x47bf914b6eca2852, $r4=0x1bc63138cc45a75c
+srl.w $r20, $r12, $r18 ::
+before: $r20=0x61fa22abda7c7b02, $r12=0x9341cf09aa2e106e, $r18=0x2dea831e9e121355
+after:  $r20=0x0000000000000551, $r12=0x9341cf09aa2e106e, $r18=0x2dea831e9e121355
+srl.w $r30, $r20, $r26 ::
+before: $r30=0x43e0249584da52db, $r20=0x482a209e436cda53, $r26=0xb323a7f463f80660
+after:  $r30=0x00000000436cda53, $r20=0x482a209e436cda53, $r26=0xb323a7f463f80660
+srl.w $r31, $r16, $r28 ::
+before: $r31=0x4b10d05d93bf7288, $r16=0x6d0330e88122d7c1, $r28=0xc531cf8c92d53d03
+after:  $r31=0x0000000010245af8, $r16=0x6d0330e88122d7c1, $r28=0xc531cf8c92d53d03
+srl.w $r31, $r15, $r31 ::
+before: $r31=0xd4654233c7648c3a, $r15=0x12e6fc2a04cbf809, $r31=0xcfe1c1b558a94808
+after:  $r31=0x000000000004cbf8, $r15=0x12e6fc2a04cbf809, $r31=0x000000000004cbf8
+srl.w $r10, $r30, $r19 ::
+before: $r10=0x602dee9c45a3b99b, $r30=0x3ce0a6ac2acf19fa, $r19=0xdb5fab4bc2f82e7a
+after:  $r10=0x000000000000000a, $r30=0x3ce0a6ac2acf19fa, $r19=0xdb5fab4bc2f82e7a
+srl.w $r17, $r9, $r23 ::
+before: $r17=0x45106f11d4a57641, $r9=0x05354795b675edac, $r23=0xc67578c28ed7b6c7
+after:  $r17=0x00000000016cebdb, $r9=0x05354795b675edac, $r23=0xc67578c28ed7b6c7
+srl.w $r25, $r26, $r29 ::
+before: $r25=0x1dc3b8477fba650c, $r26=0x0814377a71768e75, $r29=0x60276c0e316db833
+after:  $r25=0x0000000000000e2e, $r26=0x0814377a71768e75, $r29=0x60276c0e316db833
+srl.w $r31, $r7, $r30 ::
+before: $r31=0x360fc92a085c2e14, $r7=0x1b44ec96def89449, $r30=0x56d6c5d85a81ed1f
+after:  $r31=0x0000000000000001, $r7=0x1b44ec96def89449, $r30=0x56d6c5d85a81ed1f
+sra.w $r10, $r17, $r19 ::
+before: $r10=0x576f2bfc771641b8, $r17=0xfb1fb20b98a54405, $r19=0xb20e9dae5a212078
+after:  $r10=0xffffffffffffff98, $r17=0xfb1fb20b98a54405, $r19=0xb20e9dae5a212078
+sra.w $r12, $r16, $r31 ::
+before: $r12=0xbfdbb9a90ccc08a0, $r16=0xb5d3c7f3b1a800a6, $r31=0x57c3ff79f3b4198b
+after:  $r12=0xfffffffffff63500, $r16=0xb5d3c7f3b1a800a6, $r31=0x57c3ff79f3b4198b
+sra.w $r18, $r16, $r5 ::
+before: $r18=0xadcb6c153538b6b1, $r16=0x99e245813e90b5e9, $r5=0x7adff58363d5ebd2
+after:  $r18=0x0000000000000fa4, $r16=0x99e245813e90b5e9, $r5=0x7adff58363d5ebd2
+sra.w $r17, $r28, $r25 ::
+before: $r17=0x7faea6a29686caf9, $r28=0x801d40ea40b19bee, $r25=0x0f5174f678600d3f
+after:  $r17=000000000000000000, $r28=0x801d40ea40b19bee, $r25=0x0f5174f678600d3f
+sra.w $r8, $r27, $r13 ::
+before: $r8=0x86e5534832150e05, $r27=0x47bb53d1cdc3560f, $r13=0x917e2b49633a0f44
+after:  $r8=0xfffffffffcdc3560, $r27=0x47bb53d1cdc3560f, $r13=0x917e2b49633a0f44
+sra.w $r26, $r18, $r20 ::
+before: $r26=0xbfb83a0d762c171a, $r18=0xbf67ed78d934d37c, $r20=0x9f377995293fcc6b
+after:  $r26=0xfffffffffffb269a, $r18=0xbf67ed78d934d37c, $r20=0x9f377995293fcc6b
+sra.w $r5, $r25, $r19 ::
+before: $r5=0x266703af59334b0f, $r25=0x4ed92cdab9f641c9, $r19=0x5da1d0b8846d1a3d
+after:  $r5=0xfffffffffffffffd, $r25=0x4ed92cdab9f641c9, $r19=0x5da1d0b8846d1a3d
+sra.w $r19, $r27, $r24 ::
+before: $r19=0x72557561b3b40007, $r27=0xd5db278ea099b3b5, $r24=0x50b4a888b898610f
+after:  $r19=0xffffffffffff4133, $r27=0xd5db278ea099b3b5, $r24=0x50b4a888b898610f
+sra.w $r16, $r10, $r4 ::
+before: $r16=0xb349f888f1809ba3, $r10=0x23d60a1fc100d89e, $r4=0xc2846cc882dbc8e2
+after:  $r16=0xfffffffff0403627, $r10=0x23d60a1fc100d89e, $r4=0xc2846cc882dbc8e2
+sra.w $r23, $r10, $r31 ::
+before: $r23=0xd7bdeddd344bb5af, $r10=0xa015a07c13ff2234, $r31=0x7c0fe410ce063a85
+after:  $r23=0x00000000009ff911, $r10=0xa015a07c13ff2234, $r31=0x7c0fe410ce063a85
+sll.d $r28, $r17, $r10 ::
+before: $r28=0x167adf26efd66416, $r17=0xb861ba6e0aadf304, $r10=0xa19e21ba0f406c33
+after:  $r28=0x9820000000000000, $r17=0xb861ba6e0aadf304, $r10=0xa19e21ba0f406c33
+sll.d $r18, $r29, $r13 ::
+before: $r18=0x3e8ea4dc3a9d9b44, $r29=0x28ccf5dfa9cdc3b2, $r13=0x33ef837a5a476bdc
+after:  $r18=0xfa9cdc3b20000000, $r29=0x28ccf5dfa9cdc3b2, $r13=0x33ef837a5a476bdc
+sll.d $r23, $r27, $r29 ::
+before: $r23=0x23e29c76deed70ca, $r27=0x09e2265d8422e78d, $r29=0xe9cc62bfd8a7c913
+after:  $r23=0x32ec21173c680000, $r27=0x09e2265d8422e78d, $r29=0xe9cc62bfd8a7c913
+sll.d $r16, $r17, $r17 ::
+before: $r16=0xf5e858c7445fcedd, $r17=0x6735e4cf2fcb78fb, $r17=0x726dd10e13b62663
+after:  $r16=0x9db1331800000000, $r17=0x726dd10e13b62663, $r17=0x726dd10e13b62663
+sll.d $r17, $r15, $r29 ::
+before: $r17=0xfc1dbfc0551f8813, $r15=0xec45100b21a74025, $r29=0x186d3b737cbfd39a
+after:  $r17=0x2c869d0094000000, $r15=0xec45100b21a74025, $r29=0x186d3b737cbfd39a
+sll.d $r19, $r15, $r9 ::
+before: $r19=0xbb01afe39a1e17b6, $r15=0x3e66dd1100acc44a, $r9=0xa9c74257f6e39cdf
+after:  $r19=0x8056622500000000, $r15=0x3e66dd1100acc44a, $r9=0xa9c74257f6e39cdf
+sll.d $r23, $r9, $r31 ::
+before: $r23=0x945b101751c38d12, $r9=0x262d14baae546199, $r31=0x7ccdd8a7840948df
+after:  $r23=0x572a30cc80000000, $r9=0x262d14baae546199, $r31=0x7ccdd8a7840948df
+sll.d $r5, $r31, $r28 ::
+before: $r5=0xa88eaecc1405995b, $r31=0xd96ed500aff4596b, $r28=0x6994841a196c562e
+after:  $r5=0x165ac00000000000, $r31=0xd96ed500aff4596b, $r28=0x6994841a196c562e
+sll.d $r27, $r10, $r25 ::
+before: $r27=0x1e9540fa8237a849, $r10=0x9aad6101b2470a60, $r25=0x90c95628696f752f
+after:  $r27=0x8530000000000000, $r10=0x9aad6101b2470a60, $r25=0x90c95628696f752f
+sll.d $r4, $r26, $r18 ::
+before: $r4=0xb4dc3cdeab2e8454, $r26=0x0d27a92db3b2906c, $r18=0x2bc7647c40c0b375
+after:  $r4=0x0d80000000000000, $r26=0x0d27a92db3b2906c, $r18=0x2bc7647c40c0b375
+srl.d $r6, $r27, $r13 ::
+before: $r6=0x66ebeca9a7fad574, $r27=0xdc837ce646ea6b51, $r13=0xa57259e1758c564b
+after:  $r6=0x001b906f9cc8dd4d, $r27=0xdc837ce646ea6b51, $r13=0xa57259e1758c564b
+srl.d $r6, $r20, $r5 ::
+before: $r6=0x091794316e6c5e65, $r20=0x0dc7c47d39d64a16, $r5=0x35f029b9942e11c8
+after:  $r6=0x000dc7c47d39d64a, $r20=0x0dc7c47d39d64a16, $r5=0x35f029b9942e11c8
+srl.d $r15, $r5, $r4 ::
+before: $r15=0xbc963842b3ebc906, $r5=0x42ea773b0bd19807, $r4=0xd05cd2c4b01ea630
+after:  $r15=0x00000000000042ea, $r5=0x42ea773b0bd19807, $r4=0xd05cd2c4b01ea630
+srl.d $r18, $r25, $r28 ::
+before: $r18=0x30d908baaa31230e, $r25=0x779272ae228746a5, $r28=0xf7b665809a3f303b
+after:  $r18=0x000000000000000e, $r25=0x779272ae228746a5, $r28=0xf7b665809a3f303b
+srl.d $r5, $r28, $r27 ::
+before: $r5=0x01f1d414f1d0f1fe, $r28=0x647277d3759d74bf, $r27=0xa5c5fce39b4a1810
+after:  $r5=0x0000647277d3759d, $r28=0x647277d3759d74bf, $r27=0xa5c5fce39b4a1810
+srl.d $r24, $r9, $r26 ::
+before: $r24=0x5fa44419162fc2c8, $r9=0x9d2a589e6f6b3440, $r26=0x810a615115238d8d
+after:  $r24=0x0004e952c4f37b59, $r9=0x9d2a589e6f6b3440, $r26=0x810a615115238d8d
+srl.d $r31, $r23, $r30 ::
+before: $r31=0xfa1a7ad64758b758, $r23=0xe3d69d99e87b4297, $r30=0x87fd8dc0a78e86bb
+after:  $r31=0x000000000000001c, $r23=0xe3d69d99e87b4297, $r30=0x87fd8dc0a78e86bb
+srl.d $r26, $r10, $r24 ::
+before: $r26=0x540888639a787231, $r10=0x168791cefeb1660a, $r24=0xd02b158115db9cdf
+after:  $r26=0x000000002d0f239d, $r10=0x168791cefeb1660a, $r24=0xd02b158115db9cdf
+srl.d $r23, $r15, $r12 ::
+before: $r23=0xff3e950565409999, $r15=0xe15a01fa0e34ea3b, $r12=0x237aba34fe552f8e
+after:  $r23=0x0003856807e838d3, $r15=0xe15a01fa0e34ea3b, $r12=0x237aba34fe552f8e
+srl.d $r8, $r16, $r4 ::
+before: $r8=0x825bafd36cc0d32e, $r16=0x321677304d1b1406, $r4=0xca68c6c83dfa5837
+after:  $r8=0x0000000000000064, $r16=0x321677304d1b1406, $r4=0xca68c6c83dfa5837
+sra.d $r23, $r19, $r16 ::
+before: $r23=0x4cab63abd8f64774, $r19=0x2c007c3ac68d7c80, $r16=0xd8f4ac963a8b2c01
+after:  $r23=0x16003e1d6346be40, $r19=0x2c007c3ac68d7c80, $r16=0xd8f4ac963a8b2c01
+sra.d $r18, $r30, $r25 ::
+before: $r18=0x531de73fca30361a, $r30=0x2857ba730cd281ff, $r25=0xacab0fe400e4c113
+after:  $r18=0x0000050af74e619a, $r30=0x2857ba730cd281ff, $r25=0xacab0fe400e4c113
+sra.d $r31, $r13, $r10 ::
+before: $r31=0x3184416bc93a5e26, $r13=0xad5864bc4022de96, $r10=0xf7007bdbf1f728ab
+after:  $r31=0xfffffffffff5ab0c, $r13=0xad5864bc4022de96, $r10=0xf7007bdbf1f728ab
+sra.d $r6, $r25, $r23 ::
+before: $r6=0x9184d2df291f3402, $r25=0x7c0b117dcad80c03, $r23=0x35b29b0dde1a94bd
+after:  $r6=0x0000000000000003, $r25=0x7c0b117dcad80c03, $r23=0x35b29b0dde1a94bd
+sra.d $r16, $r6, $r29 ::
+before: $r16=0x2849e543d35dff5f, $r6=0x009f13f36a632a3f, $r29=0xf31f881e12072fe2
+after:  $r16=0x000000000027c4fc, $r6=0x009f13f36a632a3f, $r29=0xf31f881e12072fe2
+sra.d $r7, $r29, $r10 ::
+before: $r7=0x25c763f8366139dd, $r29=0xfd77fd6e69e371c6, $r10=0xcaa2ec6ad4f3b996
+after:  $r7=0xfffffff5dff5b9a7, $r29=0xfd77fd6e69e371c6, $r10=0xcaa2ec6ad4f3b996
+sra.d $r24, $r25, $r26 ::
+before: $r24=0x472602300b4f04c9, $r25=0x54ceea832a5677e9, $r26=0x5f63e9d9d6eb4af0
+after:  $r24=0x00000000000054ce, $r25=0x54ceea832a5677e9, $r26=0x5f63e9d9d6eb4af0
+sra.d $r23, $r4, $r27 ::
+before: $r23=0xe8b449325a0ed51e, $r4=0xd96928476f8441a5, $r27=0x7e1ae8fd9c849dce
+after:  $r23=0xffff65a4a11dbe11, $r4=0xd96928476f8441a5, $r27=0x7e1ae8fd9c849dce
+sra.d $r15, $r9, $r12 ::
+before: $r15=0x71601a1a2b155f51, $r9=0x0bcbb1d162563240, $r12=0x5a906ad2f4abb4c7
+after:  $r15=0x00179763a2c4ac64, $r9=0x0bcbb1d162563240, $r12=0x5a906ad2f4abb4c7
+sra.d $r16, $r29, $r23 ::
+before: $r16=0x1686886f27d397fb, $r29=0x851328b2655e5689, $r23=0x1634457590cd4033
+after:  $r16=0xfffffffffffff0a2, $r29=0x851328b2655e5689, $r23=0x1634457590cd4033
+rotr.w $r8, $r5, $r18 ::
+before: $r8=0xc4394aae4c13908b, $r5=0xa0c5728d1211b595, $r18=0x3d562746b3943f3b
+after:  $r8=0x000000004236b2a2, $r5=0xa0c5728d1211b595, $r18=0x3d562746b3943f3b
+rotr.w $r19, $r18, $r10 ::
+before: $r19=0x284b501639de116b, $r18=0x4248ad6cc0107902, $r10=0xb41907b756bf8004
+after:  $r19=0x000000002c010790, $r18=0x4248ad6cc0107902, $r10=0xb41907b756bf8004
+rotr.w $r29, $r8, $r4 ::
+before: $r29=0x2656b50c7d689f19, $r8=0x7b5d21fdce9bcb73, $r4=0x5b212fbe9e6b8522
+after:  $r29=0xfffffffff3a6f2dc, $r8=0x7b5d21fdce9bcb73, $r4=0x5b212fbe9e6b8522
+rotr.w $r25, $r6, $r30 ::
+before: $r25=0x4c79ed7a1695fc25, $r6=0x6bac1698a978f50f, $r30=0xf1d58570dfb10203
+after:  $r25=0xfffffffff52f1ea1, $r6=0x6bac1698a978f50f, $r30=0xf1d58570dfb10203
+rotr.w $r14, $r18, $r6 ::
+before: $r14=0xe894476b4ebbff23, $r18=0x1398b65ae1e91c98, $r6=0xebb6c3f5f689d2d8
+after:  $r14=0xffffffffe91c98e1, $r18=0x1398b65ae1e91c98, $r6=0xebb6c3f5f689d2d8
+rotr.w $r19, $r29, $r26 ::
+before: $r19=0x2595423cc93ecd7c, $r29=0x6c462c2d29d8f908, $r26=0x19142efd8e0b48b8
+after:  $r19=0xffffffffd8f90829, $r29=0x6c462c2d29d8f908, $r26=0x19142efd8e0b48b8
+rotr.w $r23, $r10, $r25 ::
+before: $r23=0x68b4d913b267a3a2, $r10=0x69afb673907e4506, $r25=0xbd09ff2ed890862d
+after:  $r23=0x00000000283483f2, $r10=0x69afb673907e4506, $r25=0xbd09ff2ed890862d
+rotr.w $r9, $r14, $r27 ::
+before: $r9=0x17a45b8cbdebd6ef, $r14=0x33effef864846356, $r27=0x3f52e437f2d5da62
+after:  $r9=0xffffffff992118d5, $r14=0x33effef864846356, $r27=0x3f52e437f2d5da62
+rotr.w $r5, $r12, $r23 ::
+before: $r5=0x2d191b1a9707cf26, $r12=0x86fa75433dac3d39, $r23=0x21136a02424e5da4
+after:  $r5=0xffffffff93dac3d3, $r12=0x86fa75433dac3d39, $r23=0x21136a02424e5da4
+rotr.w $r29, $r18, $r27 ::
+before: $r29=0x7d989f74f9944f8d, $r18=0x0050fe5829a153e6, $r27=0x926776f9140b06fc
+after:  $r29=0xffffffff9a153e62, $r18=0x0050fe5829a153e6, $r27=0x926776f9140b06fc
+rotr.d $r29, $r19, $r13 ::
+before: $r29=0x1e02c0c28ec3f9b1, $r19=0xf2e79e6ff240b188, $r13=0x60f500663eddf444
+after:  $r29=0x8f2e79e6ff240b18, $r19=0xf2e79e6ff240b188, $r13=0x60f500663eddf444
+rotr.d $r30, $r4, $r14 ::
+before: $r30=0x97f6be8229e2e822, $r4=0xf79aaeb2c03a2113, $r14=0xbbdb2cb642605ed7
+after:  $r30=0x744227ef355d6580, $r4=0xf79aaeb2c03a2113, $r14=0xbbdb2cb642605ed7
+rotr.d $r6, $r19, $r7 ::
+before: $r6=0x1611806010ce99d8, $r19=0xcb64270e0fc5b4c7, $r7=0x0eda6972c46af03c
+after:  $r6=0xb64270e0fc5b4c7c, $r19=0xcb64270e0fc5b4c7, $r7=0x0eda6972c46af03c
+rotr.d $r4, $r15, $r30 ::
+before: $r4=0xe63084e97bd0efb3, $r15=0x6e1aa322e38e9b66, $r30=0xa7df0f1d92106e2d
+after:  $r4=0x19171c74db3370d5, $r15=0x6e1aa322e38e9b66, $r30=0xa7df0f1d92106e2d
+rotr.d $r16, $r27, $r10 ::
+before: $r16=0x1ff92fbb0f10ff9a, $r27=0x015c2eb91c9ae124, $r10=0x8b4c97ee7f9bc2fa
+after:  $r16=0x570bae4726b84900, $r27=0x015c2eb91c9ae124, $r10=0x8b4c97ee7f9bc2fa
+rotr.d $r28, $r7, $r25 ::
+before: $r28=0xbd766a63bbead21c, $r7=0x0d97b509610db5e7, $r25=0x3151203010315af5
+after:  $r28=0xbda84b086daf386c, $r7=0x0d97b509610db5e7, $r25=0x3151203010315af5
+rotr.d $r9, $r20, $r23 ::
+before: $r9=0x8a2bb5eacea50d68, $r20=0x947ec1930151adb9, $r23=0xc2f39e045d278b7b
+after:  $r9=0x8fd832602a35b732, $r20=0x947ec1930151adb9, $r23=0xc2f39e045d278b7b
+rotr.d $r25, $r13, $r23 ::
+before: $r25=0xcaddb8ea7bd492c7, $r13=0x416a1b790dbf45cb, $r23=0x44c59965e1c6af25
+after:  $r25=0xc86dfa2e5a0b50db, $r13=0x416a1b790dbf45cb, $r23=0x44c59965e1c6af25
+rotr.d $r14, $r7, $r31 ::
+before: $r14=0x8ca18b58047c8b5a, $r7=0x93a6cdc3585b5446, $r31=0x70cd84ec07e33cef
+after:  $r14=0x9b86b0b6a88d274d, $r7=0x93a6cdc3585b5446, $r31=0x70cd84ec07e33cef
+rotr.d $r14, $r9, $r4 ::
+before: $r14=0x48bd5c133004f490, $r9=0xad095be0915fe20b, $r4=0xc1fff6ff603a47b3
+after:  $r14=0x2b7c122bfc4175a1, $r9=0xad095be0915fe20b, $r4=0xc1fff6ff603a47b3
+slli.w $r18, $r8, 10 ::
+before: $r18=0xe7f8823a2989c395, $r8=0xf0ccc85519ad1e0a
+after:  $r18=0xffffffffb4782800, $r8=0xf0ccc85519ad1e0a
+slli.w $r27, $r17, 30 ::
+before: $r27=0x2e66b550a3bb071d, $r17=0x20943aa3eaa4024e
+after:  $r27=0xffffffff80000000, $r17=0x20943aa3eaa4024e
+slli.w $r27, $r23, 31 ::
+before: $r27=0x70daa2bee8209243, $r23=0x2e9160afd2e28a64
+after:  $r27=000000000000000000, $r23=0x2e9160afd2e28a64
+slli.w $r10, $r13, 12 ::
+before: $r10=0x701c424632b5dc29, $r13=0x591054db6afe1725
+after:  $r10=0xffffffffe1725000, $r13=0x591054db6afe1725
+slli.w $r7, $r15, 19 ::
+before: $r7=0xdd1d7fe3ae579499, $r15=0x2e077f689088c0c7
+after:  $r7=0x0000000006380000, $r15=0x2e077f689088c0c7
+slli.w $r6, $r8, 12 ::
+before: $r6=0xff732113ddaab79b, $r8=0x9cacf8e6d9e37f97
+after:  $r6=0x0000000037f97000, $r8=0x9cacf8e6d9e37f97
+slli.w $r5, $r19, 22 ::
+before: $r5=0xcef75ddd2adc5853, $r19=0xcc24ed9167fd06ea
+after:  $r5=0xffffffffba800000, $r19=0xcc24ed9167fd06ea
+slli.w $r17, $r8, 7 ::
+before: $r17=0x3c8788fed3e8a049, $r8=0xccf9b2d2c2e80251
+after:  $r17=0x0000000074012880, $r8=0xccf9b2d2c2e80251
+slli.w $r14, $r29, 10 ::
+before: $r14=0x0e1b0b077db4f08e, $r29=0x76aea4b9ae43cdfb
+after:  $r14=0x000000000f37ec00, $r29=0x76aea4b9ae43cdfb
+slli.w $r23, $r30, 26 ::
+before: $r23=0x13d8514aeb0dc12b, $r30=0x9c8352804e7e8ccb
+after:  $r23=0x000000002c000000, $r30=0x9c8352804e7e8ccb
+slli.d $r27, $r28, 5 ::
+before: $r27=0x689a2c4141835926, $r28=0x1b6ff38e611d1e4d
+after:  $r27=0x6dfe71cc23a3c9a0, $r28=0x1b6ff38e611d1e4d
+slli.d $r5, $r20, 1 ::
+before: $r5=0xff3391c2323defa6, $r20=0xe99a134a0c1a2574
+after:  $r5=0xd334269418344ae8, $r20=0xe99a134a0c1a2574
+slli.d $r27, $r7, 61 ::
+before: $r27=0xc32d8fb319ba47e6, $r7=0xc6530e0e601d3631
+after:  $r27=0x2000000000000000, $r7=0xc6530e0e601d3631
+slli.d $r5, $r26, 45 ::
+before: $r5=0x979553ff112cdf52, $r26=0x931e420364fdcaca
+after:  $r5=0xb959400000000000, $r26=0x931e420364fdcaca
+slli.d $r27, $r5, 60 ::
+before: $r27=0xa7f70b048a4087b0, $r5=0xc1b829210c3cd5a9
+after:  $r27=0x9000000000000000, $r5=0xc1b829210c3cd5a9
+slli.d $r23, $r10, 59 ::
+before: $r23=0xcd547af78ac66ca7, $r10=0xa2c0802de6c82645
+after:  $r23=0x2800000000000000, $r10=0xa2c0802de6c82645
+slli.d $r13, $r30, 56 ::
+before: $r13=0x0410b8f25e1234ee, $r30=0xdbaacfe884cda24d
+after:  $r13=0x4d00000000000000, $r30=0xdbaacfe884cda24d
+slli.d $r16, $r4, 20 ::
+before: $r16=0x44a2ff35045ec37c, $r4=0xee2240010629a8ee
+after:  $r16=0x0010629a8ee00000, $r4=0xee2240010629a8ee
+slli.d $r19, $r20, 25 ::
+before: $r19=0x8617d88408d75cac, $r20=0xba15483820d66ae7
+after:  $r19=0x7041acd5ce000000, $r20=0xba15483820d66ae7
+slli.d $r24, $r27, 13 ::
+before: $r24=0x669e0e9b99d5b604, $r27=0xf5d1ffc374e53c7d
+after:  $r24=0x3ff86e9ca78fa000, $r27=0xf5d1ffc374e53c7d
+srli.w $r20, $r16, 10 ::
+before: $r20=0x7f5310ac5eaa9924, $r16=0x0ea8b69613d183ee
+after:  $r20=0x000000000004f460, $r16=0x0ea8b69613d183ee
+srli.w $r13, $r15, 0 ::
+before: $r13=0x5f4d9313f9224389, $r15=0xd544272206f4e814
+after:  $r13=0x0000000006f4e814, $r15=0xd544272206f4e814
+srli.w $r17, $r18, 7 ::
+before: $r17=0xd9b2c942f996cc8a, $r18=0x704cd1d89de5c2b4
+after:  $r17=0x00000000013bcb85, $r18=0x704cd1d89de5c2b4
+srli.w $r27, $r28, 18 ::
+before: $r27=0xa3eef8efc97e0d4f, $r28=0x8c449e6236daa7a2
+after:  $r27=0x0000000000000db6, $r28=0x8c449e6236daa7a2
+srli.w $r9, $r10, 29 ::
+before: $r9=0x6c044927152e5fc9, $r10=0x592a1607944e0109
+after:  $r9=0x0000000000000004, $r10=0x592a1607944e0109
+srli.w $r8, $r24, 31 ::
+before: $r8=0xcaa01b37d49db675, $r24=0x5e35848bbc958164
+after:  $r8=0x0000000000000001, $r24=0x5e35848bbc958164
+srli.w $r6, $r16, 18 ::
+before: $r6=0xe2fbe1accb343769, $r16=0x85f5e17c7d785222
+after:  $r6=0x0000000000001f5e, $r16=0x85f5e17c7d785222
+srli.w $r18, $r25, 31 ::
+before: $r18=0x4653c07e0627825f, $r25=0x44fffa524ffd0417
+after:  $r18=000000000000000000, $r25=0x44fffa524ffd0417
+srli.w $r5, $r26, 22 ::
+before: $r5=0x817ebd7154c8ed46, $r26=0xc7399a9899fc5958
+after:  $r5=0x0000000000000267, $r26=0xc7399a9899fc5958
+srli.w $r27, $r4, 27 ::
+before: $r27=0x3e4b17b34f2b08d0, $r4=0x5bedb97aefd697f4
+after:  $r27=0x000000000000001d, $r4=0x5bedb97aefd697f4
+srli.d $r31, $r9, 51 ::
+before: $r31=0x8fc21da189af52ed, $r9=0x235bf33e3e612a15
+after:  $r31=0x000000000000046b, $r9=0x235bf33e3e612a15
+srli.d $r26, $r7, 36 ::
+before: $r26=0xcd1eaac4df2531dd, $r7=0xe87216fce9c75788
+after:  $r26=0x000000000e87216f, $r7=0xe87216fce9c75788
+srli.d $r6, $r31, 29 ::
+before: $r6=0xc0282beeb7dc6618, $r31=0x8b58604d6be3e8e0
+after:  $r6=0x000000045ac3026b, $r31=0x8b58604d6be3e8e0
+srli.d $r20, $r6, 18 ::
+before: $r20=0x1546fdd9fc133e39, $r6=0x74067840bb05a992
+after:  $r20=0x00001d019e102ec1, $r6=0x74067840bb05a992
+srli.d $r28, $r20, 28 ::
+before: $r28=0xaa1f88b09e13e4c6, $r20=0x6e153faa5221e893
+after:  $r28=0x00000006e153faa5, $r20=0x6e153faa5221e893
+srli.d $r26, $r4, 55 ::
+before: $r26=0x2ba2151c80dbea7a, $r4=0x21246f3c7063edf9
+after:  $r26=0x0000000000000042, $r4=0x21246f3c7063edf9
+srli.d $r28, $r29, 34 ::
+before: $r28=0xcd72eff1b5aa0877, $r29=0x5d9488c1d61a1544
+after:  $r28=0x0000000017652230, $r29=0x5d9488c1d61a1544
+srli.d $r13, $r7, 62 ::
+before: $r13=0x5953b78fbd8109a9, $r7=0x862731652b653859
+after:  $r13=0x0000000000000002, $r7=0x862731652b653859
+srli.d $r29, $r18, 25 ::
+before: $r29=0xab821449d149a976, $r18=0xcb73553146cc4bdc
+after:  $r29=0x00000065b9aa98a3, $r18=0xcb73553146cc4bdc
+srli.d $r28, $r7, 2 ::
+before: $r28=0x31272fa88123357d, $r7=0x0e9359f7a9f92ec5
+after:  $r28=0x03a4d67dea7e4bb1, $r7=0x0e9359f7a9f92ec5
+srai.w $r26, $r23, 2 ::
+before: $r26=0xe73a55c2b7005c01, $r23=0xfcd659254f4b3fe7
+after:  $r26=0x0000000013d2cff9, $r23=0xfcd659254f4b3fe7
+srai.w $r31, $r10, 0 ::
+before: $r31=0x2e0c4330fae0890a, $r10=0xa76ca364a204c82b
+after:  $r31=0xffffffffa204c82b, $r10=0xa76ca364a204c82b
+srai.w $r31, $r8, 0 ::
+before: $r31=0x64790bb6e8674f68, $r8=0xce5594f964c4a026
+after:  $r31=0x0000000064c4a026, $r8=0xce5594f964c4a026
+srai.w $r15, $r31, 27 ::
+before: $r15=0xccfb53c708026acd, $r31=0xce185873627515b5
+after:  $r15=0x000000000000000c, $r31=0xce185873627515b5
+srai.w $r16, $r28, 1 ::
+before: $r16=0x994c4d22e90185a2, $r28=0x49995d51019e1050
+after:  $r16=0x0000000000cf0828, $r28=0x49995d51019e1050
+srai.w $r13, $r16, 16 ::
+before: $r13=0x0484408b57b3ab89, $r16=0x437401347e23c399
+after:  $r13=0x0000000000007e23, $r16=0x437401347e23c399
+srai.w $r4, $r9, 7 ::
+before: $r4=0x0d1d936105b7cca3, $r9=0xd49c3c65e292b942
+after:  $r4=0xffffffffffc52572, $r9=0xd49c3c65e292b942
+srai.w $r24, $r15, 10 ::
+before: $r24=0xaa9377005232ec93, $r15=0xde29d0172b40f03d
+after:  $r24=0x00000000000ad03c, $r15=0xde29d0172b40f03d
+srai.w $r19, $r14, 24 ::
+before: $r19=0xa49c65a4c2cde36d, $r14=0x782e0d4b8a7a28d0
+after:  $r19=0xffffffffffffff8a, $r14=0x782e0d4b8a7a28d0
+srai.w $r24, $r27, 24 ::
+before: $r24=0x404f816ff696bbc8, $r27=0x1b6900e15f252315
+after:  $r24=0x000000000000005f, $r27=0x1b6900e15f252315
+srai.d $r24, $r4, 22 ::
+before: $r24=0x96250384fede78c7, $r4=0x6c501d9ec5e9e731
+after:  $r24=0x000001b140767b17, $r4=0x6c501d9ec5e9e731
+srai.d $r30, $r19, 17 ::
+before: $r30=0xcfc52d7caaf7bf47, $r19=0x82499a30d50f8b83
+after:  $r30=0xffffc124cd186a87, $r19=0x82499a30d50f8b83
+srai.d $r12, $r12, 5 ::
+before: $r12=0x628a1a46bbe30c16, $r12=0xaba392c50d63ea53
+after:  $r12=0xfd5d1c96286b1f52, $r12=0xfd5d1c96286b1f52
+srai.d $r24, $r9, 2 ::
+before: $r24=0x021c1bb01f0253d8, $r9=0xb35e31d92548a2fe
+after:  $r24=0xecd78c76495228bf, $r9=0xb35e31d92548a2fe
+srai.d $r28, $r7, 62 ::
+before: $r28=0x2a5ac0a983332ec3, $r7=0x2297ae499a473c6d
+after:  $r28=000000000000000000, $r7=0x2297ae499a473c6d
+srai.d $r8, $r17, 31 ::
+before: $r8=0xa27cf36651750e09, $r17=0x1984e046b042d0cf
+after:  $r8=0x000000003309c08d, $r17=0x1984e046b042d0cf
+srai.d $r25, $r16, 37 ::
+before: $r25=0x7df3822fb20b8ded, $r16=0xb4e464563029fac8
+after:  $r25=0xfffffffffda72322, $r16=0xb4e464563029fac8
+srai.d $r14, $r5, 57 ::
+before: $r14=0xe8c1939c13a2e6ca, $r5=0x6a22077c63497a9a
+after:  $r14=0x0000000000000035, $r5=0x6a22077c63497a9a
+srai.d $r25, $r15, 10 ::
+before: $r25=0xf2df68e25cccf72e, $r15=0xe0af648201f919fc
+after:  $r25=0xfff82bd920807e46, $r15=0xe0af648201f919fc
+srai.d $r6, $r15, 49 ::
+before: $r6=0xa24591b35142aa9c, $r15=0x12b20ac67de77b8d
+after:  $r6=0x0000000000000959, $r15=0x12b20ac67de77b8d
+rotri.w $r18, $r6, 20 ::
+before: $r18=0xf0c65b137926ba00, $r6=0x95e0f5f057a212c5
+after:  $r18=0x00000000212c557a, $r6=0x95e0f5f057a212c5
+rotri.w $r9, $r16, 27 ::
+before: $r9=0xe36356471d2a7e18, $r16=0xb8af3071021bd869
+after:  $r9=0x00000000437b0d20, $r16=0xb8af3071021bd869
+rotri.w $r5, $r31, 1 ::
+before: $r5=0x5992fc9cfce2ebe9, $r31=0x6c427c821603d01a
+after:  $r5=0x000000000b01e80d, $r31=0x6c427c821603d01a
+rotri.w $r27, $r13, 23 ::
+before: $r27=0x0239c57dca2ab060, $r13=0xed54e28825b25471
+after:  $r27=0x0000000064a8e24b, $r13=0xed54e28825b25471
+rotri.w $r18, $r18, 7 ::
+before: $r18=0xb84df2305a710936, $r18=0x8aae5248c6d4973c
+after:  $r18=0x00000000798da92e, $r18=0x00000000798da92e
+rotri.w $r4, $r27, 29 ::
+before: $r4=0x730e1701570ac9fc, $r27=0xd55b9d54232536e7
+after:  $r4=0x000000001929b739, $r27=0xd55b9d54232536e7
+rotri.w $r19, $r18, 0 ::
+before: $r19=0x36dbceffa501d8dc, $r18=0x8415238fa1dd314f
+after:  $r19=0xffffffffa1dd314f, $r18=0x8415238fa1dd314f
+rotri.w $r13, $r24, 21 ::
+before: $r13=0x00c1ac428ddf5193, $r24=0x3b588028fcfbb0a8
+after:  $r13=0xffffffffdd8547e7, $r24=0x3b588028fcfbb0a8
+rotri.w $r14, $r25, 29 ::
+before: $r14=0x733414543ca8145e, $r25=0xded24831de35be08
+after:  $r14=0xfffffffff1adf046, $r25=0xded24831de35be08
+rotri.w $r27, $r5, 8 ::
+before: $r27=0x60afaebb36d22ba0, $r5=0x0fd31a16f03582b5
+after:  $r27=0xffffffffb5f03582, $r5=0x0fd31a16f03582b5
+rotri.d $r20, $r7, 53 ::
+before: $r20=0xe112a6d47c0444c1, $r7=0xbd9bbb91bdc381c5
+after:  $r20=0xdddc8dee1c0e2dec, $r7=0xbd9bbb91bdc381c5
+rotri.d $r27, $r16, 62 ::
+before: $r27=0xf254a827c1ef7351, $r16=0x3de084650f757ceb
+after:  $r27=0xf78211943dd5f3ac, $r16=0x3de084650f757ceb
+rotri.d $r30, $r17, 10 ::
+before: $r30=0x31c36a8c83999eb2, $r17=0x107098a9863e85d5
+after:  $r30=0x75441c262a618fa1, $r17=0x107098a9863e85d5
+rotri.d $r29, $r8, 46 ::
+before: $r29=0xf2e7a25c121af3c3, $r8=0xb177c110c3dd3225
+after:  $r29=0x04430f74c896c5df, $r8=0xb177c110c3dd3225
+rotri.d $r4, $r26, 45 ::
+before: $r4=0xdd94ff60f2e1abff, $r26=0xb76d3e4a0af02e4d
+after:  $r4=0xf2505781726dbb69, $r26=0xb76d3e4a0af02e4d
+rotri.d $r10, $r9, 42 ::
+before: $r10=0x6064d48d901beca7, $r9=0xea20b33360134ab2
+after:  $r10=0xccd804d2acba882c, $r9=0xea20b33360134ab2
+rotri.d $r4, $r26, 27 ::
+before: $r4=0x27f1e63c8f7f71cf, $r26=0xf4c5c8a69f37a1bd
+after:  $r4=0xe6f437be98b914d3, $r26=0xf4c5c8a69f37a1bd
+rotri.d $r9, $r16, 20 ::
+before: $r9=0x7d4cb07a3ab72944, $r16=0xd5ee210421c6080e
+after:  $r9=0x6080ed5ee210421c, $r16=0xd5ee210421c6080e
+rotri.d $r24, $r26, 4 ::
+before: $r24=0x1ce66a79f3e45e6f, $r26=0x6e1767144ffa6e2d
+after:  $r24=0xd6e1767144ffa6e2, $r26=0x6e1767144ffa6e2d
+rotri.d $r4, $r18, 46 ::
+before: $r4=0x04173f8102b03399, $r18=0xde7066568917d899
+after:  $r4=0x995a245f626779c1, $r18=0xde7066568917d899
+ext.w.h $r17, $r14 ::
+before: $r17=0x58af862c6fc4208d, $r14=0x6235b0cfe4eed6ed
+after:  $r17=0xffffffffffffd6ed, $r14=0x6235b0cfe4eed6ed
+ext.w.h $r31, $r20 ::
+before: $r31=0x425af3dcd83fa9fd, $r20=0x6e59403101a538f1
+after:  $r31=0x00000000000038f1, $r20=0x6e59403101a538f1
+ext.w.h $r18, $r27 ::
+before: $r18=0xcb140226bf788367, $r27=0x58a5430ee4e1616e
+after:  $r18=0x000000000000616e, $r27=0x58a5430ee4e1616e
+ext.w.h $r15, $r10 ::
+before: $r15=0xd3debaf05f7d909f, $r10=0x6f7083340247fb12
+after:  $r15=0xfffffffffffffb12, $r10=0x6f7083340247fb12
+ext.w.h $r12, $r15 ::
+before: $r12=0x5dc6f7191af80bcf, $r15=0xb1f1c8f4b11c03d9
+after:  $r12=0x00000000000003d9, $r15=0xb1f1c8f4b11c03d9
+ext.w.h $r7, $r15 ::
+before: $r7=0x5ffe304a5c9dc9d2, $r15=0x102fb4fa33193103
+after:  $r7=0x0000000000003103, $r15=0x102fb4fa33193103
+ext.w.h $r16, $r16 ::
+before: $r16=0x533616e37505799f, $r16=0xf988c7255086f4f5
+after:  $r16=0xfffffffffffff4f5, $r16=0xfffffffffffff4f5
+ext.w.h $r13, $r25 ::
+before: $r13=0x805a406557ed3fac, $r25=0xdc6ce0f2993b219b
+after:  $r13=0x000000000000219b, $r25=0xdc6ce0f2993b219b
+ext.w.h $r19, $r20 ::
+before: $r19=0xcc49c20125c4755d, $r20=0xde7b765222a9703a
+after:  $r19=0x000000000000703a, $r20=0xde7b765222a9703a
+ext.w.h $r18, $r7 ::
+before: $r18=0xe0dd9155cbe168c6, $r7=0xc1063421eae07663
+after:  $r18=0x0000000000007663, $r7=0xc1063421eae07663
+ext.w.b $r16, $r23 ::
+before: $r16=0x21666e814555aa02, $r23=0x926b8d68b5c40592
+after:  $r16=0xffffffffffffff92, $r23=0x926b8d68b5c40592
+ext.w.b $r8, $r20 ::
+before: $r8=0xf68ae0a0ac497ded, $r20=0x0bfb5d489716d0c5
+after:  $r8=0xffffffffffffffc5, $r20=0x0bfb5d489716d0c5
+ext.w.b $r24, $r15 ::
+before: $r24=0xbc84e54c82fd6e51, $r15=0x7d814b11e5eb07f6
+after:  $r24=0xfffffffffffffff6, $r15=0x7d814b11e5eb07f6
+ext.w.b $r31, $r17 ::
+before: $r31=0x14e575a8dda1f0d3, $r17=0x6a111e663a52244c
+after:  $r31=0x000000000000004c, $r17=0x6a111e663a52244c
+ext.w.b $r16, $r8 ::
+before: $r16=0x911acc218fcf640b, $r8=0xac1405ad05b23e43
+after:  $r16=0x0000000000000043, $r8=0xac1405ad05b23e43
+ext.w.b $r28, $r8 ::
+before: $r28=0x77fb13eaa8995607, $r8=0x05c97a81f12da7d3
+after:  $r28=0xffffffffffffffd3, $r8=0x05c97a81f12da7d3
+ext.w.b $r9, $r23 ::
+before: $r9=0xb88cfdb98683e15e, $r23=0x74893b34973e16cb
+after:  $r9=0xffffffffffffffcb, $r23=0x74893b34973e16cb
+ext.w.b $r31, $r4 ::
+before: $r31=0xc7168cb4f7d079e4, $r4=0xf4fc215bc2c5273e
+after:  $r31=0x000000000000003e, $r4=0xf4fc215bc2c5273e
+ext.w.b $r4, $r18 ::
+before: $r4=0x0e2e5dca4727b373, $r18=0xa1b97136f32e452b
+after:  $r4=0x000000000000002b, $r18=0xa1b97136f32e452b
+ext.w.b $r8, $r29 ::
+before: $r8=0x625eb5236f483daa, $r29=0x3ceca34ee347e7c8
+after:  $r8=0xffffffffffffffc8, $r29=0x3ceca34ee347e7c8
+clo.w $r4, $r13 ::
+before: $r4=0x0bcca747f77aca28, $r13=0x8df71972c1a17096
+after:  $r4=0x0000000000000002, $r13=0x8df71972c1a17096
+clo.w $r27, $r5 ::
+before: $r27=0x98a9e6d99d8e84cb, $r5=0xdc59d3c8fc1540e4
+after:  $r27=0x0000000000000006, $r5=0xdc59d3c8fc1540e4
+clo.w $r9, $r14 ::
+before: $r9=0xe8e78b162c95ed66, $r14=0xdfad6854bbf442e6
+after:  $r9=0x0000000000000001, $r14=0xdfad6854bbf442e6
+clo.w $r13, $r26 ::
+before: $r13=0xa3db2cf80f9112cd, $r26=0x7676463dd6f13f80
+after:  $r13=0x0000000000000002, $r26=0x7676463dd6f13f80
+clo.w $r7, $r16 ::
+before: $r7=0xb5213ab31b574031, $r16=0x478c19ebdeaa74c0
+after:  $r7=0x0000000000000002, $r16=0x478c19ebdeaa74c0
+clo.w $r13, $r12 ::
+before: $r13=0xd68d9661284fb9d7, $r12=0x702bf24fddd8bfe0
+after:  $r13=0x0000000000000002, $r12=0x702bf24fddd8bfe0
+clo.w $r18, $r20 ::
+before: $r18=0x510cd4002aff4c6c, $r20=0x4fc898e8b83669ee
+after:  $r18=0x0000000000000001, $r20=0x4fc898e8b83669ee
+clo.w $r5, $r9 ::
+before: $r5=0x53c0de96f709208d, $r9=0x0e56d87b898438b5
+after:  $r5=0x0000000000000001, $r9=0x0e56d87b898438b5
+clo.w $r20, $r5 ::
+before: $r20=0x96187854fcce4fd1, $r5=0xf1248bea6ed8be30
+after:  $r20=000000000000000000, $r5=0xf1248bea6ed8be30
+clo.w $r20, $r31 ::
+before: $r20=0xb1abb4795d411683, $r31=0x01025f914a9225e6
+after:  $r20=000000000000000000, $r31=0x01025f914a9225e6
+clz.w $r19, $r8 ::
+before: $r19=0x374348642747a8dc, $r8=0xd8ec1d547d95ada5
+after:  $r19=0x0000000000000001, $r8=0xd8ec1d547d95ada5
+clz.w $r26, $r4 ::
+before: $r26=0x741ab4d14b9ee1f8, $r4=0x99e2ef840817cfff
+after:  $r26=0x0000000000000004, $r4=0x99e2ef840817cfff
+clz.w $r17, $r4 ::
+before: $r17=0x45c9ce7217f501b3, $r4=0xa387a194cd03bcf1
+after:  $r17=000000000000000000, $r4=0xa387a194cd03bcf1
+clz.w $r13, $r26 ::
+before: $r13=0x69707656f354d758, $r26=0xd4a8f8ab02b876b0
+after:  $r13=0x0000000000000006, $r26=0xd4a8f8ab02b876b0
+clz.w $r25, $r13 ::
+before: $r25=0x103ce6ee41e094c3, $r13=0xd7a85bf4006e655a
+after:  $r25=0x0000000000000009, $r13=0xd7a85bf4006e655a
+clz.w $r5, $r13 ::
+before: $r5=0x3910578929e7cd4a, $r13=0x93c87b02b7b1b603
+after:  $r5=000000000000000000, $r13=0x93c87b02b7b1b603
+clz.w $r18, $r29 ::
+before: $r18=0x10639f8979feefe5, $r29=0x9d8b4b8f8493f844
+after:  $r18=000000000000000000, $r29=0x9d8b4b8f8493f844
+clz.w $r25, $r16 ::
+before: $r25=0x7b35b3e995b3b44d, $r16=0xad953d0ae0b3e870
+after:  $r25=000000000000000000, $r16=0xad953d0ae0b3e870
+clz.w $r6, $r25 ::
+before: $r6=0xda6cbd19f10ef86f, $r25=0x1d6665db1162cfb4
+after:  $r6=0x0000000000000003, $r25=0x1d6665db1162cfb4
+clz.w $r5, $r12 ::
+before: $r5=0x8a6f4d6ec8d7c00d, $r12=0x19b40cb8dd8d1679
+after:  $r5=000000000000000000, $r12=0x19b40cb8dd8d1679
+cto.w $r7, $r15 ::
+before: $r7=0x7285e9c364562d11, $r15=0x963655c7f58de520
+after:  $r7=000000000000000000, $r15=0x963655c7f58de520
+cto.w $r4, $r15 ::
+before: $r4=0x105dceebc6d7e641, $r15=0xfc01c17baaca9c46
+after:  $r4=000000000000000000, $r15=0xfc01c17baaca9c46
+cto.w $r31, $r28 ::
+before: $r31=0xdeff9742b93f0591, $r28=0x2cf98074b0151f33
+after:  $r31=0x0000000000000002, $r28=0x2cf98074b0151f33
+cto.w $r13, $r8 ::
+before: $r13=0xeee665743cd218ff, $r8=0xbdd700b2535aa3b7
+after:  $r13=0x0000000000000003, $r8=0xbdd700b2535aa3b7
+cto.w $r23, $r13 ::
+before: $r23=0x1cc22cfd7c0c869c, $r13=0x5b848b64decbee8f
+after:  $r23=0x0000000000000004, $r13=0x5b848b64decbee8f
+cto.w $r12, $r18 ::
+before: $r12=0x5c32b3db803e5988, $r18=0x2d5d1ebf93b79dd0
+after:  $r12=000000000000000000, $r18=0x2d5d1ebf93b79dd0
+cto.w $r17, $r9 ::
+before: $r17=0xc11d806786501f0e, $r9=0xd175fe2ca41bda38
+after:  $r17=000000000000000000, $r9=0xd175fe2ca41bda38
+cto.w $r24, $r16 ::
+before: $r24=0x504f9b43af62e2ad, $r16=0xfce545d98e2361da
+after:  $r24=000000000000000000, $r16=0xfce545d98e2361da
+cto.w $r24, $r8 ::
+before: $r24=0xc13ac5668538f5a4, $r8=0x3096912e575d64db
+after:  $r24=0x0000000000000002, $r8=0x3096912e575d64db
+cto.w $r27, $r17 ::
+before: $r27=0xd27f68629dd8d4fb, $r17=0x15ac43632e175a8b
+after:  $r27=0x0000000000000002, $r17=0x15ac43632e175a8b
+ctz.w $r8, $r12 ::
+before: $r8=0xfc9bd3736a3c08bd, $r12=0xaebba33c2e268daa
+after:  $r8=0x0000000000000001, $r12=0xaebba33c2e268daa
+ctz.w $r5, $r27 ::
+before: $r5=0x5dc8af7bac7db01a, $r27=0xabce2f0e113597aa
+after:  $r5=0x0000000000000001, $r27=0xabce2f0e113597aa
+ctz.w $r18, $r6 ::
+before: $r18=0xe4ac5b59d8442dfe, $r6=0x935d1b694e96bd04
+after:  $r18=0x0000000000000002, $r6=0x935d1b694e96bd04
+ctz.w $r9, $r15 ::
+before: $r9=0x9b760f465efbb52e, $r15=0x834c9974dba65d99
+after:  $r9=000000000000000000, $r15=0x834c9974dba65d99
+ctz.w $r13, $r7 ::
+before: $r13=0x95b5748f5f8bfb38, $r7=0x75dd7a9890cdf2d9
+after:  $r13=000000000000000000, $r7=0x75dd7a9890cdf2d9
+ctz.w $r29, $r17 ::
+before: $r29=0xa25119fd892d1b20, $r17=0x38c12e795dc52acf
+after:  $r29=000000000000000000, $r17=0x38c12e795dc52acf
+ctz.w $r15, $r12 ::
+before: $r15=0x95c2ce0f0446807c, $r12=0x623a5915ac8164b2
+after:  $r15=0x0000000000000001, $r12=0x623a5915ac8164b2
+ctz.w $r6, $r17 ::
+before: $r6=0xd9034892a300dca8, $r17=0x5911fea4e6ce1df3
+after:  $r6=000000000000000000, $r17=0x5911fea4e6ce1df3
+ctz.w $r10, $r25 ::
+before: $r10=0xda1e0d0eb34884ab, $r25=0x8d70d49a10ba8968
+after:  $r10=0x0000000000000003, $r25=0x8d70d49a10ba8968
+ctz.w $r14, $r13 ::
+before: $r14=0x207d275c076e5247, $r13=0xd243debc9b557922
+after:  $r14=0x0000000000000001, $r13=0xd243debc9b557922
+clo.d $r7, $r16 ::
+before: $r7=0x9432ccd773e86812, $r16=0x9f921ea959c97c2b
+after:  $r7=0x0000000000000001, $r16=0x9f921ea959c97c2b
+clo.d $r7, $r12 ::
+before: $r7=0xaf19ef0b422b09bf, $r12=0x8773ec5c72444fe2
+after:  $r7=0x0000000000000001, $r12=0x8773ec5c72444fe2
+clo.d $r5, $r10 ::
+before: $r5=0xa2912bc0ca36fa58, $r10=0x2c93a7506a8979b7
+after:  $r5=000000000000000000, $r10=0x2c93a7506a8979b7
+clo.d $r7, $r28 ::
+before: $r7=0x69dd3f71121c7380, $r28=0x1784b7c2c7558b4a
+after:  $r7=000000000000000000, $r28=0x1784b7c2c7558b4a
+clo.d $r15, $r9 ::
+before: $r15=0x95b40b42f113cecc, $r9=0xf0cdb7b9c17bb9e1
+after:  $r15=0x0000000000000004, $r9=0xf0cdb7b9c17bb9e1
+clo.d $r9, $r27 ::
+before: $r9=0x1961ee1499945d08, $r27=0x23c7a2252c1cbc78
+after:  $r9=000000000000000000, $r27=0x23c7a2252c1cbc78
+clo.d $r30, $r19 ::
+before: $r30=0xda0aa8b04f719a51, $r19=0x8f93c7a1b3cc9f12
+after:  $r30=0x0000000000000001, $r19=0x8f93c7a1b3cc9f12
+clo.d $r26, $r20 ::
+before: $r26=0xdd4f62bfe1237a28, $r20=0xd61c7bfe05165d04
+after:  $r26=0x0000000000000002, $r20=0xd61c7bfe05165d04
+clo.d $r26, $r6 ::
+before: $r26=0x44a1378e22d6ec81, $r6=0x1b21543ee9abd103
+after:  $r26=000000000000000000, $r6=0x1b21543ee9abd103
+clo.d $r24, $r16 ::
+before: $r24=0x51efcf6ef8eb9917, $r16=0x602cbdf020ee6da8
+after:  $r24=000000000000000000, $r16=0x602cbdf020ee6da8
+clz.d $r27, $r7 ::
+before: $r27=0x91df318f7b476077, $r7=0x6ca0b9cf9bb84c4a
+after:  $r27=0x0000000000000001, $r7=0x6ca0b9cf9bb84c4a
+clz.d $r19, $r30 ::
+before: $r19=0x435d7fb412d9c12c, $r30=0xc926e58bdb46104e
+after:  $r19=000000000000000000, $r30=0xc926e58bdb46104e
+clz.d $r12, $r30 ::
+before: $r12=0x906b06441b2ef62b, $r30=0x04b9b91966077ef0
+after:  $r12=0x0000000000000005, $r30=0x04b9b91966077ef0
+clz.d $r28, $r6 ::
+before: $r28=0x28bb3e3324f33e14, $r6=0x7628cd8752be6223
+after:  $r28=0x0000000000000001, $r6=0x7628cd8752be6223
+clz.d $r14, $r15 ::
+before: $r14=0xb7a5ae04bf2e60c0, $r15=0x41a328a79afda305
+after:  $r14=0x0000000000000001, $r15=0x41a328a79afda305
+clz.d $r4, $r23 ::
+before: $r4=0x5fd8327a265b1a3b, $r23=0x66b92d8b5b842d4a
+after:  $r4=0x0000000000000001, $r23=0x66b92d8b5b842d4a
+clz.d $r18, $r29 ::
+before: $r18=0x73df6808e38c72ad, $r29=0x6b91b11261dd26b6
+after:  $r18=0x0000000000000001, $r29=0x6b91b11261dd26b6
+clz.d $r13, $r8 ::
+before: $r13=0xd8d2dbd71d1783ad, $r8=0xdc50b7586ccab6a1
+after:  $r13=000000000000000000, $r8=0xdc50b7586ccab6a1
+clz.d $r17, $r10 ::
+before: $r17=0xee6f842bb7686b8d, $r10=0xdf52e003cd95f02f
+after:  $r17=000000000000000000, $r10=0xdf52e003cd95f02f
+clz.d $r13, $r8 ::
+before: $r13=0x91e717aef96cc046, $r8=0x5dd0743ed560ba78
+after:  $r13=0x0000000000000001, $r8=0x5dd0743ed560ba78
+cto.d $r31, $r5 ::
+before: $r31=0xf361d5d1fb232769, $r5=0x1530b67240d804cf
+after:  $r31=0x0000000000000004, $r5=0x1530b67240d804cf
+cto.d $r5, $r26 ::
+before: $r5=0xbedb393d17f69d40, $r26=0xcef56269ef7aecda
+after:  $r5=000000000000000000, $r26=0xcef56269ef7aecda
+cto.d $r5, $r31 ::
+before: $r5=0xadd75db878cdbf84, $r31=0x8e08acc65c97f0b2
+after:  $r5=000000000000000000, $r31=0x8e08acc65c97f0b2
+cto.d $r31, $r31 ::
+before: $r31=0x6a8a89827e4929f9, $r31=0x7df0f59d97924bb3
+after:  $r31=0x0000000000000002, $r31=0x0000000000000002
+cto.d $r14, $r30 ::
+before: $r14=0xefb0874ef3600b6d, $r30=0x97a4b45ab971a548
+after:  $r14=000000000000000000, $r30=0x97a4b45ab971a548
+cto.d $r5, $r17 ::
+before: $r5=0x144271fb49c8d2d8, $r17=0x787e6dbb4fec4d21
+after:  $r5=0x0000000000000001, $r17=0x787e6dbb4fec4d21
+cto.d $r28, $r20 ::
+before: $r28=0xd6d0953d2a12c998, $r20=0xafd578caad0dfa09
+after:  $r28=0x0000000000000001, $r20=0xafd578caad0dfa09
+cto.d $r16, $r18 ::
+before: $r16=0x0de650be54a7990c, $r18=0x3ea8f45e10441829
+after:  $r16=0x0000000000000001, $r18=0x3ea8f45e10441829
+cto.d $r15, $r16 ::
+before: $r15=0x0bbd328743f49a86, $r16=0x5cafc638b6b509be
+after:  $r15=000000000000000000, $r16=0x5cafc638b6b509be
+cto.d $r6, $r20 ::
+before: $r6=0x598ee27859cf8d0e, $r20=0x4bce530e537ad762
+after:  $r6=000000000000000000, $r20=0x4bce530e537ad762
+ctz.d $r14, $r28 ::
+before: $r14=0xf2e4d886a8fd3fe3, $r28=0x0dafbabdfefac692
+after:  $r14=0x0000000000000001, $r28=0x0dafbabdfefac692
+ctz.d $r6, $r27 ::
+before: $r6=0xe005a6a20d44fbca, $r27=0xe000ac4f4cfb2ce2
+after:  $r6=0x0000000000000001, $r27=0xe000ac4f4cfb2ce2
+ctz.d $r15, $r26 ::
+before: $r15=0x871c2ccd50ec0784, $r26=0xa82b0d96dd72f11c
+after:  $r15=0x0000000000000002, $r26=0xa82b0d96dd72f11c
+ctz.d $r17, $r20 ::
+before: $r17=0xebe7d9f4ec5055d5, $r20=0x65575957936d1d6e
+after:  $r17=0x0000000000000001, $r20=0x65575957936d1d6e
+ctz.d $r19, $r8 ::
+before: $r19=0x394effa243e5f14c, $r8=0xf6852349a7b00561
+after:  $r19=000000000000000000, $r8=0xf6852349a7b00561
+ctz.d $r5, $r9 ::
+before: $r5=0x3c67392fc408e9db, $r9=0xeff4bf8e886d7cc3
+after:  $r5=000000000000000000, $r9=0xeff4bf8e886d7cc3
+ctz.d $r31, $r15 ::
+before: $r31=0xbf5435775bd0435b, $r15=0x19760246c8d1d680
+after:  $r31=0x0000000000000007, $r15=0x19760246c8d1d680
+ctz.d $r9, $r5 ::
+before: $r9=0x0ccde230362ce06a, $r5=0x7590c6e73077c2bc
+after:  $r9=0x0000000000000002, $r5=0x7590c6e73077c2bc
+ctz.d $r28, $r25 ::
+before: $r28=0x2518777b06d608a0, $r25=0xb87647dad481ba32
+after:  $r28=0x0000000000000001, $r25=0xb87647dad481ba32
+ctz.d $r23, $r19 ::
+before: $r23=0xbe232a9fe2090e75, $r19=0x2dceda5cdc990d2e
+after:  $r23=0x0000000000000001, $r19=0x2dceda5cdc990d2e
+revb.2h $r29, $r30 ::
+before: $r29=0x75397084990a0745, $r30=0x0d4c83f5966c1c17
+after:  $r29=0x000000006c96171c, $r30=0x0d4c83f5966c1c17
+revb.2h $r17, $r23 ::
+before: $r17=0xecfbee2a69bbe344, $r23=0x5a42dc5dc5705f68
+after:  $r17=0x0000000070c5685f, $r23=0x5a42dc5dc5705f68
+revb.2h $r6, $r14 ::
+before: $r6=0xbfeffdbd68845522, $r14=0x3490af5b50fd56bf
+after:  $r6=0xfffffffffd50bf56, $r14=0x3490af5b50fd56bf
+revb.2h $r13, $r6 ::
+before: $r13=0x58e1821d319a1598, $r6=0x4c6711d021a72be6
+after:  $r13=0xffffffffa721e62b, $r6=0x4c6711d021a72be6
+revb.2h $r18, $r8 ::
+before: $r18=0x6e14994d4e16ff86, $r8=0x9fda01513ab5ceb8
+after:  $r18=0xffffffffb53ab8ce, $r8=0x9fda01513ab5ceb8
+revb.2h $r7, $r30 ::
+before: $r7=0x9979d3a3fcfc9323, $r30=0x504c708535bc136f
+after:  $r7=0xffffffffbc356f13, $r30=0x504c708535bc136f
+revb.2h $r28, $r19 ::
+before: $r28=0x9daf4aa3a33eec5f, $r19=0xaa376fc54f4be6f5
+after:  $r28=0x000000004b4ff5e6, $r19=0xaa376fc54f4be6f5
+revb.2h $r30, $r8 ::
+before: $r30=0x2e0bba43ec83e59e, $r8=0xaee8b8acd436f6da
+after:  $r30=0x0000000036d4daf6, $r8=0xaee8b8acd436f6da
+revb.2h $r14, $r7 ::
+before: $r14=0x9634787c9be10863, $r7=0xe9da521d42716c0a
+after:  $r14=0x0000000071420a6c, $r7=0xe9da521d42716c0a
+revb.2h $r23, $r14 ::
+before: $r23=0x687b89225667081a, $r14=0x9089e36a4f12f9c6
+after:  $r23=0x00000000124fc6f9, $r14=0x9089e36a4f12f9c6
+revb.4h $r4, $r25 ::
+before: $r4=0xc42859bd06b669d2, $r25=0x782e4ae6ab812191
+after:  $r4=0x2e78e64a81ab9121, $r25=0x782e4ae6ab812191
+revb.4h $r18, $r19 ::
+before: $r18=0x45ca4499d789fe5b, $r19=0x6e558c98b95d346d
+after:  $r18=0x556e988c5db96d34, $r19=0x6e558c98b95d346d
+revb.4h $r24, $r10 ::
+before: $r24=0x2d04871fd753c43f, $r10=0xbeab033e2b5a979e
+after:  $r24=0xabbe3e035a2b9e97, $r10=0xbeab033e2b5a979e
+revb.4h $r24, $r8 ::
+before: $r24=0xbc4deb39fb2ffe2e, $r8=0x5e3e50b8025e77f3
+after:  $r24=0x3e5eb8505e02f377, $r8=0x5e3e50b8025e77f3
+revb.4h $r7, $r14 ::
+before: $r7=0xf44a6ea6f42e0918, $r14=0x9f617a848e4ad8f2
+after:  $r7=0x619f847a4a8ef2d8, $r14=0x9f617a848e4ad8f2
+revb.4h $r13, $r12 ::
+before: $r13=0xda815ff8648e92b9, $r12=0xa401e74c4dd88e12
+after:  $r13=0x01a44ce7d84d128e, $r12=0xa401e74c4dd88e12
+revb.4h $r31, $r19 ::
+before: $r31=0x7964d861d2ecb8d5, $r19=0xe402e87f73fb4c68
+after:  $r31=0x02e47fe8fb73684c, $r19=0xe402e87f73fb4c68
+revb.4h $r29, $r25 ::
+before: $r29=0x6beff3fa6167cdcc, $r25=0x11e350b71aee0229
+after:  $r29=0xe311b750ee1a2902, $r25=0x11e350b71aee0229
+revb.4h $r4, $r8 ::
+before: $r4=0x357a56e8ae275376, $r8=0xdf8ebc175f4be7e3
+after:  $r4=0x8edf17bc4b5fe3e7, $r8=0xdf8ebc175f4be7e3
+revb.4h $r15, $r27 ::
+before: $r15=0xeb11b29acfe397d6, $r27=0x42d231083cd97aa0
+after:  $r15=0xd2420831d93ca07a, $r27=0x42d231083cd97aa0
+revb.2w $r27, $r31 ::
+before: $r27=0x0978f867dd7f0cb8, $r31=0x19eec2d357cd6a06
+after:  $r27=0xd3c2ee19066acd57, $r31=0x19eec2d357cd6a06
+revb.2w $r10, $r10 ::
+before: $r10=0x7897a40c4fda96d5, $r10=0xcb849783a18de892
+after:  $r10=0x839784cb92e88da1, $r10=0x839784cb92e88da1
+revb.2w $r23, $r14 ::
+before: $r23=0x018338c734be53a1, $r14=0x6258664ec1bb96b8
+after:  $r23=0x4e665862b896bbc1, $r14=0x6258664ec1bb96b8
+revb.2w $r12, $r19 ::
+before: $r12=0x7417ec4fef3451cc, $r19=0x216ad32ee149542b
+after:  $r12=0x2ed36a212b5449e1, $r19=0x216ad32ee149542b
+revb.2w $r31, $r30 ::
+before: $r31=0x8132835b9905b650, $r30=0x6fac007fbefdecf2
+after:  $r31=0x7f00ac6ff2ecfdbe, $r30=0x6fac007fbefdecf2
+revb.2w $r25, $r10 ::
+before: $r25=0x7336ebe375c83bed, $r10=0x643f76ac3010a6bb
+after:  $r25=0xac763f64bba61030, $r10=0x643f76ac3010a6bb
+revb.2w $r31, $r29 ::
+before: $r31=0x5d99f79f18e805b8, $r29=0xe65e70ca4cf299fa
+after:  $r31=0xca705ee6fa99f24c, $r29=0xe65e70ca4cf299fa
+revb.2w $r30, $r19 ::
+before: $r30=0xec10dd6d7249c5fa, $r19=0x3f6bb22d66caf299
+after:  $r30=0x2db26b3f99f2ca66, $r19=0x3f6bb22d66caf299
+revb.2w $r6, $r30 ::
+before: $r6=0x2c394783817c0870, $r30=0xd823cff07efd78db
+after:  $r6=0xf0cf23d8db78fd7e, $r30=0xd823cff07efd78db
+revb.2w $r4, $r15 ::
+before: $r4=0xc5acf61f075cd4e4, $r15=0xc154dd7479b90c6c
+after:  $r4=0x74dd54c16c0cb979, $r15=0xc154dd7479b90c6c
+revb.d $r6, $r23 ::
+before: $r6=0xe6e05a0dafda37ce, $r23=0x2ac7d047f197f6fb
+after:  $r6=0xfbf697f147d0c72a, $r23=0x2ac7d047f197f6fb
+revb.d $r19, $r4 ::
+before: $r19=0xc07a757bea6011ff, $r4=0xcef6cef3e0f941ff
+after:  $r19=0xff41f9e0f3cef6ce, $r4=0xcef6cef3e0f941ff
+revb.d $r6, $r15 ::
+before: $r6=0x711bb31e18fcb2f3, $r15=0x522068042cf5be1a
+after:  $r6=0x1abef52c04682052, $r15=0x522068042cf5be1a
+revb.d $r9, $r7 ::
+before: $r9=0xf9654c655c67392e, $r7=0xa1b065742110e3f4
+after:  $r9=0xf4e310217465b0a1, $r7=0xa1b065742110e3f4
+revb.d $r29, $r4 ::
+before: $r29=0x70c0dcad23609060, $r4=0x5d04b7b2ece6f6bb
+after:  $r29=0xbbf6e6ecb2b7045d, $r4=0x5d04b7b2ece6f6bb
+revb.d $r15, $r4 ::
+before: $r15=0x809930516f3136eb, $r4=0xda33327a8d42ef55
+after:  $r15=0x55ef428d7a3233da, $r4=0xda33327a8d42ef55
+revb.d $r10, $r4 ::
+before: $r10=0x1a7ee04b354f6af5, $r4=0xcda6c6943e46fed7
+after:  $r10=0xd7fe463e94c6a6cd, $r4=0xcda6c6943e46fed7
+revb.d $r20, $r4 ::
+before: $r20=0x315f95452d748459, $r4=0xa001e934745758e0
+after:  $r20=0xe058577434e901a0, $r4=0xa001e934745758e0
+revb.d $r6, $r8 ::
+before: $r6=0xabbd06000374627a, $r8=0x85441006689de89b
+after:  $r6=0x9be89d6806104485, $r8=0x85441006689de89b
+revb.d $r27, $r24 ::
+before: $r27=0x2d404e69f54afa48, $r24=0x46f47b822772f3cd
+after:  $r27=0xcdf37227827bf446, $r24=0x46f47b822772f3cd
+revh.2w $r6, $r15 ::
+before: $r6=0x5b764c7bfb1999eb, $r15=0x86603fc3f96843ed
+after:  $r6=0x3fc3866043edf968, $r15=0x86603fc3f96843ed
+revh.2w $r19, $r10 ::
+before: $r19=0xf39f8e6b43dd63ce, $r10=0x141d294d06276941
+after:  $r19=0x294d141d69410627, $r10=0x141d294d06276941
+revh.2w $r5, $r20 ::
+before: $r5=0x3ff54e5c35d83e69, $r20=0xd677d6a21384278a
+after:  $r5=0xd6a2d677278a1384, $r20=0xd677d6a21384278a
+revh.2w $r4, $r31 ::
+before: $r4=0xce463b02a2f840cc, $r31=0x6f87c9636f9cfca6
+after:  $r4=0xc9636f87fca66f9c, $r31=0x6f87c9636f9cfca6
+revh.2w $r19, $r26 ::
+before: $r19=0x34abc96ddde64e27, $r26=0x723ec7ce92720502
+after:  $r19=0xc7ce723e05029272, $r26=0x723ec7ce92720502
+revh.2w $r8, $r18 ::
+before: $r8=0x1454a1ee8739c235, $r18=0xd890efa373a6dfb0
+after:  $r8=0xefa3d890dfb073a6, $r18=0xd890efa373a6dfb0
+revh.2w $r12, $r31 ::
+before: $r12=0xf0c8b856751cae70, $r31=0xb675dff2568e6ebf
+after:  $r12=0xdff2b6756ebf568e, $r31=0xb675dff2568e6ebf
+revh.2w $r24, $r9 ::
+before: $r24=0xb36984e3a7a3eaea, $r9=0xa169cfa9f35f6a8a
+after:  $r24=0xcfa9a1696a8af35f, $r9=0xa169cfa9f35f6a8a
+revh.2w $r25, $r27 ::
+before: $r25=0x640b3e6b41180473, $r27=0x9bc307f0a2ef368f
+after:  $r25=0x07f09bc3368fa2ef, $r27=0x9bc307f0a2ef368f
+revh.2w $r7, $r9 ::
+before: $r7=0x897e1406a0eb2dc9, $r9=0x1921bcf657fecdcc
+after:  $r7=0xbcf61921cdcc57fe, $r9=0x1921bcf657fecdcc
+revh.d $r14, $r25 ::
+before: $r14=0xec3573411ea025e5, $r25=0x6976d4371b08f1ab
+after:  $r14=0xf1ab1b08d4376976, $r25=0x6976d4371b08f1ab
+revh.d $r24, $r31 ::
+before: $r24=0x9ef9e5cb1375d42a, $r31=0x9ce130c8a579e11d
+after:  $r24=0xe11da57930c89ce1, $r31=0x9ce130c8a579e11d
+revh.d $r9, $r28 ::
+before: $r9=0x3c8cd0055a5e7031, $r28=0xf05f9381753ded16
+after:  $r9=0xed16753d9381f05f, $r28=0xf05f9381753ded16
+revh.d $r24, $r26 ::
+before: $r24=0x6a4e5797f19041f6, $r26=0xd26a5ae65e21041c
+after:  $r24=0x041c5e215ae6d26a, $r26=0xd26a5ae65e21041c
+revh.d $r14, $r24 ::
+before: $r14=0xe2cb9a83aee22d97, $r24=0x6405d71e0bb63321
+after:  $r14=0x33210bb6d71e6405, $r24=0x6405d71e0bb63321
+revh.d $r19, $r23 ::
+before: $r19=0x91cdf3bcd9afe76d, $r23=0x171953826107396a
+after:  $r19=0x396a610753821719, $r23=0x171953826107396a
+revh.d $r23, $r14 ::
+before: $r23=0x93ed49255d084e12, $r14=0x374bd76990198b43
+after:  $r23=0x8b439019d769374b, $r14=0x374bd76990198b43
+revh.d $r31, $r12 ::
+before: $r31=0x08e54a908f04882b, $r12=0xf7e8756491b9d346
+after:  $r31=0xd34691b97564f7e8, $r12=0xf7e8756491b9d346
+revh.d $r31, $r20 ::
+before: $r31=0xbb7cd34502fdf01f, $r20=0x906b7289a6957d3f
+after:  $r31=0x7d3fa6957289906b, $r20=0x906b7289a6957d3f
+revh.d $r27, $r30 ::
+before: $r27=0xacbca1aacdd9dd3f, $r30=0x3072d9c69004d4b5
+after:  $r27=0xd4b59004d9c63072, $r30=0x3072d9c69004d4b5
+bitrev.4b $r23, $r19 ::
+before: $r23=0xb422f2854b491d92, $r19=0x7649084cec69098a
+after:  $r23=0x0000000037969051, $r19=0x7649084cec69098a
+bitrev.4b $r27, $r16 ::
+before: $r27=0xd14736328d74b448, $r16=0x1abee3a271c71db9
+after:  $r27=0xffffffff8ee3b89d, $r16=0x1abee3a271c71db9
+bitrev.4b $r15, $r23 ::
+before: $r15=0xf17c0f0ccfbb2c38, $r23=0x490107ff4155bd17
+after:  $r15=0xffffffff82aabde8, $r23=0x490107ff4155bd17
+bitrev.4b $r5, $r18 ::
+before: $r5=0x8408d6a30523619d, $r18=0x625d5aedf0add9fb
+after:  $r5=0x000000000fb59bdf, $r18=0x625d5aedf0add9fb
+bitrev.4b $r8, $r15 ::
+before: $r8=0xc41a2fdb60ba75a6, $r15=0xe2562eab3b333a00
+after:  $r8=0xffffffffdccc5c00, $r15=0xe2562eab3b333a00
+bitrev.4b $r17, $r18 ::
+before: $r17=0x6a409394f364c02a, $r18=0xea970d90edb343cc
+after:  $r17=0xffffffffb7cdc233, $r18=0xea970d90edb343cc
+bitrev.4b $r25, $r29 ::
+before: $r25=0xd8d1c9b8dcff266d, $r29=0xacca47ac7597ca65
+after:  $r25=0xffffffffaee953a6, $r29=0xacca47ac7597ca65
+bitrev.4b $r26, $r24 ::
+before: $r26=0xe2a0d11df8c5055b, $r24=0xc57559d03e3e216d
+after:  $r26=0x000000007c7c84b6, $r24=0xc57559d03e3e216d
+bitrev.4b $r8, $r27 ::
+before: $r8=0xb6a5815170d657f0, $r27=0x9f60901eefa1347a
+after:  $r8=0xfffffffff7852c5e, $r27=0x9f60901eefa1347a
+bitrev.4b $r20, $r16 ::
+before: $r20=0x432a2fbf2b073732, $r16=0x604b8d7ecb5e86dc
+after:  $r20=0xffffffffd37a613b, $r16=0x604b8d7ecb5e86dc
+bitrev.8b $r25, $r7 ::
+before: $r25=0x22b2e6007f742fd1, $r7=0xe8c23886def1bbc9
+after:  $r25=0x17431c617b8fdd93, $r7=0xe8c23886def1bbc9
+bitrev.8b $r28, $r30 ::
+before: $r28=0xf985d7779c5ca157, $r30=0x285cbdc0f47395d1
+after:  $r28=0x143abd032fcea98b, $r30=0x285cbdc0f47395d1
+bitrev.8b $r29, $r13 ::
+before: $r29=0xd9b8364a793bc50c, $r13=0xded35d7c7ba73d29
+after:  $r29=0x7bcbba3edee5bc94, $r13=0xded35d7c7ba73d29
+bitrev.8b $r12, $r28 ::
+before: $r12=0x18d7769bc1147dc5, $r28=0xfb6cda8c7f12313a
+after:  $r12=0xdf365b31fe488c5c, $r28=0xfb6cda8c7f12313a
+bitrev.8b $r23, $r6 ::
+before: $r23=0xeff84dc134b3acbe, $r6=0xee7c4e89e333eda8
+after:  $r23=0x773e7291c7ccb715, $r6=0xee7c4e89e333eda8
+bitrev.8b $r24, $r20 ::
+before: $r24=0xad65748f0bc46e9f, $r20=0xd0d88137a6284eac
+after:  $r24=0x0b1b81ec65147235, $r20=0xd0d88137a6284eac
+bitrev.8b $r10, $r5 ::
+before: $r10=0xe0e1c1e262352e89, $r5=0x9c43ebc4f7c65dc1
+after:  $r10=0x39c2d723ef63ba83, $r5=0x9c43ebc4f7c65dc1
+bitrev.8b $r27, $r13 ::
+before: $r27=0x444a53aa65d317dc, $r13=0x473eea7ea5691da7
+after:  $r27=0xe27c577ea596b8e5, $r13=0x473eea7ea5691da7
+bitrev.8b $r13, $r9 ::
+before: $r13=0xfc48d0fdf4c7a6e5, $r9=0x5dcad407df3401a5
+after:  $r13=0xba532be0fb2c80a5, $r9=0x5dcad407df3401a5
+bitrev.8b $r12, $r5 ::
+before: $r12=0x0ebef32fcbd91e9a, $r5=0xe1eeea527816355e
+after:  $r12=0x8777574a1e68ac7a, $r5=0xe1eeea527816355e
+bitrev.w $r18, $r15 ::
+before: $r18=0x02028b0c8691a767, $r15=0x5822df2950c9c2d3
+after:  $r18=0xffffffffcb43930a, $r15=0x5822df2950c9c2d3
+bitrev.w $r30, $r27 ::
+before: $r30=0x2a2d48209d9f377b, $r27=0xde9d59b836df41fc
+after:  $r30=0x000000003f82fb6c, $r27=0xde9d59b836df41fc
+bitrev.w $r17, $r4 ::
+before: $r17=0xe6fb8b07c90464e6, $r4=0x65976cb5c6c6a5b0
+after:  $r17=0x000000000da56363, $r4=0x65976cb5c6c6a5b0
+bitrev.w $r9, $r31 ::
+before: $r9=0x1b95159ec5c37644, $r31=0x62c549b741c2adad
+after:  $r9=0xffffffffb5b54382, $r31=0x62c549b741c2adad
+bitrev.w $r17, $r14 ::
+before: $r17=0x8b414dfa7156f0ce, $r14=0x9642d0186f420e7c
+after:  $r17=0x000000003e7042f6, $r14=0x9642d0186f420e7c
+bitrev.w $r15, $r8 ::
+before: $r15=0x2722ecb374b4d5e3, $r8=0xeaf151a286bbc4cf
+after:  $r15=0xfffffffff323dd61, $r8=0xeaf151a286bbc4cf
+bitrev.w $r27, $r19 ::
+before: $r27=0x058ec913c63634a5, $r19=0xe723c39df96a4fd2
+after:  $r27=0x000000004bf2569f, $r19=0xe723c39df96a4fd2
+bitrev.w $r7, $r26 ::
+before: $r7=0xa245e7dd80a324a2, $r26=0x0e7d6c2b2683291e
+after:  $r7=0x000000007894c164, $r26=0x0e7d6c2b2683291e
+bitrev.w $r31, $r6 ::
+before: $r31=0x114292ed02ba1255, $r6=0x13cd62afac5ac3d4
+after:  $r31=0x000000002bc35a35, $r6=0x13cd62afac5ac3d4
+bitrev.w $r7, $r25 ::
+before: $r7=0xbd46d88fc8d2933b, $r25=0x69ce9ccb487dadd1
+after:  $r7=0xffffffff8bb5be12, $r25=0x69ce9ccb487dadd1
+bitrev.d $r4, $r29 ::
+before: $r4=0xeaacaeb60b227eab, $r29=0x799f36da44887e2c
+after:  $r4=0x347e11225b6cf99e, $r29=0x799f36da44887e2c
+bitrev.d $r29, $r6 ::
+before: $r29=0xcfbb055ab1ebf7fa, $r6=0x2924f63fec744b02
+after:  $r29=0x40d22e37fc6f2494, $r6=0x2924f63fec744b02
+bitrev.d $r28, $r31 ::
+before: $r28=0xaac74a398d76900d, $r31=0xf6c75e45e33b4cb7
+after:  $r28=0xed32dcc7a27ae36f, $r31=0xf6c75e45e33b4cb7
+bitrev.d $r24, $r12 ::
+before: $r24=0xfc8bc33fb4a8d023, $r12=0xcccd98e9d53aa26a
+after:  $r24=0x56455cab9719b333, $r12=0xcccd98e9d53aa26a
+bitrev.d $r8, $r7 ::
+before: $r8=0x7502cd68289f4c3a, $r7=0x746ddfd3c3a512b1
+after:  $r8=0x8d48a5c3cbfbb62e, $r7=0x746ddfd3c3a512b1
+bitrev.d $r6, $r16 ::
+before: $r6=0xe8b94bfe615774ae, $r16=0x518770bbee53d619
+after:  $r6=0x986bca77dd0ee18a, $r16=0x518770bbee53d619
+bitrev.d $r24, $r4 ::
+before: $r24=0x6318c17dbae816c3, $r4=0x9ab684e129b57f07
+after:  $r24=0xe0fead9487216d59, $r4=0x9ab684e129b57f07
+bitrev.d $r27, $r23 ::
+before: $r27=0x8a22909b005a86b8, $r23=0x69337e8c3b1fc2bb
+after:  $r27=0xdd43f8dc317ecc96, $r23=0x69337e8c3b1fc2bb
+bitrev.d $r20, $r9 ::
+before: $r20=0x009f43885d40caf0, $r9=0x193cbf609dbc33d4
+after:  $r20=0x2bcc3db906fd3c98, $r9=0x193cbf609dbc33d4
+bitrev.d $r30, $r19 ::
+before: $r30=0x30fa02e0fc390ac9, $r19=0x21686c931c6260da
+after:  $r30=0x5b064638c9361684, $r19=0x21686c931c6260da
+bytepick.w $r26, $r15, $r19, 1 ::
+before: $r26=0x1b0b980dd3271273, $r15=0x8737ca6c8106ceee, $r19=0x02807e0dcb47d6ef
+after:  $r26=0x0000000047d6ef81, $r15=0x8737ca6c8106ceee, $r19=0x02807e0dcb47d6ef
+bytepick.w $r15, $r17, $r7, 0 ::
+before: $r15=0x3d2e3fbcbd032001, $r17=0x5eced8cf3da8b205, $r7=0xb8155b41321e09c0
+after:  $r15=0x00000000321e09c0, $r17=0x5eced8cf3da8b205, $r7=0xb8155b41321e09c0
+bytepick.w $r12, $r15, $r17, 3 ::
+before: $r12=0x2670c80f12a87520, $r15=0x29ab42125e3ea5c8, $r17=0x32a39ac435460f2f
+after:  $r12=0x000000002f5e3ea5, $r15=0x29ab42125e3ea5c8, $r17=0x32a39ac435460f2f
+bytepick.w $r4, $r20, $r18, 3 ::
+before: $r4=0x5a64271926277c04, $r20=0xcbde225cc736e5d5, $r18=0x18abacc874db47e9
+after:  $r4=0xffffffffe9c736e5, $r20=0xcbde225cc736e5d5, $r18=0x18abacc874db47e9
+bytepick.w $r8, $r5, $r24, 3 ::
+before: $r8=0xdb41606ce3f9df94, $r5=0xc3f6ce370d754a3f, $r24=0x34ad5a423a5c42e3
+after:  $r8=0xffffffffe30d754a, $r5=0xc3f6ce370d754a3f, $r24=0x34ad5a423a5c42e3
+bytepick.w $r5, $r30, $r14, 2 ::
+before: $r5=0xedb3aad221050d0b, $r30=0x46f5823389f2581a, $r14=0xf766f1e75349809e
+after:  $r5=0xffffffff809e89f2, $r30=0x46f5823389f2581a, $r14=0xf766f1e75349809e
+bytepick.w $r4, $r19, $r18, 0 ::
+before: $r4=0xf92ed0231f25c991, $r19=0xba59df0352ed6b3e, $r18=0x58d6fbce4e4325e8
+after:  $r4=0x000000004e4325e8, $r19=0xba59df0352ed6b3e, $r18=0x58d6fbce4e4325e8
+bytepick.w $r18, $r28, $r24, 3 ::
+before: $r18=0x177dcaf8fcd30180, $r28=0xbdc04b3b8f707462, $r24=0x6102168606deb3ed
+after:  $r18=0xffffffffed8f7074, $r28=0xbdc04b3b8f707462, $r24=0x6102168606deb3ed
+bytepick.w $r13, $r27, $r29, 2 ::
+before: $r13=0x383d82c5d717259b, $r27=0x495e30e5e680d7fc, $r29=0x1c17f315ebb3bec3
+after:  $r13=0xffffffffbec3e680, $r27=0x495e30e5e680d7fc, $r29=0x1c17f315ebb3bec3
+bytepick.w $r5, $r29, $r4, 1 ::
+before: $r5=0x26a0fb212ab80a3a, $r29=0x78b167aecd81f869, $r4=0x6daab499f228fef4
+after:  $r5=0x0000000028fef4cd, $r29=0x78b167aecd81f869, $r4=0x6daab499f228fef4
+bytepick.d $r28, $r4, $r28, 7 ::
+before: $r28=0x794fa22d52f7e834, $r4=0x2f084db071d3bcce, $r28=0xa0cf51d7020f10c1
+after:  $r28=0xc12f084db071d3bc, $r4=0x2f084db071d3bcce, $r28=0xc12f084db071d3bc
+bytepick.d $r10, $r18, $r4, 2 ::
+before: $r10=0x9fd7a6b378604833, $r18=0x37da15f8a7154cab, $r4=0xaedd64328d27a0a8
+after:  $r10=0x64328d27a0a837da, $r18=0x37da15f8a7154cab, $r4=0xaedd64328d27a0a8
+bytepick.d $r7, $r6, $r24, 3 ::
+before: $r7=0xdee49920d429d3c2, $r6=0x15e3f61f2f82a2d1, $r24=0xdeba03c7761e4678
+after:  $r7=0xc7761e467815e3f6, $r6=0x15e3f61f2f82a2d1, $r24=0xdeba03c7761e4678
+bytepick.d $r19, $r16, $r5, 4 ::
+before: $r19=0x53bda4d18e61fc44, $r16=0xc79bd94439006673, $r5=0xa8024ab452a2bd52
+after:  $r19=0x52a2bd52c79bd944, $r16=0xc79bd94439006673, $r5=0xa8024ab452a2bd52
+bytepick.d $r26, $r19, $r25, 7 ::
+before: $r26=0xc8aae5136d925592, $r19=0xea109dd2837d3acf, $r25=0x30e93a75e695666a
+after:  $r26=0x6aea109dd2837d3a, $r19=0xea109dd2837d3acf, $r25=0x30e93a75e695666a
+bytepick.d $r8, $r14, $r8, 2 ::
+before: $r8=0xa03db273c845b37f, $r14=0xa7fd0053a136769f, $r8=0x6ab932903229b035
+after:  $r8=0x32903229b035a7fd, $r14=0xa7fd0053a136769f, $r8=0x32903229b035a7fd
+bytepick.d $r9, $r14, $r23, 2 ::
+before: $r9=0x2f160a0d147b300f, $r14=0xdae9d5d15bb8f5b5, $r23=0xc4fdfbb29d49dfe4
+after:  $r9=0xfbb29d49dfe4dae9, $r14=0xdae9d5d15bb8f5b5, $r23=0xc4fdfbb29d49dfe4
+bytepick.d $r20, $r18, $r15, 5 ::
+before: $r20=0x30cefdebc30b841a, $r18=0xbfd016fb0312277c, $r15=0x44269b95d496912f
+after:  $r20=0x96912fbfd016fb03, $r18=0xbfd016fb0312277c, $r15=0x44269b95d496912f
+bytepick.d $r12, $r17, $r5, 2 ::
+before: $r12=0xde32bc5d3471eed2, $r17=0xdb807610c6e762e4, $r5=0xb2148e34e649d1b8
+after:  $r12=0x8e34e649d1b8db80, $r17=0xdb807610c6e762e4, $r5=0xb2148e34e649d1b8
+bytepick.d $r5, $r24, $r28, 3 ::
+before: $r5=0x9ab1be6a0faa61a8, $r24=0x97d4a12579967739, $r28=0xaa592ef1fd606bad
+after:  $r5=0xf1fd606bad97d4a1, $r24=0x97d4a12579967739, $r28=0xaa592ef1fd606bad
+maskeqz $r14, $r28, $r25 ::
+before: $r14=0xc263b6b8f3404c8d, $r28=0x90ef733c88c88866, $r25=0xd256888d94e8d21a
+after:  $r14=0x90ef733c88c88866, $r28=0x90ef733c88c88866, $r25=0xd256888d94e8d21a
+maskeqz $r13, $r9, $r15 ::
+before: $r13=0x5bdd86b962c61db4, $r9=0x8a78f7b88a728d92, $r15=0x69e707acb2c26a83
+after:  $r13=0x8a78f7b88a728d92, $r9=0x8a78f7b88a728d92, $r15=0x69e707acb2c26a83
+maskeqz $r7, $r7, $r13 ::
+before: $r7=0xea86abdbdea660cb, $r7=0xfb778deef0a5b893, $r13=0xad10e23c971d1a9f
+after:  $r7=0xfb778deef0a5b893, $r7=0xfb778deef0a5b893, $r13=0xad10e23c971d1a9f
+maskeqz $r8, $r7, $r19 ::
+before: $r8=0xf64df33b6146939f, $r7=0xe7376d3da44f4dfd, $r19=0x7987e122af2505ab
+after:  $r8=0xe7376d3da44f4dfd, $r7=0xe7376d3da44f4dfd, $r19=0x7987e122af2505ab
+maskeqz $r10, $r27, $r29 ::
+before: $r10=0x404a261c069b488b, $r27=0x81886c523ec2658c, $r29=0x3236dc83d0a27cc1
+after:  $r10=0x81886c523ec2658c, $r27=0x81886c523ec2658c, $r29=0x3236dc83d0a27cc1
+maskeqz $r23, $r16, $r25 ::
+before: $r23=0x8671050519b7bda0, $r16=0x26fa2567b106d73a, $r25=0x0d884011e0d767fe
+after:  $r23=0x26fa2567b106d73a, $r16=0x26fa2567b106d73a, $r25=0x0d884011e0d767fe
+maskeqz $r5, $r19, $r18 ::
+before: $r5=0xbd8d4cef53122132, $r19=0x4976c047c57ec148, $r18=0x602312f372049a5e
+after:  $r5=0x4976c047c57ec148, $r19=0x4976c047c57ec148, $r18=0x602312f372049a5e
+maskeqz $r29, $r24, $r23 ::
+before: $r29=0x07f390b695d8b12e, $r24=0x70043e7666a24a34, $r23=0xfee8f8f90ab3ac9b
+after:  $r29=0x70043e7666a24a34, $r24=0x70043e7666a24a34, $r23=0xfee8f8f90ab3ac9b
+maskeqz $r25, $r4, $r18 ::
+before: $r25=0x07eaffcb6dac1b5b, $r4=0x4b12f8c6738216a2, $r18=0x409acb80b7391511
+after:  $r25=0x4b12f8c6738216a2, $r4=0x4b12f8c6738216a2, $r18=0x409acb80b7391511
+maskeqz $r30, $r6, $r24 ::
+before: $r30=0x14d829636b628dc9, $r6=0xdb88a366a2271c2c, $r24=0x0ea0d5998835940a
+after:  $r30=0xdb88a366a2271c2c, $r6=0xdb88a366a2271c2c, $r24=0x0ea0d5998835940a
+masknez $r14, $r24, $r5 ::
+before: $r14=0x46b15bbb9507bd79, $r24=0xc92af628c880a454, $r5=0x846a586db0af0965
+after:  $r14=000000000000000000, $r24=0xc92af628c880a454, $r5=0x846a586db0af0965
+masknez $r30, $r8, $r8 ::
+before: $r30=0x43cd20b5234db4e8, $r8=0x7aeee6ab6b10561f, $r8=0x45ab4fdb4ca8b325
+after:  $r30=000000000000000000, $r8=0x45ab4fdb4ca8b325, $r8=0x45ab4fdb4ca8b325
+masknez $r24, $r19, $r15 ::
+before: $r24=0xd3d50bbb34b528e2, $r19=0xdd71746b0beedae3, $r15=0xa34d82fc50174094
+after:  $r24=000000000000000000, $r19=0xdd71746b0beedae3, $r15=0xa34d82fc50174094
+masknez $r29, $r26, $r26 ::
+before: $r29=0x576cb2da15b1462d, $r26=0x6c669f0195b50b7a, $r26=0xec1609ef36aa938f
+after:  $r29=000000000000000000, $r26=0xec1609ef36aa938f, $r26=0xec1609ef36aa938f
+masknez $r4, $r29, $r10 ::
+before: $r4=0xaa220f67a02617db, $r29=0x0ffcd18e3016e10f, $r10=0x4cf9bdd8dca7f88f
+after:  $r4=000000000000000000, $r29=0x0ffcd18e3016e10f, $r10=0x4cf9bdd8dca7f88f
+masknez $r23, $r9, $r29 ::
+before: $r23=0x774e1c840428fbde, $r9=0x391268694388d2a7, $r29=0xf06192a4e5780c53
+after:  $r23=000000000000000000, $r9=0x391268694388d2a7, $r29=0xf06192a4e5780c53
+masknez $r7, $r25, $r28 ::
+before: $r7=0x7b75099f16135faa, $r25=0xf95af681c18bf31c, $r28=0x2f6122581dfdef74
+after:  $r7=000000000000000000, $r25=0xf95af681c18bf31c, $r28=0x2f6122581dfdef74
+masknez $r26, $r10, $r16 ::
+before: $r26=0xe6006c9bd6bae204, $r10=0x7e84e5db1181249d, $r16=0x6ab2371059cdc875
+after:  $r26=000000000000000000, $r10=0x7e84e5db1181249d, $r16=0x6ab2371059cdc875
+masknez $r26, $r15, $r28 ::
+before: $r26=0xb4c9c784ef74245f, $r15=0x20cc1c4c169ca02c, $r28=0x606eeb8ce6278d16
+after:  $r26=000000000000000000, $r15=0x20cc1c4c169ca02c, $r28=0x606eeb8ce6278d16
+masknez $r19, $r16, $r16 ::
+before: $r19=0x75a721553f7c7054, $r16=0x7b63b7b7b3f5bd5f, $r16=0xf8c7933e92e155ee
+after:  $r19=000000000000000000, $r16=0xf8c7933e92e155ee, $r16=0xf8c7933e92e155ee
+bstrins.w $r27, $r16, 31, 8 ::
+before: $r27=0x431055863e78b187, $r16=0xe18dda9620a50e9d
+after:  $r27=0xffffffffa50e9d87, $r16=0xe18dda9620a50e9d
+bstrins.w $r26, $r27, 30, 27 ::
+before: $r26=0x19f800eab7e1ab51, $r27=0x61e7d86005d21d29
+after:  $r26=0xffffffffcfe1ab51, $r27=0x61e7d86005d21d29
+bstrins.w $r15, $r4, 17, 14 ::
+before: $r15=0xb141d462e777528d, $r4=0xb7aebff9bcca1643
+after:  $r15=0xffffffffe774d28d, $r4=0xb7aebff9bcca1643
+bstrins.w $r30, $r17, 24, 6 ::
+before: $r30=0xfac48083375844fe, $r17=0x6d3283ba14cc27eb
+after:  $r30=0x000000003709fafe, $r17=0x6d3283ba14cc27eb
+bstrins.w $r12, $r12, 30, 25 ::
+before: $r12=0x9b7629774f19f64a, $r12=0x84ee8d65b2842686
+after:  $r12=0xffffffff8c842686, $r12=0xffffffff8c842686
+bstrins.w $r15, $r10, 26, 1 ::
+before: $r15=0x290172844863090f, $r10=0x85ea298976069fcd
+after:  $r15=0x000000004c0d3f9b, $r10=0x85ea298976069fcd
+bstrins.w $r10, $r13, 23, 8 ::
+before: $r10=0x66942ba1c15e85aa, $r13=0xddb2dfa7474a4370
+after:  $r10=0xffffffffc14370aa, $r13=0xddb2dfa7474a4370
+bstrins.w $r5, $r20, 18, 16 ::
+before: $r5=0x3dcfecca80bf0d79, $r20=0x5044b246f2d3f890
+after:  $r5=0xffffffff80b80d79, $r20=0x5044b246f2d3f890
+bstrins.w $r23, $r5, 25, 21 ::
+before: $r23=0xa11723142f1472a7, $r5=0xcbaaa9a23d119663
+after:  $r23=0x000000002c7472a7, $r5=0xcbaaa9a23d119663
+bstrins.w $r20, $r31, 13, 12 ::
+before: $r20=0x6a1110240ba884b8, $r31=0x45cadf0ffe08cc25
+after:  $r20=0x000000000ba894b8, $r31=0x45cadf0ffe08cc25
+bstrpick.w $r5, $r23, 23, 11 ::
+before: $r5=0x6885eaa89f691954, $r23=0x94f8458597294f2e
+after:  $r5=0x0000000000000529, $r23=0x94f8458597294f2e
+bstrpick.w $r25, $r8, 18, 11 ::
+before: $r25=0x11be9b9923ebee96, $r8=0x23deda120a49df15
+after:  $r25=0x000000000000003b, $r8=0x23deda120a49df15
+bstrpick.w $r6, $r6, 10, 3 ::
+before: $r6=0x3546d655181289bc, $r6=0x7ee84a41c952b690
+after:  $r6=0x00000000000000d2, $r6=0x00000000000000d2
+bstrpick.w $r25, $r5, 15, 9 ::
+before: $r25=0xb2eec884ea77f548, $r5=0x23992bc40919416f
+after:  $r25=0x0000000000000020, $r5=0x23992bc40919416f
+bstrpick.w $r26, $r14, 21, 8 ::
+before: $r26=0x8e591161730ac582, $r14=0xf45f4435cc1cb138
+after:  $r26=0x0000000000001cb1, $r14=0xf45f4435cc1cb138
+bstrpick.w $r9, $r14, 7, 3 ::
+before: $r9=0x1ac92d930e8361f9, $r14=0xcc11dd56e96c6256
+after:  $r9=0x000000000000000a, $r14=0xcc11dd56e96c6256
+bstrpick.w $r19, $r9, 8, 8 ::
+before: $r19=0xd15fd80fafe60a58, $r9=0xb1426a8c680d628c
+after:  $r19=000000000000000000, $r9=0xb1426a8c680d628c
+bstrpick.w $r17, $r13, 30, 12 ::
+before: $r17=0xfa48c3cd091d2b5e, $r13=0x3a2827a58a014a72
+after:  $r17=0x000000000000a014, $r13=0x3a2827a58a014a72
+bstrpick.w $r6, $r31, 16, 7 ::
+before: $r6=0xca10a858ebfa78a1, $r31=0x202a38722f270884
+after:  $r6=0x0000000000000211, $r31=0x202a38722f270884
+bstrpick.w $r20, $r10, 31, 15 ::
+before: $r20=0xc010deb269ae6ba2, $r10=0x98f1d297734f9f4c
+after:  $r20=0x000000000000e69f, $r10=0x98f1d297734f9f4c
+bstrins.d $r29, $r17, 60, 25 ::
+before: $r29=0x7cf4a9ec79307e59, $r17=0xb1b5afc00eef90a3
+after:  $r29=0x601ddf2147307e59, $r17=0xb1b5afc00eef90a3
+bstrins.d $r10, $r27, 31, 22 ::
+before: $r10=0xc708602dee32579f, $r27=0x199d90a711e94375
+after:  $r10=0xc708602ddd72579f, $r27=0x199d90a711e94375
+bstrins.d $r4, $r24, 58, 58 ::
+before: $r4=0x4e5ce98e217a4b59, $r24=0xaf25b5661daefdea
+after:  $r4=0x4a5ce98e217a4b59, $r24=0xaf25b5661daefdea
+bstrins.d $r12, $r30, 16, 6 ::
+before: $r12=0x9505d862c56b1708, $r30=0x7f3f0c983ce27863
+after:  $r12=0x9505d862c56a18c8, $r30=0x7f3f0c983ce27863
+bstrins.d $r29, $r5, 43, 0 ::
+before: $r29=0x248f295ef3afe5aa, $r5=0x9469277db61227b7
+after:  $r29=0x248f277db61227b7, $r5=0x9469277db61227b7
+bstrins.d $r31, $r31, 49, 23 ::
+before: $r31=0xbc5f0c47c3a63a94, $r31=0x4aacc1c77ad0c09a
+after:  $r31=0x4aad68604d50c09a, $r31=0x4aad68604d50c09a
+bstrins.d $r6, $r24, 12, 2 ::
+before: $r6=0x79110235b8c34188, $r24=0x75e3e311aef2bef9
+after:  $r6=0x79110235b8c35be4, $r24=0x75e3e311aef2bef9
+bstrins.d $r6, $r16, 43, 13 ::
+before: $r6=0xaa6e63ffd80b76c5, $r16=0xb1ea7dcb3af0881d
+after:  $r6=0xaa6e675e1103b6c5, $r16=0xb1ea7dcb3af0881d
+bstrins.d $r15, $r25, 53, 29 ::
+before: $r15=0x5b68a802f26a1804, $r25=0xb4f651115b84591b
+after:  $r15=0x5b708b23726a1804, $r25=0xb4f651115b84591b
+bstrins.d $r9, $r9, 61, 40 ::
+before: $r9=0x3394218c965d5f1a, $r9=0xf3d30b5d4d4089b4
+after:  $r9=0xc089b45d4d4089b4, $r9=0xc089b45d4d4089b4
+bstrpick.d $r27, $r27, 63, 33 ::
+before: $r27=0x503c8fae2d6d7b58, $r27=0x9fd9869ca812de0c
+after:  $r27=0x000000004fecc34e, $r27=0x000000004fecc34e
+bstrpick.d $r14, $r5, 52, 40 ::
+before: $r14=0x65f05eaa5e13856a, $r5=0xd52c72fbeccc39f5
+after:  $r14=0x0000000000000c72, $r5=0xd52c72fbeccc39f5
+bstrpick.d $r13, $r20, 48, 14 ::
+before: $r13=0x9cea777df4d2eae0, $r20=0x6326727a36499800
+after:  $r13=0x00000001c9e8d926, $r20=0x6326727a36499800
+bstrpick.d $r10, $r17, 43, 20 ::
+before: $r10=0xf30a073a4a56604b, $r17=0x0c12d112f6a0c8f1
+after:  $r10=0x0000000000112f6a, $r17=0x0c12d112f6a0c8f1
+bstrpick.d $r13, $r25, 55, 37 ::
+before: $r13=0xe559d975e0d9ac85, $r25=0xcf41f30cc4a46713
+after:  $r13=0x0000000000020f98, $r25=0xcf41f30cc4a46713
+bstrpick.d $r29, $r4, 34, 20 ::
+before: $r29=0x41843db6c2a206cb, $r4=0x343f795d45fcff8c
+after:  $r29=0x000000000000545f, $r4=0x343f795d45fcff8c
+bstrpick.d $r27, $r28, 27, 10 ::
+before: $r27=0xb359821297377fee, $r28=0x4fc51c5773e64f69
+after:  $r27=0x000000000000f993, $r28=0x4fc51c5773e64f69
+bstrpick.d $r24, $r24, 63, 20 ::
+before: $r24=0xed3cb5d1e8f0e55e, $r24=0x9cdbb70a8b8d3945
+after:  $r24=0x000009cdbb70a8b8, $r24=0x000009cdbb70a8b8
+bstrpick.d $r7, $r30, 34, 30 ::
+before: $r7=0x11b7344343be1ccf, $r30=0xa3422c671803480f
+after:  $r7=0x000000000000001c, $r30=0xa3422c671803480f
+bstrpick.d $r15, $r4, 55, 4 ::
+before: $r15=0x3670c6b869f28085, $r4=0x2caa9d9c1351e402
+after:  $r15=0x000aa9d9c1351e40, $r4=0x2caa9d9c1351e402
+crc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+after:  $r12=0xfffffffff8cd11f5, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+crc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+after:  $r12=0xfffffffff896edce, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+crc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+after:  $r12=0xffffffffef4aad58, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+crc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+after:  $r12=0xffffffffa0b9747b, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+crc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+after:  $r12=0xffffffff96afcb8f, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+crc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+after:  $r12=0x000000005b57dc92, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+crc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+after:  $r12=0xffffffff8fa18d00, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+crc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+after:  $r12=0xffffffff862b1fc5, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+crc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+after:  $r12=0xffffffff9a47255b, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+crc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+after:  $r12=0xffffffffa7886ccc, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+crc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+after:  $r12=0xffffffffb6c69449, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+crc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+after:  $r12=0xffffffffb04637e9, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+crc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+after:  $r12=0xfffffffffb8f1bb9, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+crc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+after:  $r12=0xffffffffc7580939, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+crc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+after:  $r12=0xffffffffb24959b6, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+crc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+after:  $r12=0x00000000532cb693, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+crc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+after:  $r12=0xffffffffffe2757b, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+crc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+after:  $r12=0xffffffffc3c8592d, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+crc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+after:  $r12=0xffffffffe44ccdd5, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+crc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+after:  $r12=0x0000000004826ea7, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+crc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+after:  $r12=0x00000000784b67ea, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+crc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+after:  $r12=0xffffffffbaef431f, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+crc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+after:  $r12=0xffffffffe7361109, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+crc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+after:  $r12=0xfffffffff9af6423, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+crc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+after:  $r12=0x000000006d4f1805, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+crc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+after:  $r12=0xffffffffb22e077e, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+crc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+after:  $r12=0xffffffff8cb8356f, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+crc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+after:  $r12=0xffffffffbe1261f9, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+crcc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+after:  $r12=0x000000006c5412e4, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+crcc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+after:  $r12=0x000000006c0feedf, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+crcc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+after:  $r12=0x0000000052b4533a, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+crcc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+after:  $r12=0xffffffffe3833e19, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+crcc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+after:  $r12=0x000000002a3f5685, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+crcc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+after:  $r12=0xffffffffec8f3c62, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+crcc.w.b.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+after:  $r12=0xffffffff9e543d84, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+crcc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+after:  $r12=0x00000000318af1d5, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+crcc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+after:  $r12=0xffffffff92c4f3f9, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+crcc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+after:  $r12=0xffffffffa40568c3, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+crcc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+after:  $r12=0xffffffffeeee153e, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+crcc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+after:  $r12=0x0000000071b26b5b, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+crcc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+after:  $r12=0xfffffffffcb406be, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+crcc.w.h.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+after:  $r12=0xffffffffade3076c, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+crcc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+after:  $r12=0x000000004f6e8750, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+crcc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+after:  $r12=0x000000004548949c, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+crcc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+after:  $r12=0x0000000050fc77a7, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+crcc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+after:  $r12=0x000000000b0f3746, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+crcc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+after:  $r12=0xffffffff92a3acf2, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+crcc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+after:  $r12=0xffffffffd91fb7ba, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+crcc.w.w.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+after:  $r12=0x000000006b548718, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+crcc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+after:  $r12=0xffffffff8547ffea, $r13=0x4b154113f7d32514, $r14=0xcce230caafbf9cc9
+crcc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+after:  $r12=0x000000001a265977, $r13=0x33d5d595721d4f13, $r14=0xf4509311f443a7ce
+crcc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+after:  $r12=0x000000000e1737b7, $r13=0x4a3c6de6954cbc17, $r14=0x111b21e39fbd7254
+crcc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+after:  $r12=0x000000007c13f4c5, $r13=0xfbb5c64ed1b044c6, $r14=0x33ca4c4fb3960326
+crcc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+after:  $r12=0xffffffff9d9455e3, $r13=0x2b7c5939d7c0f528, $r14=0xb73870a5a6630162
+crcc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+after:  $r12=0x000000006df1745f, $r13=0x02fe41918ac5cdba, $r14=0x48e0815289728f05
+crcc.w.d.w $r12, $r13, $r14 ::
+before: $r12=0x0123456789abcdef, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
+after:  $r12=0xffffffffb7862239, $r13=0xb60a8f381f187bae, $r14=0x008c208cc413ff72
diff --git a/none/tests/loongarch64/integer.vgtest b/none/tests/loongarch64/integer.vgtest
new file mode 100644
index 0000000..daa0591
--- /dev/null
+++ b/none/tests/loongarch64/integer.vgtest
@@ -0,0 +1,2 @@
+prog: integer
+vgopts: -q
diff --git a/none/tests/loongarch64/llsc.c b/none/tests/loongarch64/llsc.c
new file mode 100644
index 0000000..fcb7e3c
--- /dev/null
+++ b/none/tests/loongarch64/llsc.c
@@ -0,0 +1,69 @@
+#include <stdio.h>
+
+#define TESTINST_LLSC_W(insn, res, addr, offs) \
+   {                                           \
+      __asm__ __volatile__(                    \
+         "move $t1, %1             \n\t"       \
+         "ll.w $t0, $t1, %2        \n\t"       \
+         insn "                    \n\t"       \
+         "sc.w $t0, $t1, %2        \n\t"       \
+         "move %0, $t0             \n\t"       \
+         : "=r" (res)                          \
+         : "r" (addr), "i" (offs)              \
+         : "$t0", "$t1", "memory");            \
+   }
+
+#define TESTINST_LLSC_D(insn, res, addr, offs) \
+   {                                           \
+      __asm__ __volatile__(                    \
+         "move $t1, %1             \n\t"       \
+         "ll.d $t0, $t1, %2        \n\t"       \
+         insn "                    \n\t"       \
+         "sc.d $t0, $t1, %2        \n\t"       \
+         "move %0, $t0             \n\t"       \
+         : "=r" (res)                          \
+         : "r" (addr), "i" (offs)              \
+         : "$t0", "$t1", "memory");            \
+   }
+
+void test(void)
+{
+   int res_i;
+   long res_l;
+   int val_i[2] = { 6, 10 };
+   long val_l[2] = { 6, 10 };
+
+   /* ---------------- ll.w rd, rj, si14 ---------------- */
+   /* ---------------- sc.w rd, rj, si14 ---------------- */
+   printf("ll.w sc.w ::\n");
+
+   do {
+      TESTINST_LLSC_W("addi.w $t0, $t0, 1", res_i, val_i, 0);
+   } while (res_i != 1);
+   printf("res: %d val: %d\n", res_i, val_i[0]);
+
+   do {
+      TESTINST_LLSC_W("sub.w $t0, $zero, $t0", res_i, val_i, 4);
+   } while (res_i != 1);
+   printf("res: %d val: %d\n", res_i, val_i[1]);
+
+   /* ---------------- ll.d rd, rj, si14 ---------------- */
+   /* ---------------- sc.d rd, rj, si14 ---------------- */
+   printf("ll.d sc.d ::\n");
+
+   do {
+      TESTINST_LLSC_D("addi.d $t0, $t0, 1", res_l, val_l, 0);
+   } while (res_l != 1);
+   printf("res: %ld val: %ld\n", res_l, val_l[0]);
+
+   do {
+      TESTINST_LLSC_D("sub.d $t0, $zero, $t0", res_l, val_l, 8);
+   } while (res_l != 1);
+   printf("res: %ld val: %ld\n", res_l, val_l[1]);
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/llsc.stderr.exp b/none/tests/loongarch64/llsc.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/llsc.stdout.exp b/none/tests/loongarch64/llsc.stdout.exp
new file mode 100644
index 0000000..dd19251
--- /dev/null
+++ b/none/tests/loongarch64/llsc.stdout.exp
@@ -0,0 +1,6 @@
+ll.w sc.w ::
+res: 1 val: 7
+res: 1 val: -10
+ll.d sc.d ::
+res: 1 val: 7
+res: 1 val: -10
diff --git a/none/tests/loongarch64/llsc.vgtest b/none/tests/loongarch64/llsc.vgtest
new file mode 100644
index 0000000..685c279
--- /dev/null
+++ b/none/tests/loongarch64/llsc.vgtest
@@ -0,0 +1,2 @@
+prog: llsc
+vgopts: -q
diff --git a/none/tests/loongarch64/memory.c b/none/tests/loongarch64/memory.c
new file mode 100644
index 0000000..385efc0
--- /dev/null
+++ b/none/tests/loongarch64/memory.c
@@ -0,0 +1,345 @@
+#include <stdio.h>
+
+#define NUM 24
+
+unsigned long mem[NUM] = {
+   0x121f1e1f0000e680, 0x0000000000010700, 0x000000030000e7dc,
+   0xffffffff0000b0d0, 0x232f2e2f2ab05fd0, 0x242c2b2b0000b6a0,
+   0x252a2e2b0000be80, 0x262d2d2a0000de10, 0x3f343f3e0000df20,
+   0x3e353d3c2ab05fe0, 0x363a3c3b0000dfd0, 0x3b373b3a00010300,
+   0x0000e680121f1e1f, 0x0001070000000000, 0x0000e7dc00000003,
+   0x0000b0d0ffffffff, 0x2ab05fd0232f2e2f, 0x0000b6a0242c2b2b,
+   0x0000be80252a2e2b, 0x0000de10262d2d2a, 0x0000df203f343f3e,
+   0x2ab05fe03e353d3c, 0x0000dfd0363a3c3b, 0x000103003b373b3a
+};
+
+#define TESTINST_LOAD_RRI(insn, val, addr, offs) \
+   {                                             \
+      __asm__ __volatile__(                      \
+         insn " %0, %1, " #offs " \n\t"          \
+         : "=r" (val)                            \
+         : "r" (addr)                            \
+         : "memory");                            \
+   }
+
+#define TESTINST_LOAD_RRR(insn, val, addr, offs) \
+   {                                             \
+      __asm__ __volatile__(                      \
+         insn " %0, %1, %2 \n\t"                 \
+         : "=r" (val)                            \
+         : "r" (addr), "r" (offs)                \
+         : "memory");                            \
+   }
+
+#define TESTINST_LOAD_FRI(insn, val, addr, offs) \
+   {                                             \
+      __asm__ __volatile__(                      \
+         insn " %0, %1, " #offs " \n\t"          \
+         : "=f" (val)                            \
+         : "r" (addr)                            \
+         : "memory");                            \
+   }
+
+#define TESTINST_LOAD_FRR(insn, val, addr, offs) \
+   {                                             \
+      __asm__ __volatile__(                      \
+         insn " %0, %1, %2 \n\t"                 \
+         : "=f" (val)                            \
+         : "r" (addr), "r" (offs)                \
+         : "memory");                            \
+   }
+
+#define TESTINST_STORE_RRI(insn, val, addr, offs) \
+   {                                              \
+      __asm__ __volatile__(                       \
+         insn " %0, %1, " #offs " \n\t"           \
+         :                                        \
+         : "r" (val), "r" (addr)                  \
+         : "memory");                             \
+   }
+
+#define TESTINST_STORE_RRR(insn, val, addr, offs) \
+   {                                              \
+      __asm__ __volatile__(                       \
+         insn " %0, %1, %2 \n\t"                  \
+         :                                        \
+         : "r" (val), "r" (addr), "r" (offs)      \
+         : "memory");                             \
+   }
+
+#define TESTINST_STORE_FRI(insn, val, addr, offs) \
+   {                                              \
+      __asm__ __volatile__(                       \
+         insn " %0, %1, " #offs " \n\t"           \
+         :                                        \
+         : "f" (val), "r" (addr)                  \
+         : "memory");                             \
+   }
+
+#define TESTINST_STORE_FRR(insn, val, addr, offs) \
+   {                                              \
+      __asm__ __volatile__(                       \
+         insn " %0, %1, %2 \n\t"                  \
+         :                                        \
+         : "f" (val), "r" (addr), "r" (offs)      \
+         : "memory");                             \
+   }
+
+static inline void show(void)
+{
+   int i;
+   printf("memory block:\n");
+   for (i = 0; i < NUM; i++)
+      printf("0x%lx:\t%#018lx\n", i * sizeof(unsigned long), mem[i]);
+}
+
+void test(void)
+{
+   char s8;
+   unsigned char u8;
+   short s16;
+   unsigned short u16;
+   int s32;
+   unsigned int u32;
+   long s64;
+   unsigned long u64;
+
+   show();
+
+   /* ---------------- ld.b rd, rj, si12 ---------------- */
+   printf("test ld.b: ");
+   TESTINST_LOAD_RRI("ld.b", s8, mem, 0);
+   printf("%d ", (int)s8);
+   TESTINST_LOAD_RRI("ld.b", s8, mem, 24);
+   printf("%d\n", (int)s8);
+
+   /* ---------------- ld.bu rd, rj, si12 ---------------- */
+   printf("test ld.bu: ");
+   TESTINST_LOAD_RRI("ld.b", u8, mem, 0);
+   printf("%u ", (unsigned)s8);
+   TESTINST_LOAD_RRI("ld.b", u8, mem, 24);
+   printf("%u\n", (unsigned)s8);
+
+   /* ---------------- ld.h rd, rj, si12 ---------------- */
+   printf("test ld.h: ");
+   TESTINST_LOAD_RRI("ld.h", s16, mem, 0);
+   printf("%hd ", s16);
+   TESTINST_LOAD_RRI("ld.h", s16, mem, 24);
+   printf("%hd\n", s16);
+
+   /* ---------------- ld.hu rd, rj, si12 ---------------- */
+   printf("test ld.hu: ");
+   TESTINST_LOAD_RRI("ld.hu", u16, mem, 0);
+   printf("%hu ", u16);
+   TESTINST_LOAD_RRI("ld.hu", u16, mem, 24);
+   printf("%hu\n", u16);
+
+   /* ---------------- ld.w rd, rj, si12 ---------------- */
+   printf("test ld.w: ");
+   TESTINST_LOAD_RRI("ld.w", s32, mem, 0);
+   printf("%d ", s32);
+   TESTINST_LOAD_RRI("ld.w", s32, mem, 24);
+   printf("%d\n", s32);
+
+   /* ---------------- ld.wu rd, rj, si12 ---------------- */
+   printf("test ld.wu: ");
+   TESTINST_LOAD_RRI("ld.wu", u32, mem, 0);
+   printf("%u ", u32);
+   TESTINST_LOAD_RRI("ld.wu", u32, mem, 24);
+   printf("%u\n", u32);
+
+   /* ---------------- ld.d rd, rj, si12 ---------------- */
+   printf("test ld.d: ");
+   TESTINST_LOAD_RRI("ld.d", s64, mem, 0);
+   printf("%ld ", s64);
+   TESTINST_LOAD_RRI("ld.d", s64, mem, 24);
+   printf("%ld ", s64);
+   TESTINST_LOAD_RRI("ld.d", u64, mem, 0);
+   printf("%lu ", u64);
+   TESTINST_LOAD_RRI("ld.d", u64, mem, 24);
+   printf("%lu\n", u64);
+
+   /* ---------------- ldx.b rd, rj, rk ---------------- */
+   printf("test ldx.b: ");
+   TESTINST_LOAD_RRR("ldx.b", s8, mem, 0);
+   printf("%d ", (int)s8);
+   TESTINST_LOAD_RRR("ldx.b", s8, mem, 24);
+   printf("%d\n", (int)s8);
+
+   /* ---------------- ldx.bu rd, rj, rk ---------------- */
+   printf("test ldx.bu: ");
+   TESTINST_LOAD_RRR("ldx.b", u8, mem, 0);
+   printf("%u ", (unsigned)s8);
+   TESTINST_LOAD_RRR("ldx.b", u8, mem, 24);
+   printf("%u\n", (unsigned)s8);
+
+   /* ---------------- ldx.h rd, rj, rk ---------------- */
+   printf("test ldx.h: ");
+   TESTINST_LOAD_RRR("ldx.h", s16, mem, 0);
+   printf("%hd ", s16);
+   TESTINST_LOAD_RRR("ldx.h", s16, mem, 24);
+   printf("%hd\n", s16);
+
+   /* ---------------- ldx.hu rd, rj, rk ---------------- */
+   printf("test ld.hu: ");
+   TESTINST_LOAD_RRR("ldx.hu", u16, mem, 0);
+   printf("%hu ", u16);
+   TESTINST_LOAD_RRR("ldx.hu", u16, mem, 24);
+   printf("%hu\n", u16);
+
+   /* ---------------- ldx.w rd, rj, rk ---------------- */
+   printf("test ldx.w: ");
+   TESTINST_LOAD_RRR("ldx.w", s32, mem, 0);
+   printf("%d ", s32);
+   TESTINST_LOAD_RRR("ldx.w", s32, mem, 24);
+   printf("%d\n", s32);
+
+   /* ---------------- ldx.wu rd, rj, rk ---------------- */
+   printf("test ldx.wu: ");
+   TESTINST_LOAD_RRR("ldx.wu", u32, mem, 0);
+   printf("%u ", u32);
+   TESTINST_LOAD_RRR("ldx.wu", u32, mem, 24);
+   printf("%u\n", u32);
+
+   /* ---------------- ldx.d rd, rj, rk ---------------- */
+   printf("test ldx.d: ");
+   TESTINST_LOAD_RRR("ldx.d", s64, mem, 0);
+   printf("%ld ", s64);
+   TESTINST_LOAD_RRR("ldx.d", s64, mem, 24);
+   printf("%ld ", s64);
+   TESTINST_LOAD_RRR("ldx.d", u64, mem, 0);
+   printf("%lu ", u64);
+   TESTINST_LOAD_RRR("ldx.d", u64, mem, 24);
+   printf("%lu\n", u64);
+
+   /* ---------------- ldptr.w rd, rj, si14 ---------------- */
+   printf("test ldptr.w: ");
+   TESTINST_LOAD_RRI("ldptr.w", s32, mem, 0);
+   printf("%d ", s32);
+   TESTINST_LOAD_RRI("ldptr.w", s32, mem, 24);
+   printf("%d\n", s32);
+
+   /* ---------------- ldptr.d rd, rj, si14 ---------------- */
+   printf("test ldptr.d: ");
+   TESTINST_LOAD_RRI("ldptr.d", s64, mem, 0);
+   printf("%ld ", s64);
+   TESTINST_LOAD_RRI("ldptr.d", s64, mem, 24);
+   printf("%ld\n", s64);
+
+   /* ---------------- fld.s fd, rj, si12 ---------------- */
+   printf("test fld.s: ");
+   TESTINST_LOAD_FRI("fld.s", u32, mem, 0);
+   printf("%#x ", u32);
+   TESTINST_LOAD_FRI("fld.s", u32, mem, 24);
+   printf("%#x\n", u32);
+
+   /* ---------------- fld.d fd, rj, si12 ---------------- */
+   printf("test fld.d: ");
+   TESTINST_LOAD_FRI("fld.d", u64, mem, 0);
+   printf("%#lx ", u64);
+   TESTINST_LOAD_FRI("fld.d", u64, mem, 24);
+   printf("%#lx\n", u64);
+
+   /* ---------------- fldx.s fd, rj, rk ---------------- */
+   printf("test fldx.s: ");
+   TESTINST_LOAD_FRR("fldx.s", u32, mem, 0);
+   printf("%#x ", u32);
+   TESTINST_LOAD_FRR("fldx.s", u32, mem, 24);
+   printf("%#x\n", u32);
+
+   /* ---------------- fldx.d fd, rj, rk ---------------- */
+   printf("test fldx.d: ");
+   TESTINST_LOAD_FRR("fldx.d", u64, mem, 0);
+   printf("%#lx ", u64);
+   TESTINST_LOAD_FRR("fldx.d", u64, mem, 24);
+   printf("%#lx\n", u64);
+
+   show();
+
+   u8 = 0xfe;
+   s8 = (char)u8;
+   u16 = 0xfedc;
+   s16 = (short)u16;
+   u32 = 0xfedcba98;
+   s32 = (int)u32;
+   u64 = 0xfedcba9876543210;
+   s64 = (long)u64;
+
+   /* ---------------- st.b rd, rj, si12 ---------------- */
+   printf("test st.b\n");
+   TESTINST_STORE_RRI("st.b", s8, mem, 0);
+   TESTINST_STORE_RRI("st.b", u8, mem, 1);
+
+   /* ---------------- st.h rd, rj, si12 ---------------- */
+   printf("test st.h\n");
+   TESTINST_STORE_RRI("st.h", s16, mem, 2);
+   TESTINST_STORE_RRI("st.h", u16, mem, 4);
+
+   /* ---------------- st.w rd, rj, si12 ---------------- */
+   printf("test st.w\n");
+   TESTINST_STORE_RRI("st.w", s32, mem, 8);
+   TESTINST_STORE_RRI("st.w", u32, mem, 12);
+
+   /* ---------------- st.d rd, rj, si12 ---------------- */
+   printf("test st.d\n");
+   TESTINST_STORE_RRI("st.d", s64, mem, 16);
+   TESTINST_STORE_RRI("st.d", u64, mem, 24);
+
+   /* ---------------- stx.b rd, rj, rk ---------------- */
+   printf("test stx.b\n");
+   TESTINST_STORE_RRR("stx.b", s8, mem, 32);
+   TESTINST_STORE_RRR("stx.b", u8, mem, 33);
+
+   /* ---------------- stx.h rd, rj, rk ---------------- */
+   printf("test stx.h\n");
+   TESTINST_STORE_RRR("stx.h", s16, mem, 34);
+   TESTINST_STORE_RRR("stx.h", u16, mem, 36);
+
+   /* ---------------- stx.w rd, rj, rk ---------------- */
+   printf("test stx.w\n");
+   TESTINST_STORE_RRR("stx.w", s32, mem, 40);
+   TESTINST_STORE_RRR("stx.w", u32, mem, 44);
+
+   /* ---------------- stx.d rd, rj, rk ---------------- */
+   printf("test stx.d\n");
+   TESTINST_STORE_RRR("stx.d", s64, mem, 48);
+   TESTINST_STORE_RRR("stx.d", u64, mem, 56);
+
+   /* ---------------- stptr.w rd, rj, si14 ---------------- */
+   printf("test stptr.w\n");
+   TESTINST_STORE_RRI("stptr.w", s64, mem, 64);
+   TESTINST_STORE_RRI("stptr.w", u64, mem, 68);
+
+   /* ---------------- stptr.d rd, rj, si14 ---------------- */
+   printf("test stptr.d\n");
+   TESTINST_STORE_RRI("stptr.d", s64, mem, 72);
+   TESTINST_STORE_RRI("stptr.d", u64, mem, 80);
+
+   /* ---------------- fst.s rd, rj, si12 ---------------- */
+   printf("test fst.w\n");
+   TESTINST_STORE_FRI("fst.s", u32, mem, 84);
+   TESTINST_STORE_FRI("fst.s", u32, mem, 88);
+
+   /* ---------------- fst.d rd, rj, si12 ---------------- */
+   printf("test fst.d\n");
+   TESTINST_STORE_FRI("fst.d", u64, mem, 96);
+   TESTINST_STORE_FRI("fst.d", u64, mem, 104);
+
+   /* ---------------- fstx.s rd, rj, rk ---------------- */
+   printf("test fstx.w\n");
+   TESTINST_STORE_FRR("fstx.s", u32, mem, 108);
+   TESTINST_STORE_FRR("fstx.s", u32, mem, 112);
+
+   /* ---------------- fstx.d rd, rj, rk ---------------- */
+   printf("test fstx.d\n");
+   TESTINST_STORE_FRR("fstx.d", u64, mem, 120);
+   TESTINST_STORE_FRR("fstx.d", u64, mem, 128);
+
+   show();
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/memory.stderr.exp b/none/tests/loongarch64/memory.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/memory.stdout.exp b/none/tests/loongarch64/memory.stdout.exp
new file mode 100644
index 0000000..928961d
--- /dev/null
+++ b/none/tests/loongarch64/memory.stdout.exp
@@ -0,0 +1,109 @@
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test ld.b: -128 -48
+test ld.bu: 4294967248 4294967248
+test ld.h: -6528 -20272
+test ld.hu: 59008 45264
+test ld.w: 59008 45264
+test ld.wu: 59008 45264
+test ld.d: 1305795535453611648 -4294922032 1305795535453611648 18446744069414629584
+test ldx.b: -128 -48
+test ldx.bu: 4294967248 4294967248
+test ldx.h: -6528 -20272
+test ld.hu: 59008 45264
+test ldx.w: 59008 45264
+test ldx.wu: 59008 45264
+test ldx.d: 1305795535453611648 -4294922032 1305795535453611648 18446744069414629584
+test ldptr.w: 59008 45264
+test ldptr.d: 1305795535453611648 -4294922032
+test fld.s: 0xe680 0xb0d0
+test fld.d: 0x121f1e1f0000e680 0xffffffff0000b0d0
+test fldx.s: 0xe680 0xb0d0
+test fldx.d: 0x121f1e1f0000e680 0xffffffff0000b0d0
+memory block:
+0x0:	0x121f1e1f0000e680
+0x8:	0x0000000000010700
+0x10:	0x000000030000e7dc
+0x18:	0xffffffff0000b0d0
+0x20:	0x232f2e2f2ab05fd0
+0x28:	0x242c2b2b0000b6a0
+0x30:	0x252a2e2b0000be80
+0x38:	0x262d2d2a0000de10
+0x40:	0x3f343f3e0000df20
+0x48:	0x3e353d3c2ab05fe0
+0x50:	0x363a3c3b0000dfd0
+0x58:	0x3b373b3a00010300
+0x60:	0x0000e680121f1e1f
+0x68:	0x0001070000000000
+0x70:	0x0000e7dc00000003
+0x78:	0x0000b0d0ffffffff
+0x80:	0x2ab05fd0232f2e2f
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
+test st.b
+test st.h
+test st.w
+test st.d
+test stx.b
+test stx.h
+test stx.w
+test stx.d
+test stptr.w
+test stptr.d
+test fst.w
+test fst.d
+test fstx.w
+test fstx.d
+memory block:
+0x0:	0x121ffedcfedcfefe
+0x8:	0xfedcba98fedcba98
+0x10:	0xfedcba9876543210
+0x18:	0xfedcba9876543210
+0x20:	0x232ffedcfedcfefe
+0x28:	0xfedcba98fedcba98
+0x30:	0xfedcba9876543210
+0x38:	0xfedcba9876543210
+0x40:	0x7654321076543210
+0x48:	0xfedcba9876543210
+0x50:	0xfedcba9876543210
+0x58:	0x3b373b3afedcba98
+0x60:	0xfedcba9876543210
+0x68:	0xfedcba9876543210
+0x70:	0x0000e7dcfedcba98
+0x78:	0xfedcba9876543210
+0x80:	0xfedcba9876543210
+0x88:	0x0000b6a0242c2b2b
+0x90:	0x0000be80252a2e2b
+0x98:	0x0000de10262d2d2a
+0xa0:	0x0000df203f343f3e
+0xa8:	0x2ab05fe03e353d3c
+0xb0:	0x0000dfd0363a3c3b
+0xb8:	0x000103003b373b3a
diff --git a/none/tests/loongarch64/memory.vgtest b/none/tests/loongarch64/memory.vgtest
new file mode 100644
index 0000000..be6895e
--- /dev/null
+++ b/none/tests/loongarch64/memory.vgtest
@@ -0,0 +1,2 @@
+prog: memory
+vgopts: -q
diff --git a/none/tests/loongarch64/move.c b/none/tests/loongarch64/move.c
new file mode 100644
index 0000000..3b7f46d
--- /dev/null
+++ b/none/tests/loongarch64/move.c
@@ -0,0 +1,112 @@
+#include <stdio.h>
+
+#define TESTINST_MOV(v1, v2, v3, v4, v5, v6, val)  \
+   {                                               \
+      unsigned long res1 = (unsigned long)v1;      \
+      unsigned long res2 = (unsigned long)v2;      \
+      unsigned long res3 = (unsigned long)v3;      \
+      unsigned long res4 = (unsigned long)v4;      \
+      unsigned long res5 = (unsigned long)v5;      \
+      unsigned long res6 = (unsigned long)v6;      \
+      __asm__ __volatile__(                        \
+         "movgr2fr.w %0, %6  \n\t"                 \
+         "movgr2fr.d %1, %6  \n\t"                 \
+         "movgr2frh.w %2, %6 \n\t"                 \
+         "movfr2gr.s %3, %7  \n\t"                 \
+         "movfrh2gr.s %4, %7  \n\t"                \
+         "movfr2gr.d %5, %7  \n\t"                 \
+         : "+f" (res1), "+f" (res2), "+f" (res3),  \
+           "+r" (res4), "+r" (res5), "+r" (res6)   \
+         : "r" (val), "f" (val)                    \
+         : "memory");                              \
+      printf("movgr2fr.w ::\n");                   \
+      printf("input: %#018lx %#018lx\n", v1, val); \
+      printf("output: %#018lx\n", res1);           \
+      printf("movgr2fr.d ::\n");                   \
+      printf("input: %#018lx %#018lx\n", v2, val); \
+      printf("output: %#018lx\n", res2);           \
+      printf("movgr2frh.w ::\n");                  \
+      printf("input: %#018lx %#018lx\n", v3, val); \
+      printf("output: %#018lx\n", res3);           \
+      printf("movfr2gr.s ::\n");                   \
+      printf("input: %#018lx %#018lx\n", v4, val); \
+      printf("output: %#018lx\n", res4);           \
+      printf("movfrh2gr.s ::\n");                  \
+      printf("input: %#018lx %#018lx\n", v5, val); \
+      printf("output: %#018lx\n", res5);           \
+      printf("movfr2gr.d ::\n");                   \
+      printf("input: %#018lx %#018lx\n", v6, val); \
+      printf("output: %#018lx\n", res6);           \
+   }
+
+#define TESTINST_FSCR(fcsr, val)            \
+   {                                        \
+      unsigned long res;                    \
+      __asm__ __volatile__(                 \
+         "movgr2fcsr " fcsr ", %1 \n\t"     \
+         "movfcsr2gr %0, " fcsr " \n\t"     \
+         : "=r" (res)                       \
+         : "r" (val)                        \
+         : "memory");                       \
+      printf("movgr2fcsr movfcsr2gr ::\n"); \
+      printf("input: %#018lx\n", val);      \
+      printf("output: %#018lx\n", res);     \
+   }
+
+#define TESTINST_CF(fcc, v1, v2, val)              \
+   {                                               \
+      unsigned long res1 = (unsigned long)v1;      \
+      unsigned long res2 = (unsigned long)v2;      \
+      __asm__ __volatile__(                        \
+         "movfr2cf " fcc ", %2 \n\t"               \
+         "movcf2fr %0, " fcc " \n\t"               \
+         "movgr2cf " fcc ", %3 \n\t"               \
+         "movcf2gr %1, " fcc " \n\t"               \
+         : "+f" (res1), "+r" (res2)                \
+         : "f" (val), "r" (val)                    \
+         : "memory");                              \
+      printf("movfr2cf movcf2fr ::\n");            \
+      printf("input: %#018lx %#018lx\n", v1, val); \
+      printf("output: %lx\n", res1);               \
+      printf("movgr2cf movcf2gr ::\n");            \
+      printf("input: %#018lx %#018lx\n", v2, val); \
+      printf("output: %lx\n", res2);               \
+   }
+
+void test(void)
+{
+   TESTINST_MOV(0x1234123412341234UL, 0x5678567856785678UL, 0x9abc9abc9abc9abcUL, 0xdef0def0def0def0UL, 0x2468246824682468UL, 0x3579357935793579UL, 0x0123456789abcdefUL);
+   TESTINST_MOV(0x1234123412341234UL, 0x5678567856785678UL, 0x9abc9abc9abc9abcUL, 0xdef0def0def0def0UL, 0x2468246824682468UL, 0x3579357935793579UL, 0xfedcba9876543210UL);
+
+   TESTINST_FSCR("$r0", 0x0123456789abcdefUL);
+   TESTINST_FSCR("$r0", 0xfedcba9876543210UL);
+   TESTINST_FSCR("$r1", 0x0123456789abcdefUL);
+   TESTINST_FSCR("$r1", 0xfedcba9876543210UL);
+   TESTINST_FSCR("$r2", 0x0123456789abcdefUL);
+   TESTINST_FSCR("$r2", 0xfedcba9876543210UL);
+   TESTINST_FSCR("$r3", 0x0123456789abcdefUL);
+   TESTINST_FSCR("$r3", 0xfedcba9876543210UL);
+
+   TESTINST_CF("$fcc0", 0x1234123412341234UL, 0x5678567856785678UL, 0xffffffffffffffffUL);
+   TESTINST_CF("$fcc0", 0x1234123412341234UL, 0x5678567856785678UL, 0xdef0def0def0def0UL);
+   TESTINST_CF("$fcc1", 0x1234123412341234UL, 0x5678567856785678UL, 0xffffffffffffffffUL);
+   TESTINST_CF("$fcc1", 0x1234123412341234UL, 0x5678567856785678UL, 0xdef0def0def0def0UL);
+   TESTINST_CF("$fcc2", 0x1234123412341234UL, 0x5678567856785678UL, 0xffffffffffffffffUL);
+   TESTINST_CF("$fcc2", 0x1234123412341234UL, 0x5678567856785678UL, 0xdef0def0def0def0UL);
+   TESTINST_CF("$fcc3", 0x1234123412341234UL, 0x5678567856785678UL, 0xffffffffffffffffUL);
+   TESTINST_CF("$fcc3", 0x1234123412341234UL, 0x5678567856785678UL, 0xdef0def0def0def0UL);
+   TESTINST_CF("$fcc4", 0x1234123412341234UL, 0x5678567856785678UL, 0xffffffffffffffffUL);
+   TESTINST_CF("$fcc4", 0x1234123412341234UL, 0x5678567856785678UL, 0xdef0def0def0def0UL);
+   TESTINST_CF("$fcc5", 0x1234123412341234UL, 0x5678567856785678UL, 0xffffffffffffffffUL);
+   TESTINST_CF("$fcc5", 0x1234123412341234UL, 0x5678567856785678UL, 0xdef0def0def0def0UL);
+   TESTINST_CF("$fcc6", 0x1234123412341234UL, 0x5678567856785678UL, 0xffffffffffffffffUL);
+   TESTINST_CF("$fcc6", 0x1234123412341234UL, 0x5678567856785678UL, 0xdef0def0def0def0UL);
+   TESTINST_CF("$fcc7", 0x1234123412341234UL, 0x5678567856785678UL, 0xffffffffffffffffUL);
+   TESTINST_CF("$fcc7", 0x1234123412341234UL, 0x5678567856785678UL, 0xdef0def0def0def0UL);
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/move.stderr.exp b/none/tests/loongarch64/move.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/move.stdout.exp b/none/tests/loongarch64/move.stdout.exp
new file mode 100644
index 0000000..12baf38
--- /dev/null
+++ b/none/tests/loongarch64/move.stdout.exp
@@ -0,0 +1,156 @@
+movgr2fr.w ::
+input: 0x1234123412341234 0x0123456789abcdef
+output: 0x0123456789abcdef
+movgr2fr.d ::
+input: 0x5678567856785678 0x0123456789abcdef
+output: 0x0123456789abcdef
+movgr2frh.w ::
+input: 0x9abc9abc9abc9abc 0x0123456789abcdef
+output: 0x89abcdef9abc9abc
+movfr2gr.s ::
+input: 0xdef0def0def0def0 0x0123456789abcdef
+output: 0xffffffff89abcdef
+movfrh2gr.s ::
+input: 0x2468246824682468 0x0123456789abcdef
+output: 0x0000000001234567
+movfr2gr.d ::
+input: 0x3579357935793579 0x0123456789abcdef
+output: 0x0123456789abcdef
+movgr2fr.w ::
+input: 0x1234123412341234 0xfedcba9876543210
+output: 0xfedcba9876543210
+movgr2fr.d ::
+input: 0x5678567856785678 0xfedcba9876543210
+output: 0xfedcba9876543210
+movgr2frh.w ::
+input: 0x9abc9abc9abc9abc 0xfedcba9876543210
+output: 0x765432109abc9abc
+movfr2gr.s ::
+input: 0xdef0def0def0def0 0xfedcba9876543210
+output: 0x0000000076543210
+movfrh2gr.s ::
+input: 0x2468246824682468 0xfedcba9876543210
+output: 0xfffffffffedcba98
+movfr2gr.d ::
+input: 0x3579357935793579 0xfedcba9876543210
+output: 0xfedcba9876543210
+movgr2fcsr movfcsr2gr ::
+input: 0x0123456789abcdef
+output: 0x00000000090b01cf
+movgr2fcsr movfcsr2gr ::
+input: 0xfedcba9876543210
+output: 0x0000000016140210
+movgr2fcsr movfcsr2gr ::
+input: 0x0123456789abcdef
+output: 0x000000000000008f
+movgr2fcsr movfcsr2gr ::
+input: 0xfedcba9876543210
+output: 0x0000000000000010
+movgr2fcsr movfcsr2gr ::
+input: 0x0123456789abcdef
+output: 0x00000000090b0000
+movgr2fcsr movfcsr2gr ::
+input: 0xfedcba9876543210
+output: 0x0000000016140000
+movgr2fcsr movfcsr2gr ::
+input: 0x0123456789abcdef
+output: 0x0000000000000100
+movgr2fcsr movfcsr2gr ::
+input: 0xfedcba9876543210
+output: 0x0000000000000200
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xffffffffffffffff
+output: 1
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xffffffffffffffff
+output: 1
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xdef0def0def0def0
+output: 0
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xdef0def0def0def0
+output: 0
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xffffffffffffffff
+output: 1
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xffffffffffffffff
+output: 1
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xdef0def0def0def0
+output: 0
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xdef0def0def0def0
+output: 0
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xffffffffffffffff
+output: 1
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xffffffffffffffff
+output: 1
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xdef0def0def0def0
+output: 0
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xdef0def0def0def0
+output: 0
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xffffffffffffffff
+output: 1
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xffffffffffffffff
+output: 1
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xdef0def0def0def0
+output: 0
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xdef0def0def0def0
+output: 0
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xffffffffffffffff
+output: 1
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xffffffffffffffff
+output: 1
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xdef0def0def0def0
+output: 0
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xdef0def0def0def0
+output: 0
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xffffffffffffffff
+output: 1
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xffffffffffffffff
+output: 1
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xdef0def0def0def0
+output: 0
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xdef0def0def0def0
+output: 0
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xffffffffffffffff
+output: 1
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xffffffffffffffff
+output: 1
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xdef0def0def0def0
+output: 0
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xdef0def0def0def0
+output: 0
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xffffffffffffffff
+output: 1
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xffffffffffffffff
+output: 1
+movfr2cf movcf2fr ::
+input: 0x1234123412341234 0xdef0def0def0def0
+output: 0
+movgr2cf movcf2gr ::
+input: 0x5678567856785678 0xdef0def0def0def0
+output: 0
diff --git a/none/tests/loongarch64/move.vgtest b/none/tests/loongarch64/move.vgtest
new file mode 100644
index 0000000..358d44b
--- /dev/null
+++ b/none/tests/loongarch64/move.vgtest
@@ -0,0 +1,3 @@
+prereq: ../../../tests/loongarch64_features fpu
+prog: move
+vgopts: -q
diff --git a/none/tests/loongarch64/pc.c b/none/tests/loongarch64/pc.c
new file mode 100644
index 0000000..a493846
--- /dev/null
+++ b/none/tests/loongarch64/pc.c
@@ -0,0 +1,66 @@
+#include <stdio.h>
+#include <stdbool.h>
+
+#define TESTINST_RI(insn, imm, offs, clear)          \
+   {                                                 \
+      unsigned long res, exp;                        \
+      __asm__ __volatile__(                          \
+         "  la.local $t0, 1f   \n\t"                 \
+         "  jirl %0, $t0, 0    \n\t"                 \
+         "1:                   \n\t"                 \
+            insn " %1," #imm " \n\t"                 \
+         : "=r" (exp), "=r" (res)                    \
+         :                                           \
+         : "$t0", "memory");                         \
+      printf("test %s\n", insn);                     \
+      exp += (long)imm << 40 >> (40 - offs);         \
+      if (clear)                                     \
+         exp &= 0xfffffffffffff000UL;                \
+      if (res != exp)                                \
+         printf("res: %#lx, exp: %#lx\n", res, exp); \
+   }
+
+void test(void)
+{
+   /* ---------------- pcaddi rd, si20 ---------------- */
+   TESTINST_RI("pcaddi", 0, 2, false);
+   TESTINST_RI("pcaddi", 1, 2, false);
+   TESTINST_RI("pcaddi", 100, 2, false);
+   TESTINST_RI("pcaddi", 12345, 2, false);
+   TESTINST_RI("pcaddi", -12345, 2, false);
+   TESTINST_RI("pcaddi", 524287, 2, false);
+   TESTINST_RI("pcaddi", -524288, 2, false);
+
+   /* ---------------- pcaddu12i rd, si20 ---------------- */
+   TESTINST_RI("pcaddu12i", 0, 12, false);
+   TESTINST_RI("pcaddu12i", 1, 12, false);
+   TESTINST_RI("pcaddu12i", 100, 12, false);
+   TESTINST_RI("pcaddu12i", 12345, 12, false);
+   TESTINST_RI("pcaddu12i", -12345, 12, false);
+   TESTINST_RI("pcaddu12i", 524287, 12, false);
+   TESTINST_RI("pcaddu12i", -524288, 12, false);
+
+   /* ---------------- pcaddu18i rd, si20 ---------------- */
+   TESTINST_RI("pcaddu18i", 0, 18, false);
+   TESTINST_RI("pcaddu18i", 1, 18, false);
+   TESTINST_RI("pcaddu18i", 100, 18, false);
+   TESTINST_RI("pcaddu18i", 12345, 18, false);
+   TESTINST_RI("pcaddu18i", -12345, 18, false);
+   TESTINST_RI("pcaddu18i", 524287, 18, false);
+   TESTINST_RI("pcaddu18i", -524288, 18, false);
+
+   /* ---------------- pcalau12i rd, si20 ---------------- */
+   TESTINST_RI("pcalau12i", 0, 12, true);
+   TESTINST_RI("pcalau12i", 1, 12, true);
+   TESTINST_RI("pcalau12i", 100, 12, true);
+   TESTINST_RI("pcalau12i", 12345, 12, true);
+   TESTINST_RI("pcalau12i", -12345, 12, true);
+   TESTINST_RI("pcalau12i", 524287, 12, true);
+   TESTINST_RI("pcalau12i", -524288, 12, true);
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/pc.stderr.exp b/none/tests/loongarch64/pc.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/pc.stdout.exp b/none/tests/loongarch64/pc.stdout.exp
new file mode 100644
index 0000000..422ea40
--- /dev/null
+++ b/none/tests/loongarch64/pc.stdout.exp
@@ -0,0 +1,28 @@
+test pcaddi
+test pcaddi
+test pcaddi
+test pcaddi
+test pcaddi
+test pcaddi
+test pcaddi
+test pcaddu12i
+test pcaddu12i
+test pcaddu12i
+test pcaddu12i
+test pcaddu12i
+test pcaddu12i
+test pcaddu12i
+test pcaddu18i
+test pcaddu18i
+test pcaddu18i
+test pcaddu18i
+test pcaddu18i
+test pcaddu18i
+test pcaddu18i
+test pcalau12i
+test pcalau12i
+test pcalau12i
+test pcalau12i
+test pcalau12i
+test pcalau12i
+test pcalau12i
diff --git a/none/tests/loongarch64/pc.vgtest b/none/tests/loongarch64/pc.vgtest
new file mode 100644
index 0000000..468226d
--- /dev/null
+++ b/none/tests/loongarch64/pc.vgtest
@@ -0,0 +1,2 @@
+prog: pc
+vgopts: -q
diff --git a/none/tests/loongarch64/special.c b/none/tests/loongarch64/special.c
new file mode 100644
index 0000000..e1e8c94
--- /dev/null
+++ b/none/tests/loongarch64/special.c
@@ -0,0 +1,112 @@
+#include <stdio.h>
+
+#define TESTINST_HRI(insn, hint, addr, offs)   \
+   {                                           \
+      __asm__ __volatile__(                    \
+         insn " " #hint ", %0, " #offs " \n\t" \
+         :                                     \
+         : "r" (addr)                          \
+         : "memory"                            \
+      );                                       \
+      printf("test %s\n", insn);               \
+   }
+
+#define TESTINST_HRR(insn, hint, addr, offs) \
+   {                                         \
+      __asm__ __volatile__(                  \
+         insn " %0, %1, \n\t"                \
+         :                                   \
+         : "r" (addr), "r" (offs)            \
+         : "memory"                          \
+      );                                     \
+      printf("test %s\n", insn);             \
+   }
+
+#define TESTINST_CODE(insn, code) \
+   {                              \
+      __asm__ __volatile__(       \
+         insn " " #code " \n\t"   \
+         :                        \
+         :                        \
+         : "memory"               \
+      );                          \
+      printf("test %s\n", insn);  \
+   }
+
+#define TESTINST_RR(insn, id)    \
+   {                             \
+      unsigned long res = 0;     \
+      __asm__ __volatile__(      \
+         insn " %0, %1 \n\t"     \
+         : "+r" (res)            \
+         : "r" (id)              \
+         : "memory"              \
+      );                         \
+      printf("test %s\n", insn); \
+      printf("res: %ld\n", res); \
+   }
+
+unsigned long mem[8];
+
+void test(void)
+{
+   /* ---------------- preld hint, rj, si12 ---------------- */
+   TESTINST_HRI("preld", 0, mem, 0);
+   TESTINST_HRI("preld", 1, mem, 1);
+   TESTINST_HRI("preld", 2, mem, 2);
+   TESTINST_HRI("preld", 3, mem, 3);
+   TESTINST_HRI("preld", 4, mem, 4);
+   TESTINST_HRI("preld", 5, mem, 5);
+   TESTINST_HRI("preld", 6, mem, 6);
+   TESTINST_HRI("preld", 7, mem, 7);
+   TESTINST_HRI("preld", 8, mem, 8);
+   TESTINST_HRI("preld", 9, mem, 9);
+
+   /* ---------------- preldx hint, rj, rk ---------------- */
+   TESTINST_HRI("preld", 31, mem, 10);
+   TESTINST_HRI("preld", 30, mem, 12);
+   TESTINST_HRI("preld", 29, mem, 14);
+   TESTINST_HRI("preld", 28, mem, 16);
+   TESTINST_HRI("preld", 27, mem, 18);
+   TESTINST_HRI("preld", 26, mem, 20);
+   TESTINST_HRI("preld", 25, mem, 22);
+   TESTINST_HRI("preld", 24, mem, 24);
+   TESTINST_HRI("preld", 23, mem, 26);
+   TESTINST_HRI("preld", 22, mem, 28);
+
+   /* ---------------- dbar code ---------------- */
+   TESTINST_CODE("dbar", 0);
+   TESTINST_CODE("dbar", 2);
+   TESTINST_CODE("dbar", 4);
+   TESTINST_CODE("dbar", 6);
+   TESTINST_CODE("dbar", 8);
+
+   /* ---------------- ibar code ---------------- */
+   TESTINST_CODE("ibar", 9);
+   TESTINST_CODE("ibar", 7);
+   TESTINST_CODE("ibar", 5);
+   TESTINST_CODE("ibar", 3);
+   TESTINST_CODE("ibar", 1);
+
+   /* ---------------- rdtimel.w rd, rj ---------------- */
+   TESTINST_RR("rdtimel.w", 0);
+   TESTINST_RR("rdtimel.w", 1);
+   TESTINST_RR("rdtimel.w", 2);
+
+   /* ---------------- rdtimeh.w rd, rj ---------------- */
+   TESTINST_RR("rdtimeh.w", 0);
+   TESTINST_RR("rdtimeh.w", 1);
+   TESTINST_RR("rdtimeh.w", 2);
+
+
+   /* ---------------- rdtime.d rd, rj ---------------- */
+   TESTINST_RR("rdtime.d", 0);
+   TESTINST_RR("rdtime.d", 1);
+   TESTINST_RR("rdtime.d", 2);
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/special.stderr.exp b/none/tests/loongarch64/special.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/special.stdout.exp b/none/tests/loongarch64/special.stdout.exp
new file mode 100644
index 0000000..7bd523e
--- /dev/null
+++ b/none/tests/loongarch64/special.stdout.exp
@@ -0,0 +1,48 @@
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test preld
+test dbar
+test dbar
+test dbar
+test dbar
+test dbar
+test ibar
+test ibar
+test ibar
+test ibar
+test ibar
+test rdtimel.w
+res: 0
+test rdtimel.w
+res: 0
+test rdtimel.w
+res: 0
+test rdtimeh.w
+res: 0
+test rdtimeh.w
+res: 0
+test rdtimeh.w
+res: 0
+test rdtime.d
+res: 0
+test rdtime.d
+res: 0
+test rdtime.d
+res: 0
diff --git a/none/tests/loongarch64/special.vgtest b/none/tests/loongarch64/special.vgtest
new file mode 100644
index 0000000..b2f2ae9
--- /dev/null
+++ b/none/tests/loongarch64/special.vgtest
@@ -0,0 +1,2 @@
+prog: special
+vgopts: -q
diff --git a/none/tests/loongarch64/vector128.c b/none/tests/loongarch64/vector128.c
new file mode 100644
index 0000000..bfa07c2
--- /dev/null
+++ b/none/tests/loongarch64/vector128.c
@@ -0,0 +1,12 @@
+#include <stdio.h>
+
+void test(void)
+{
+   // TODO
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/vector128.stderr.exp b/none/tests/loongarch64/vector128.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/vector128.stdout.exp b/none/tests/loongarch64/vector128.stdout.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/vector128.vgtest b/none/tests/loongarch64/vector128.vgtest
new file mode 100644
index 0000000..5bfdc28
--- /dev/null
+++ b/none/tests/loongarch64/vector128.vgtest
@@ -0,0 +1,3 @@
+prereq: ../../../tests/loongarch64_features lsx
+prog: vector128
+vgopts: -q
diff --git a/none/tests/loongarch64/vector256.c b/none/tests/loongarch64/vector256.c
new file mode 100644
index 0000000..bfa07c2
--- /dev/null
+++ b/none/tests/loongarch64/vector256.c
@@ -0,0 +1,12 @@
+#include <stdio.h>
+
+void test(void)
+{
+   // TODO
+}
+
+int main(void)
+{
+   test();
+   return 0;
+}
diff --git a/none/tests/loongarch64/vector256.stderr.exp b/none/tests/loongarch64/vector256.stderr.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/vector256.stdout.exp b/none/tests/loongarch64/vector256.stdout.exp
new file mode 100644
index 0000000..e69de29
diff --git a/none/tests/loongarch64/vector256.vgtest b/none/tests/loongarch64/vector256.vgtest
new file mode 100644
index 0000000..2b32ff1
--- /dev/null
+++ b/none/tests/loongarch64/vector256.vgtest
@@ -0,0 +1,3 @@
+prereq: ../../../tests/loongarch64_features lasx
+prog: vector256
+vgopts: -q
-- 
2.47.1

