#!/bin/bash

# Copyright 2008, 2009, 2010, 2013, 2018, 2019, 2020  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=distcc
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.?z | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-5}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    loongarch64) export ARCH=loong64 ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

if [ "$ARCH" = "i586" ]; then
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "armv7hl" ]; then
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "loong64" ]; then
  LIBDIRSUFFIX="64"
else
  LIBDIRSUFFIX=""
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

TMP=${TMP:-/tmp}
PKG=$TMP/package-distcc

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf distcc-$VERSION
tar xvf $CWD/distcc-$VERSION.tar.?z || exit 1
cd distcc-$VERSION || exit 1
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

if [ ! -r configure ]; then
  ./autogen.sh
fi

autoreconf -fi
./configure \
  --prefix=/usr \
  --datadir=/usr/share \
  --sysconfdir=/etc \
  --mandir=/usr/man \
  --with-gtk \
  --with-auth \
  --without-gnome \
  --disable-Werror \
  --target=loongarch64-slackware-linux-gnu || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG docdir=/usr/doc/distcc-$VERSION || exit 1

# Make a masquarade directory in /usr/lib/distcc:
GCCVER=$(gcc -dumpversion)
mkdir -p $PKG//usr/lib/distcc
( cd $PKG//usr/lib/distcc 
  ln -sf ../../bin/distcc c++
  ln -sf ../../bin/distcc c89
  ln -sf ../../bin/distcc c99
  ln -sf ../../bin/distcc cc
  ln -sf ../../bin/distcc clang
  ln -sf ../../bin/distcc clang++
  ln -sf ../../bin/distcc g++
  ln -sf ../../bin/distcc gcc
  ln -sf ../../bin/distcc gcc-$GCCVER
  ln -sf ../../bin/distcc loongarch64-slackware-linux-gnu-g++
  ln -sf ../../bin/distcc loongarch64-slackware-linux-gnu-gcc
)

# If needed, make a symlink from /usr/lib${LIBDIRSUFFIX}/distcc -> /usr/lib/distcc:
if [ ! "$LIBDIRSUFFIX" = "" ]; then
  mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}
  ( cd $PKG/usr/lib${LIBDIRSUFFIX}
    ln -sf ../lib/distcc .
  )
fi

# Install distccmon-gnome.desktop:
mkdir -p $PKG/usr/share/applications
cat gnome/distccmon-gnome.desktop > $PKG/usr/share/applications/distccmon-gnome.desktop

for file in $PKG/etc/distcc/* ; do
  mv $file ${file}.new
done

gzip -9 $PKG/usr/man/man?/*

# Restore original timestamps on the doc files:
for file in * ; do
  if [ -f $file ]; then
    if [ -r $PKG/usr/doc/distcc-$VERSION/$file ]; then
      cp -a $file $PKG/usr/doc/distcc-$VERSION/$file
      chmod 644 $PKG/usr/doc/distcc-$VERSION/$file
    fi
  fi
done

# Strip binaries:
find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

mkdir -p $PKG/install
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

# Build the package:
cd $PKG
/sbin/makepkg -l y -c n $TMP/distcc-$VERSION-$ARCH-$BUILD.txz
