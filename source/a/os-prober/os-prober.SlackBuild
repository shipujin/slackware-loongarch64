#!/bin/bash

# Copyright 2013, 2018, 2019  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=os-prober
VERSION=${VERSION:-$(echo $PKGNAM_*.tar.?z* | rev | cut -f 3- -d . | cut -f 1 -d _ | rev)}
BUILD=${BUILD:-2}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$(uname -m)" in
    i?86) ARCH=i686 ;;
    arm*) readelf /usr/bin/file -A | grep -E -q "Tag_CPU.*[4,5]" && ARCH=arm || ARCH=armv7hl ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *) ARCH=$(uname -m) ;;
  esac
  export ARCH
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

if [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=pentium4 -mtune=generic"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -march=x86-64 -mtune=generic -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

TMP=${TMP:-/tmp}
PKG=$TMP/package-$PKGNAM

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf $PKGNAM-$VERSION
tar xvf $CWD/${PKGNAM}_$VERSION.tar.?z* || exit 1
cd $PKGNAM-$VERSION || exit 1

# Don't be very very slow:
cat $CWD/os-prober-grub2-mount-workaround.patch | patch -p1 --verbose || exit 1

# Don't drop support for reiserfs.  It's still in the kernel (for now):
cat $CWD/os-prober.reiserfs.diff | patch -p1 --verbose || exit 1

# Fix detecting LVM2 volumes:
cat $CWD/os-prober.lvm2.diff | patch -p1 --verbose || exit 1

# Edit the scripts to use $LIBDIRSUFFIX=64 if needed:
if [ "$LIBDIRSUFFIX" = "64" ]; then
  find -type f -exec sed -i -e 's|usr/lib|usr/lib64|g' {} \;
fi

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

make CFLAGS="$SLKCFLAGS" || exit 1

mkdir -p $PKG/usr/bin
cp -a linux-boot-prober os-prober $PKG/usr/bin
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}
cp -a linux-boot-probes os-probes $PKG/usr/lib${LIBDIRSUFFIX}
( cd $PKG/usr/lib${LIBDIRSUFFIX}/linux-boot-probes
  for probe in common/* ; do
    ln -sf $probe .
  done
  cd mounted
  for probe in common/* x86/* ; do
    ln -sf $probe .
  done
)
( cd $PKG/usr/lib${LIBDIRSUFFIX}/os-probes
  for probe in common/* ; do
    ln -sf $probe .
  done
  cd init
  for probe in common/* ; do
    ln -sf $probe .
  done
  cd ../mounted
  for probe in common/* x86/* ; do
    ln -sf $probe .
  done
)
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/os-prober
cp -a newns $PKG/usr/lib${LIBDIRSUFFIX}/os-prober
mkdir -p $PKG/usr/share/os-prober
cp -a common.sh $PKG/usr/share/os-prober
mkdir -p $PKG/var/lib/os-prober

# Add a documentation directory:
mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a README TODO $PKG/usr/doc/$PKGNAM-$VERSION

# Strip binaries:
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

mkdir $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/$PKGNAM-$VERSION-$ARCH-$BUILD.txz

