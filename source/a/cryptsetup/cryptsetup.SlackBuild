#!/bin/bash

# Copyright (c) 2007, 2009, 2010  Eric Hameleers <alien@slackware.com>
# Copyright (c) 2007, 2009, 2010, 2015, 2017, 2018, 2020  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=cryptsetup
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.xz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

TMP=${TMP:-/tmp}
PKG=$TMP/package-cryptsetup

rm -rf $PKG
mkdir -p $TMP $PKG/usr

cd $TMP
rm -rf cryptsetup-$VERSION
tar xvf $CWD/cryptsetup-$VERSION.tar.xz || exit 1
cd cryptsetup-$VERSION || exit 1
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --localstatedir=/var \
  --sysconfdir=/etc \
  --enable-cryptsetup-reencrypt \
  --enable-libargon2 \
  --disable-asciidoc \
  --mandir=/usr/man \
  --docdir=/usr/doc/cryptsetup-$VERSION \
  --build=$ARCH-slackware-linux || exit 1

make $NUMJOBS || make || exit 1
make DESTDIR=$PKG install || exit 1

# __DISABLED__
# If libargon2 and libjson-c are both under /usr, there's very little reason to
# move this. This continues a trend generally going on with Linux based OSes to
# ignore weird /usr-is-a-separate-partition corner cases.
## Move the shared library to $PKG/lib${LIBDIRSUFFIX}:
#mkdir -p $PKG/lib${LIBDIRSUFFIX}
#( cd $PKG/usr/lib${LIBDIRSUFFIX}
#  for file in lib*.so.*.* ; do
#    mv $file ../../lib${LIBDIRSUFFIX}
#    ln -sf ../../lib${LIBDIRSUFFIX}/$file .
#  done
#  cp -a lib*.so.? ../../lib${LIBDIRSUFFIX}
#)

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# Move the cryptsetup binary to $PKG/sbin:
mkdir -p $PKG/sbin
( cd $PKG/usr/sbin
  mv cryptsetup ../../sbin
  ln -sf ../../sbin/cryptsetup .
)

# Add the rc script:
mkdir -p $PKG/etc/rc.d
cat $CWD/rc.luks > $PKG/etc/rc.d/rc.luks.new
chmod 755 $PKG/etc/rc.d/rc.luks.new

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a \
  AUTHORS* COPYING* INSTALL* NEWS* README* TODO* FAQ* \
  $PKG/usr/doc/$PKGNAM-$VERSION

# Convert pdf files to text. We do not package bloated PDFs.
( cd docs
  for file in *.pdf ; do
    pdftotext $file
  done
)
cp -a docs/*.txt $PKG/usr/doc/$PKGNAM-$VERSION
cp -a docs/v${VERSION}-ReleaseNotes $PKG/usr/doc/$PKGNAM-$VERSION

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/usr/doc/*-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

# Copy Slackware's crypttab manpage to package:
mkdir -p $PKG/usr/man/man5
cp -a $CWD/crypttab.5 $PKG/usr/man/man5/
chown root:root $PKG/usr/man/man5/crypttab.5
chmod 644 $PKG/usr/man/man5/crypttab.5

# Compress and link the manpages:
( cd $PKG/usr/man
  for manpagedir in $(find . -type d -name "man*") ; do
    ( cd $manpagedir
      for eachpage in $( find . -type l -maxdepth 1) ; do
        ln -s $( readlink $eachpage ).gz $eachpage.gz
        rm $eachpage
      done
      gzip -9 *.?
    )
  done
)

find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

mkdir -p $PKG/install
zcat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/${PKGNAM}-${VERSION}-${ARCH}-${BUILD}.txz

