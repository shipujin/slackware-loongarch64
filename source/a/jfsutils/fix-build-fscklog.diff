diff --git a/fscklog/display.c b/fscklog/display.c
index a33d44f..dadd07f 100644
--- a/fscklog/display.c
+++ b/fscklog/display.c
@@ -54,7 +54,7 @@ FILE *infp;
  * output: fsck extracted service log I/O buffer
  *
  */
-char xchklog_buffer[XCHKLOG_BUFSIZE];
+static char xchklog_buffer[XCHKLOG_BUFSIZE];
 
 /* + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
  *
diff --git a/libfs/logredo.c b/libfs/logredo.c
index eb897e8..38f6afa 100644
--- a/libfs/logredo.c
+++ b/libfs/logredo.c
@@ -87,9 +87,9 @@ int32_t bmap_stg_bytes = 0;
  *    S T U F F    F O R    T H E    L O G
  *
  */
-struct logsuper logsup;		/* log super block */
-int32_t numdoblk;		/* number of do blocks used     */
-int32_t numnodofile;		/* number of nodo file blocks used  */
+static struct logsuper logsup;		/* log super block */
+static int32_t numdoblk;		/* number of do blocks used     */
+static int32_t numnodofile;		/* number of nodo file blocks used  */
 int32_t numExtDtPg = 0;		/* number of extended dtpage blocks used  */
 
 /*
@@ -129,7 +129,7 @@ int32_t use_2ndary_agg_superblock;
  */
 
 /* buffer header table */
-struct bufhdr {
+static struct bufhdr {
 	int16_t next;		/* 2: next on free/lru list */
 	int16_t prev;		/* 2: previous on free/lru list */
 	int16_t hnext;		/* 2: next on hash chain */
@@ -142,7 +142,7 @@ struct bufhdr {
 } bufhdr[NBUFPOOL];		/* (24) */
 
 /* buffer table */
-struct bufpool {
+static struct bufpool {
 	char bytes[PSIZE];
 } buffer[NBUFPOOL - 1];
 
@@ -151,15 +151,15 @@ struct bufpool {
  *
  * log has its own 4 page buffer pool.
  */
-uint8_t afterdata[LOGPSIZE * 2];	/* buffer to read in redopage data */
+static uint8_t afterdata[LOGPSIZE * 2];	/* buffer to read in redopage data */
 
 /*
  * Miscellaneous
  */
-caddr_t prog;			/* Program name */
-int32_t mntcnt, bufsize;
-char *mntinfo;
-int32_t retcode;		/* return code from logredo    */
+static caddr_t prog;			/* Program name */
+static int32_t mntcnt, bufsize;
+static char *mntinfo;
+static int32_t retcode;		/* return code from logredo    */
 int end_of_transaction = 0;
 
 /*
