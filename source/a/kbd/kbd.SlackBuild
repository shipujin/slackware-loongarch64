#!/bin/sh

# Copyright 2020, 2023  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=kbd
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.?z | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-3}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

TMP=${TMP:-/tmp}
PKG=$TMP/package-$PKGNAM

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PKGNAM-$VERSION
tar xvf $CWD/$PKGNAM-$VERSION.tar.?z || exit 1
cd $PKGNAM-$VERSION || exit 1

# Make sure ownerships and permissions are sane:
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \+

# Thanks, LFS
zcat $CWD/kbd-2.6.3-backspace-1.patch.gz | patch -p1 --verbose || exit 1

# Thanks, Arch
zcat $CWD/fix-euro2.patch.gz | patch -p1 --verbose || exit 1

# Don't include resizecons or manpage:
# "it requires the defunct svgalib to provide the video mode files - for
# normal use setfont sizes the console appropriately"
# Thanks again LFS
sed -i '/RESIZECONS_PROGS=/s/yes/no/' configure
sed -i 's/resizecons.8 //' docs/man/man8/Makefile.in

# 7-bit maps are obsolete; so are non-euro maps
cp -fav data/keymaps/i386/qwerty/pt-latin9.map \
        data/keymaps/i386/qwerty/pt.map
cp -fav data/keymaps/i386/qwerty/sv-latin1.map \
        data/keymaps/i386/qwerty/se-latin1.map
mv -fv data/keymaps/i386/azerty/fr.map \
       data/keymaps/i386/azerty/fr-old.map
cp -fav data/keymaps/i386/azerty/fr-latin9.map \
        data/keymaps/i386/azerty/fr.map

# legacy alias
cp -fav data/keymaps/i386/azerty/fr-latin9.map \
        data/keymaps/i386/azerty/fr-latin0.map

# Rename conflicting keymaps
mv -fv data/keymaps/i386/colemak/en-latin9.map \
       data/keymaps/i386/colemak/colemak.map
mv -fv data/keymaps/i386/fgGIod/trf.map \
       data/keymaps/i386/fgGIod/trf-fgGIod.map
mv -fv data/keymaps/i386/olpc/es.map \
       data/keymaps/i386/olpc/es-olpc.map
mv -fv data/keymaps/i386/olpc/pt.map \
       data/keymaps/i386/olpc/pt-olpc.map
mv -fv data/keymaps/i386/qwerty/cz.map \
       data/keymaps/i386/qwerty/cz-qwerty.map

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PKGNAM-$VERSION \
  --localedir=/usr/share/locale/ \
  --datadir=/usr/share/kbd \
  --enable-nls \
  --enable-optional-progs \
  --enable-libkeymap \
  --disable-tests \
  --disable-static \
  --build=$ARCH-slackware-linux

# Build and install:
make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

# ro_win.map.gz is useless:
rm -f $PKG/usr/share/kbd/keymaps/i386/qwerty/ro_win.map.gz

# Move vlock to vlock.new:
mv $PKG/etc/pam.d/vlock $PKG/etc/pam.d/vlock.new

# Add some extra fonts:
( cd $PKG ; explodepkg $CWD/extraf.tgz )

# Make sure kbdinfo manpage is installed:
if [ ! -r $PKG/usr/man/man1/kbdinfo.1 ]; then
  cp -a ./docs/man/man1/kbdinfo.1 $PKG/usr/man/man1
fi

# Install the setup script that will be run from the Slackware installer:
mkdir -pm755 $PKG/var/log/setup
install -vpm755 $CWD/setup.setconsolefont $PKG/var/log/setup/
install -vpm755 $CWD/setconsolefont $PKG/usr/bin/

# Create the default run control script which will set the
# console font to the "default"...  though this might not be
# the same state as if setfont were not used at all.
# For that reason, default the script to non-executable.
mkdir -pm755 $PKG/etc/rc.d
cat << EOF > $PKG/etc/rc.d/rc.font.new
#!/bin/sh
#
# This selects your default screen font from among the ones in
# /usr/share/kbd/consolefonts.
#
setfont -v
EOF
chmod 0644 $PKG/etc/rc.d/rc.font.new

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# Strip binaries:
find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Compress and link manpages, if any:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.*
      )
    done
  )
fi

# Add a documentation directory:
mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a AUTHORS COPYING CREDITS NEWS README $PKG/usr/doc/$PKGNAM-$VERSION

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/usr/doc/*-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

mkdir -p $PKG/install
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/$PKGNAM-$VERSION-$ARCH-$BUILD.txz
