--- ./lib/stdio-impl.h.orig	2018-01-03 18:38:53.000000000 -0600
+++ ./lib/stdio-impl.h	2018-09-18 18:49:17.349062298 -0500
@@ -18,6 +18,12 @@
    the same implementation of stdio extension API, except that some fields
    have different naming conventions, or their access requires some casts.  */
 
+/* Glibc 2.28 made _IO_IN_BACKUP private.  For now, work around this
+   problem by defining it ourselves.  FIXME: Do not rely on glibc
+   internals.  */
+#if !defined _IO_IN_BACKUP && defined _IO_EOF_SEEN
+# define _IO_IN_BACKUP 0x100
+#endif
 
 /* BSD stdio derived implementations.  */
 
--- ./lib/freading.c.orig	2018-01-03 18:38:53.000000000 -0600
+++ ./lib/freading.c	2018-09-18 18:49:17.347062298 -0500
@@ -31,7 +31,7 @@
   /* Most systems provide FILE as a struct and the necessary bitmask in
      <stdio.h>, because they need it for implementing getc() and putc() as
      fast macros.  */
-# if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+# if defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
   return ((fp->_flags & _IO_NO_WRITES) != 0
           || ((fp->_flags & (_IO_NO_READS | _IO_CURRENTLY_PUTTING)) == 0
               && fp->_IO_read_base != NULL));
--- ./lib/fflush.c.orig	2018-01-03 18:38:53.000000000 -0600
+++ ./lib/fflush.c	2018-09-18 18:49:17.345062298 -0500
@@ -33,7 +33,7 @@
 #undef fflush
 
 
-#if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+#if defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
 
 /* Clear the stream's ungetc buffer, preserving the value of ftello (fp).  */
 static void
@@ -72,7 +72,7 @@
 
 #endif
 
-#if ! (defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */)
+#if ! (defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */)
 
 # if (defined __sferror || defined __DragonFly__ || defined __ANDROID__) && defined __SNPT
 /* FreeBSD, NetBSD, OpenBSD, DragonFly, Mac OS X, Cygwin, Minix 3, Android */
@@ -148,7 +148,7 @@
   if (stream == NULL || ! freading (stream))
     return fflush (stream);
 
-#if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+#if defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
 
   clear_ungetc_buffer_preserving_position (stream);
 
--- ./lib/fpurge.c.orig	2018-01-03 18:38:53.000000000 -0600
+++ ./lib/fpurge.c	2018-09-18 18:49:17.346062298 -0500
@@ -62,7 +62,7 @@
   /* Most systems provide FILE as a struct and the necessary bitmask in
      <stdio.h>, because they need it for implementing getc() and putc() as
      fast macros.  */
-# if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+# if defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
   fp->_IO_read_end = fp->_IO_read_ptr;
   fp->_IO_write_ptr = fp->_IO_write_base;
   /* Avoid memory leak when there is an active ungetc buffer.  */
--- ./lib/fseeko.c.orig	2018-01-06 18:03:28.000000000 -0600
+++ ./lib/fseeko.c	2018-09-18 18:49:17.348062298 -0500
@@ -47,7 +47,7 @@
 #endif
 
   /* These tests are based on fpurge.c.  */
-#if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+#if defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
   if (fp->_IO_read_end == fp->_IO_read_ptr
       && fp->_IO_write_ptr == fp->_IO_write_base
       && fp->_IO_save_base == NULL)
@@ -123,7 +123,7 @@
           return -1;
         }
 
-#if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+#if defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
       fp->_flags &= ~_IO_EOF_SEEN;
       fp->_offset = pos;
 #elif defined __sferror || defined __DragonFly__ || defined __ANDROID__
--- ./lib/fseterr.c.orig	2018-01-03 18:38:53.000000000 -0600
+++ ./lib/fseterr.c	2018-09-18 18:49:17.349062298 -0500
@@ -29,7 +29,7 @@
   /* Most systems provide FILE as a struct and the necessary bitmask in
      <stdio.h>, because they need it for implementing getc() and putc() as
      fast macros.  */
-#if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+#if defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
   fp->_flags |= _IO_ERR_SEEN;
 #elif defined __sferror || defined __DragonFly__ || defined __ANDROID__
   /* FreeBSD, NetBSD, OpenBSD, DragonFly, Mac OS X, Cygwin, Minix 3, Android */
--- ./ChangeLog.orig	2018-01-07 16:33:52.000000000 -0600
+++ ./ChangeLog	2018-09-18 18:49:17.343062298 -0500
@@ -1,3 +1,26 @@
+2018-03-05  Paul Eggert  <address@hidden>
+
+	fflush: adjust to glibc 2.28 libio.h removal
+	Problem reported by Daniel P. Berrang√© in:
+	https://lists.gnu.org/r/bug-gnulib/2018-03/msg00000.html
+	* lib/fbufmode.c (fbufmode):
+	* lib/fflush.c (clear_ungetc_buffer_preserving_position)
+	(disable_seek_optimization, rpl_fflush):
+	* lib/fpending.c (__fpending):
+	* lib/fpurge.c (fpurge):
+	* lib/freadable.c (freadable):
+	* lib/freadahead.c (freadahead):
+	* lib/freading.c (freading):
+	* lib/freadptr.c (freadptr):
+	* lib/freadseek.c (freadptrinc):
+	* lib/fseeko.c (fseeko):
+	* lib/fseterr.c (fseterr):
+	* lib/fwritable.c (fwritable):
+	* lib/fwriting.c (fwriting):
+	Check _IO_EOF_SEEN instead of _IO_ftrylockfile.
+	* lib/stdio-impl.h (_IO_IN_BACKUP) [_IO_EOF_SEEN]:
+	Define if not already defined.
+
 2018-01-07  Jim Meyering  <meyering@fb.com>
 
 	version 1.9
