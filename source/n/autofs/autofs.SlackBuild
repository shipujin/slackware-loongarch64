#!/bin/bash

# Copyright 2010, 2013, 2017, 2018  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=autofs
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.xz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

TMP=${TMP:-/tmp}
PKG=$TMP/package-$PKGNAM

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf $PKGNAM-$VERSION
tar xf $CWD/$PKGNAM-$VERSION.tar.xz || exit 1
cd $PKGNAM-$VERSION || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

# SASL requires krb5:

CFLAGS="$SLKCFLAGS" \
CPPFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --mandir=/usr/man \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --with-libtirpc \
  --with-openldap \
  --without-sasl \
  --build=$ARCH-slackware-linux || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

# Add /run directory:
mkdir -p $PKG/run

# Referenced in the auto.master config file, but not created:
mkdir -p $PKG/etc/auto.master.d

# Install rc.autofs.new:
mkdir -p $PKG/etc/rc.d
cp -a samples/rc.autofs $PKG/etc/rc.d/rc.autofs.new
chown root:root $PKG/etc/rc.d/rc.autofs.new
chmod 644 $PKG/etc/rc.d/rc.autofs.new
# Fix confdir:
sed -i "s|/etc/sysconfig|/etc/default|g" $PKG/etc/rc.d/rc.autofs.new

# Install sample config files:
for file in auto.master auto.misc auto.net auto.smb autofs_ldap_auth.conf default/autofs ; do
  cp -a samples/$file $PKG/etc/${file}
  chown root:root $PKG/etc/${file}
  chmod 644 $PKG/etc/${file}
done
cp -a samples/autofs.conf.default $PKG/etc/autofs.conf
chown root:root $PKG/etc/autofs.conf
chmod 644 $PKG/etc/autofs.conf
mkdir -p $PKG/etc/default
cp -a samples/autofs.init.conf $PKG/etc/default/autofs.new
chown root:root $PKG/etc/default/autofs.new
chmod 644 $PKG/etc/default/autofs.new
# Fix typo:
sed -i "s/syatem/system/g" $PKG/etc/default/autofs.new

# Fix perms on some config files:
chmod 755 $PKG/etc/auto.smb $PKG/etc/auto.net
chmod 600 $PKG/etc/autofs_ldap_auth.conf

# Prep the config files:
for file in auto.master auto.misc autofs.conf autofs_ldap_auth.conf default/autofs ; do
  mv $PKG/etc/$file $PKG/etc/${file}.new
done

# Fix a typo that's harmless but ugly:
sed -i "s/syatem/system/g" $PKG/etc/default/autofs.new

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Compress and if needed symlink the man pages:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

mkdir -p $PKG/usr/doc/autofs-$VERSION
cp -a \
  COPYING* COPYRIGHT CREDITS INSTALL README* \
  samples \
  $PKG/usr/doc/autofs-$VERSION
( cd $PKG/usr/doc/autofs-$VERSION
  find . \( -name Makefile -o -name *.in \) -exec rm -f {} \+
  find . -type d -exec chmod 755 {} \+
  find . -type f -exec chmod 644 {} \+
)

# If there's a CHANGELOG, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r CHANGELOG ]; then
  DOCSDIR=$(echo $PKG/usr/doc/*-$VERSION)
  cat CHANGELOG | head -n 1000 > $DOCSDIR/CHANGELOG
  touch -r CHANGELOG $DOCSDIR/CHANGELOG
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $TMP/autofs-$VERSION-$ARCH-$BUILD.txz

