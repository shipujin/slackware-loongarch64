--- ./vsftpd.conf.orig	2011-12-17 12:24:40.000000000 -0600
+++ ./vsftpd.conf	2016-04-11 18:34:26.772862375 -0500
@@ -19,7 +19,7 @@
 #
 # Default umask for local users is 077. You may wish to change this to 022,
 # if your users expect that (022 is used by most other ftpd's)
-#local_umask=022
+local_umask=022
 #
 # Uncomment this to allow the anonymous FTP user to upload files. This only
 # has an effect if the above global write enable is activated. Also, you will
@@ -48,11 +48,11 @@
 #
 # You may override where the log file goes if you like. The default is shown
 # below.
-#xferlog_file=/var/log/vsftpd.log
+xferlog_file=/var/log/vsftpd.log
 #
 # If you want, you can have your log file in standard ftpd xferlog format.
 # Note that the default log file location is /var/log/xferlog in this case.
-#xferlog_std_format=YES
+xferlog_std_format=YES
 #
 # You may change the default value for timing out an idle session.
 #idle_session_timeout=600
@@ -104,14 +104,24 @@
 # default to avoid remote users being able to cause excessive I/O on large
 # sites. However, some broken FTP clients such as "ncftp" and "mirror" assume
 # the presence of the "-R" option, so there is a strong case for enabling it.
-#ls_recurse_enable=YES
+ls_recurse_enable=YES
 #
-# When "listen" directive is enabled, vsftpd runs in standalone mode and
-# listens on IPv4 sockets. This directive cannot be used in conjunction
-# with the listen_ipv6 directive.
-listen=YES
+# When "listen" directive is enabled, vsftpd runs in standalone mode (rather
+# than from inetd) and listens on IPv4 sockets. To use vsftpd in standalone
+# mode rather than with inetd, change the line below to 'listen=YES'
+# This directive cannot be used in conjunction with the listen_ipv6 directive.
+listen=NO
 #
 # This directive enables listening on IPv6 sockets. To listen on IPv4 and IPv6
 # sockets, you must run two copies of vsftpd with two configuration files.
 # Make sure, that one of the listen options is commented !!
 #listen_ipv6=YES
+#
+# The seccomp sandbox feature adds an additional layer of security, but has
+# been known to cause various problems depending on the kernel version.
+# Problems may include kernel audit warnings in the system logs, or even
+# failure to get a directory listing (or do much of anything in directories
+# with enough files to trigger the issue).
+# If you see errors like "OOPS: priv_sock_get_cmd" make sure this option is
+# set to NO.  We'll set it to NO by default since we want a reliable ftpd.
+seccomp_sandbox=NO
