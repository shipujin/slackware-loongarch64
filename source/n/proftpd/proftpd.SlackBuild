#!/bin/bash

# Copyright 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2017, 2018, 2020  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=proftpd
VERSION=1.3.8
DIRVER=1.3.8
BUILD=${BUILD:-3}

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

PROFTPD_MODS="mod_radius:mod_ban:mod_readme:mod_ratio:mod_tls:mod_wrap:mod_ctrls_admin:mod_quotatab:mod_quotatab_file:mod_sftp:mod_facl"

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    loongarch64) export ARCH=loong64 ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "loong64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

TMP=${TMP:-/tmp}
PKG=$TMP/package-proftpd

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf proftpd-$VERSION
tar xvf $CWD/proftpd-$VERSION.tar.?z* || exit 1
cd proftpd-$DIRVER || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

cp -rfa /usr/share/autoconf/build-aux/config.* .
cp -rfa /usr/share/autoconf/build-aux/config.* contrib/mod_sftp/
cp -rfa /usr/share/autoconf/build-aux/config.* contrib/mod_load/
cp -rfa /usr/share/autoconf/build-aux/config.* contrib/mod_snmp/
cp -rfa /usr/share/autoconf/build-aux/config.* contrib/mod_auth_otp/
cp -rfa /usr/share/autoconf/build-aux/config.* contrib/mod_dnsbl/
cp -rfa /usr/share/autoconf/build-aux/config.* lib/libltdl/config/
cp -rfa /usr/share/autoconf/build-aux/config.* lib/libltdl/
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --sysconfdir=/etc \
  --enable-autoshadow \
  --enable-ctrls \
  --enable-dso \
  --enable-ipv6 \
  --enable-nls \
  --localstatedir=/var/run \
  --with-modules="${PROFTPD_MODS}" \
  --build=loongarch64-slackware-linux || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

# With no library to link against, these are useless:
rm -rf $PKG/usr/include
rm -f $PKG/etc/*
rmdir $PKG/usr/libexec 2> /dev/null

cat $CWD/etc/proftpd.conf > $PKG/etc/proftpd.conf.new
cat $CWD/etc/ftpusers > $PKG/etc/ftpusers.new
mkdir -p $PKG/home/ftp

# Directory used by mod_ban:
mkdir -p $PKG/var/db/proftpd
chown nobody:nogroup $PKG/var/db/proftpd

# Compress manual pages:
find $PKG/usr/man -type f -exec gzip -9 {} \+
for i in $( find $PKG/usr/man -type l ) ; do
  ln -s $( readlink $i ).gz $i.gz
  rm $i
done

mkdir -p $PKG/usr/doc/proftpd-$VERSION
cp -a COPYING* CREDITS INSTALL NEWS README* \
  contrib/README.mod_wrap contrib/README.ratio \
  $PKG/usr/doc/proftpd-$VERSION
# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/usr/doc/proftpd-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi
cp -a contrib/README $PKG/usr/doc/proftpd-$VERSION/README.contrib
cp -a doc sample-configurations $PKG/usr/doc/proftpd-$VERSION
# Bloat removal:
( cd $PKG/usr/doc
  find . -name "*.sgml" -exec rm {} \+
  find . -name "*.pdf" -exec rm {} \+
)
rmdir $PKG/usr/share/locale
rmdir $PKG/usr/share

find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

mkdir -p $PKG/install
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/proftpd-$VERSION-$ARCH-$BUILD.txz

