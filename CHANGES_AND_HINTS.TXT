This file documents the instructions for upgrading to Slackware -current, the
packages added, removed, renamed, and/or split during the development cycle
from Slackware 14.2 through -current, and some potential "gotchas" that users
can avoid by arming themselves with a little knowledge.


*** INSTRUCTIONS FOR UPGRADING FROM 14.2 ***

Follow the instructions detailed in the UPGRADE.TXT located in this
  directory.  

Note that upgrading from a Slackware version earlier than 14.2 is NOT 
  supported at all and will most likely not work.


*** PACKAGE ADDITIONS SINCE 14.2 ***

a/hostname (split from n/net-tools)
a/lzlib
a/mlocate (replaces a/slocate)
a/plzip
ap/dash (replaces ap/ash)
ap/man-db (replaces ap/man)
ap/opus-tools
ap/xorriso
d/gcc-brig
d/gnucobol (replaces d/gnu-cobol)
d/patchelf
d/python-pip
d/python3
d/opencl-headers
d/rust
l/Mako
l/SDL2
l/SDL2_gfx
l/SDL2_image
l/SDL2_mixer
l/SDL2_net
l/SDL2_ttf
l/ffmpeg
l/gst-plugins-libav
l/id3lib
l/lame
l/libbluray
l/libclc
l/libedit
l/libidn2
l/libsodium
l/libwebp
l/ocl-icd
l/opus
l/opusfile
l/pyparsing
l/python-appdirs
l/python-certifi
l/python-chardet
l/python-docutils
l/python-idna
l/python-packaging
l/python-requests
l/python-sane
l/python-six
l/python-urllib3
l/speex
l/tdb
l/tevent
l/talloc
n/dovecot
n/libmilter
n/npth
n/postfix
n/sshfs
t/texlive (replaces t/tetex and t/tetex-doc)
x/intel-vaapi-driver (replaces x/libva-intel-driver)
x/libXfont2
x/libinput
x/libva-utils
x/libwacom
x/urw-core35-fonts-otf
x/vulkan-sdk
x/xf86-input-libinput
x/xf86-video-vboxvideo
xap/easytag
extra/sendmail/* (moved from main tree)


*** PACKAGE REMOVALS SINCE 14.2 ***

a/eject (included in a/util-linux)
a/slocate (replaced by a/mlocate)
ap/ash (replaced by ap/dash)
ap/man (replaced by ap/man-db)
d/gcc-java
d/gnu-cobol (replaced by d/gnucobol)
l/herqq
l/json-c
l/libmowgli
l/libmcs
l/libtermcap
l/pyrex
n/dirmngr
n/idnkit
n/pth
n/rfkill (included in a/util-linux)
n/sendmail (moved to /extra ; replaced by n/postfix and n/libmilter)
n/sendmail-cf (moved to /extra ; replaced by n/postfix and n/libmilter)
n/trn
t/tetex (replaced by t/texlive)
t/tetex-doc (replaced by t/texlive)
x/libva-intel-driver (replaced by x/intel-vaapi-driver)
x/libXfont
x/xf86-video-xgi
x/xf86-video-xgixp


*** NEW USERS/GROUPS SINCE 14.2 ***

cgred group, GID 41
ntp user and group, UID and GID 44
postfix user and group, UID and GID 91
postdrop user and group, UID and GID 92
dovecot user and group, UID and GID 94
dovenull user and group, UID and GID 95


*** OTHER NOTABLE CHANGES AND HINTS ***

The stock networking scripts now use iproute2 instead of net-tools and
  bridge-utils and friends. All of the previous functionality is still
  supported with the same config file syntax in /etc/rc.d/rc.inet1.conf,
  but added functionality includes support for creating virtual interfaces
  (e.g. tun/tap) and adding them to bridges as well as binding additional
  IP addresses to virtual and/or real interfaces. This did involve some
  added options to rc.inet1.conf.  Maybe best of all, /sbin/ifconfig can
  still be used to view (and even configure) interfaces manually - any
  additional IP addresses bound to interfaces using rc.inet1 will be done
  in such a way that /sbin/ifconfig recognizes them.
  
The ntp package has changed such that ntpd now drops privileges and runs as
  user ntp and group ntp. Be sure to move/merge the changes to rc.ntpd and
  /etc/ntp.conf.

The gnupg2 package has changed such that the gpg agent is autostarted on 
  demand now, so be sure to remove any local profile script changes to 
  handle that. Also, there is a new keyring format used by gnupg2-2.2.x,
  so have a look at https://www.gnupg.org/faq/whats-new-in-2.1.html#keybox
  for migration tips.

As mentioned earlier, n/postfix replaces n/sendmail as the default MTA.
  However, postfix is sendmail compatible with respect to function; in
  other words, any scripts or other applications expecting to *use*
  sendmail should work just fine, as postfix installs a file at
  /usr/sbin/sendmail.  This is all fine and wonderful unless you want
  to *use* sendmail *instead* of postfix and thus decided to leave
  sendmail installed on the system. The postfix package will overwrite
  the /usr/sbin/sendmail file on the system. Long story short: if you
  plan to use the sendmail MTA instead of postfix, you will need to
  uninstall postfix *before* installing/reinstalling sendmail. You should
  never have both sendmail and postfix installed on the same machine.
  If you do, one of them will not work properly.

The cciss driver has been replaced by the hpsa driver, so if you're
  running an HP server, this may be relevant to you. This is mostly an
  issue with respect to device references -- if you have references to
  /dev/cciss/* in e.g. /etc/fstab and/or /etc/smartd.conf, you'll need
  to fix those.  Reference: https://tinyurl.com/cciss-hpsa

Use one of the provided generic kernels for daily use.  Do not report
  bugs until/unless you have reproduced them using one of the stock 
  generic kernels.  You will need to create an initrd in order to boot
  the generic kernels - see /boot/README.initrd for instructions.
  The huge kernels are primarily intended as "installer" and "emergency" 
  kernels in case you forget to make an initrd.  For most systems, you 
  should use the generic SMP kernel if it will run, even if your system is 
  not SMP-capable.  Some newer hardware needs the local APIC enabled in the 
  SMP kernel, and theoretically there should not be a performance penalty 
  with using the SMP-capable kernel on a uniprocessor machine, as the SMP 
  kernel tests for this and makes necessary adjustments.  Furthermore, the 
  kernel sources shipped with Slackware are configured for SMP usage, so you 
  won't have to modify those to build external modules (such as NVidia or 
  ATI proprietary drivers) if you use the SMP kernel.

  If you decide to use one of the non-SMP kernels, you will need to follow the
  instructions in /extra/linux-4.14.11-nosmp-sdk/README.TXT to modify your
  kernel sources for non-SMP usage.  Note that this only applies if you are
  using the Slackware-provided non-SMP kernel - if you build a custom kernel,
  the symlinks at /lib/modules/$(uname -r)/{build,source} will point to the
  correct kernel source so long as you don't (re)move it.

Printing, scanning, and bluetooth usage require that your user account be a
  member of the "lp" group (membership in the "scanner" group is no longer
  needed by any of the included scanner drivers, though some third party
  drivers may still need it); we had to configure sane to use the "lp" group
  or else multifunction devices (e.g. print/scan/copy units) would only do
  one or the other (depending on whether the group ownership was "lp" or
  "scanner").

If you want to change the resolution of the KMS console, that can be done
  with something like this as a kernel append in lilo.conf:
    append="video=1024x768"

Speaking of lilo.conf and KMS, make sure you use either vga=normal or 
  vga=extended -- some of the framebuffers don't like KMS very much...

If your cd/dvd drive is not visible inside a gtk-based desktop environment
  (e.g. Xfce), you may need to add "comment=x-gvfs-show" to the /etc/fstab 
  line for the device.  For more information, see this document:
  http://git.gnome.org/browse/gvfs/tree/monitor/udisks2/what-is-shown.txt

If you have set up an encrypted root partition, you will need to have access 
  to your keyboard in order to type the passphrase.  This may require you to 
  add the uhci-hcd and usbhid modules to your initrd image if you have a USB 
  keyboard.  Also note that if you are using a non-US keyboard, you can use the
  '-l' parameter to the 'mkinitrd' command in order to add support for this
  keyboard to your initrd.

If you have permission errors when attempting to burn a cdrom or dvd image,
  such as the following:
    /usr/bin/cdrecord: Operation not permitted. Cannot send SCSI cmd via ioctl
  then cdrecord almost certainly needs root privileges to work correctly.
  One potential solution is to make the cdrecord and cdrdao binaries suid root,
  but this has possible security implications.  The safest way to do that is 
  to make those binaries suid root, owned by a specific group, and executable
  by only root and members of that group.  For most people, the example below
  will be sufficient (but adjust as desired depending on your specific needs):
    chown root:cdrom /usr/bin/cdrecord /usr/bin/cdrdao
    chmod 4750 /usr/bin/cdrecord /usr/bin/cdrdao
  If you don't want all members of the 'cdrom' group to be able to execute the
  two suid binaries, then create a special group (such as 'burning' which is
  recommended by k3b), use it instead of 'cdrom' in the line above, and add
  to it only the users you wish to have access to cdrecord and cdrdao.

Subpixel hinting in freetype has been enabled upstream by default, but you 
  may adjust this in /etc/profile.d/freetype.{csh,sh}.

Input methods for complex characters (CJK, which is shorthand for Chinese,
  Japanese, Korean) and other non-latin character sets have been added. These
  input methods use the SCIM (Smart Common Input Method) platform.
  The environment variables for SCIM support are set in /etc/profile.d/scim.sh
  The requirements for getting SCIM input methods to work in your X session
  are as follows:
  (1) Use a UTF-8 locale. Look in /etc/profile.d/lang.sh for setting your
      language to (for instance) en_US.UTF-8. As a word of warning: maybe you
      should leave root with a non-UTF-8 locale because you don't want root's
      commands to be misinterpreted. You can add the following line to your
      ~/.profile file to enable UTF-8 just for yourself:
        export LANG=en_US.UTF-8
  (2) Make the scim profile scripts executable. These will setup your
      environment correctly for the use of scim with X applications. Run:
        chmod +x /etc/profile.d/scim.*
  (3) Start the scim daemon as soon as your X session starts. The scim daemon
      must be active before any of your X applications. In KDE, you can add a
      shell script to the ~/.kde/Autostart folder that runs the command
      "scim -d". In XFCE you can add "scim -d" to the Autostarted Applications.
      If you boot your computer in runlevel 4 (the graphical XDM/KDM login)
      you can simply add the line "scim -d" to your ~/.xprofile file.
      This gives you a Desktop Environment independent way of starting scim.
  When scim is running, you will see a small keyboard icon in your system tray.
  Right-click it to enter SCIM Setup. In 'Global Setup' select your keyboard
  layout, and you are ready to start entering just about any language
  characters you wish! Press the magical key combo <Control><Space>
  in order to activate or deactivate SCIM input. The SCIM taskbar in the
  desktop's corner allows you to select a language. As you type, SCIM will show
  an overview of applicable character glyphs (if you are inputting complex
  characters like Japanese).

