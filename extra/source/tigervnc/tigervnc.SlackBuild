#!/bin/bash
# $Id: tigervnc.SlackBuild,v 1.25 2015/08/26 18:24:43 root Exp root $
# Copyright 2010, 2011, 2012, 2013, 2014, 2015  Eric Hameleers, Eindhoven. NL
# Copyright 2015, 2016  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# Slackware SlackBuild script 
# ===========================
# By:         Eric Hameleers <alien@slackware.com>
# For:        tigervnc
# Descr:      VNC server and client
# URL:        http://tigervnc.org/
# Needs:      
# BuildNeeds: jdk (only when building the java applet)
# Changelog:  
# r4126-1:    31/Aug/2010 by Eric Hameleers <alien@slackware.com>
#             * Initial build.
# r4126-2:    02/sep/2010 by Eric Hameleers <alien@slackware.com>
#             * Fix a syntax error in thye doinst.sh script
# 1.0.90-1:   14/may/2011 by Eric Hameleers <alien@slackware.com>
#             * Update to 1.1.beta1
# 1.1.0-1:    14/nov/2011 by Eric Hameleers <alien@slackware.com>
#             * Update to 1.1.0
# 1.2.0-1:    23/jun/2012 by Eric Hameleers <alien@slackware.com>
#             * Update.
# 1.1.0-2:    28/jul/2012 by Eric Hameleers <alien@slackware.com>
#             * Build 1.1.0 again, using a revised script which can be used
#               on Slackware 14 as well.  Also, enable compositing in the
#               server.  Abandon the tigervnc-1.2 branch for now, because
#               the fltk based viewer rewrite is not yet fully functional.
# 1.1.0-3:    22/may/2013 by Eric Hameleers <alien@slackware.com>
#             * Build 1.1.0 again, on slackware-current (nee 14.1) with new
#               X.Org 1.13 patches.
# 1.1.0-4:    11/oct/2013 by Eric Hameleers <alien@slackware.com>
#             * Build 1.1.0 again, on slackware-current (nee 14.1) with new
#               X.Org 1.14 patches.
# 1.3.0-1:    12/dec/2013 by Eric Hameleers <alien@slackware.com>
#             * Update.  All my issues except copy/paste from local to remote
#               seem to have been addressed in 1.3.0.
#               Build against private versions of libjpeg-turbo and fltk,
#               in order to eliminate external dependencies.
# 1.4.3-1:    11/apr/2015 by Eric Hameleers <alien@slackware.com>
#             * Update.
# 1.4.3-2:    03/may/2015 by Eric Hameleers <alien@slackware.com>
#             * Rebuild for slackware-current (fix libgcrypt.so library error)
# 1.5.0-1:    14/jul/2015 by Eric Hameleers <alien@slackware.com>
#             * Update.
# 1.5.0-2:    24/aug/2015 by Eric Hameleers <alien@slackware.com>
#             * Rebuild was needed on slackware-current.
# 1.5.0-3:    26/aug/2015 by Eric Hameleers <alien@slackware.com>
#             * I uploaded the wrong package so I needed to update the BUILD.
# 1.5.0-1:    07/nov/2015 by Patrick Volkerding <volkerdi@slackware.com>
#             * Removed bundled FLTK and libjpeg-turbo builds.
#             * Reset build to -1 for inclusion in Slackware's /extra.
# 1.6.0-1:    22/feb/2016 by Patrick Volkerding <volkerdi@slackware.com>
# 1.9.0-1:    26/jul/2018 by Patrick Volkerding <volkerdi@slackware.com>
# 
# -----------------------------------------------------------------------------

PKGNAM=tigervnc
VERSION=${VERSION:-1.9.0}
PVER=$(echo $VERSION | cut -f 1,2 -d . | tr -d .)
BUILD=${BUILD:-2}
NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}
TAG=${TAG:-}

# TigerVNC needs to use source of the X.Org server whose version matches
# that of your installed X.Org package:
XORG=${XORG:-$(X -version 2>&1 | grep "^X.Org X Server " | cut -f4 -d' ')}
MAXPATCHVER="$(echo $XORG | cut -f1,2 -d. | tr -d '.')"

# OS Stamp into the binaries:
OSNAME="$(head -1 /etc/slackware-version)"
OSVENDOR="Slackware Linux Project"
BUILDER="Built by Slackware on $(date -u)"

# Do we build the java applet (needs jdk)?
DO_APPLET=${DO_APPLET:-"NO"}

# Check for the availability of a Java compiler:
if [ "$DO_APPLET" = "YES" ]; then
  if ! javac -version 1>/dev/null 2>&1 ; then
    echo "**"
    echo "** DO_APPLET="YES" means to compile the Java viewer,"
    echo "** However you do not have a Java JDK installed."
    echo "** Press Ctrl-C to abort this script,"
    echo "** or wait 10 seconds to continue without building the Java viewer."
    echo "**"
    sleep 10
    DO_APPLET="NO"
  fi
fi

# This covers most filenames you'd want as documentation. Change if needed.
DOCS="BUILDING.txt LICENCE.TXT README.txt doc/TODO doc/*.txt doc/*.odt"
DOCS_XORG="COPYING ChangeLog"

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-$PKGNAM

if [ -e $CWD/machine.conf ]; then
  . $CWD/machine.conf ]
elif [ -e /etc/slackbuild/machine.conf ]; then
  . /etc/slackbuild/machine.conf ]
else
  # Automatically determine the architecture we're building on:
  MARCH=$( uname -m )
  if [ -z "$ARCH" ]; then
    case "$MARCH" in
      i?86)    export ARCH=i586 ;;
      arm*)    export ARCH=arm ;;
      # Unless $ARCH is already set, use uname -m for all other archs:
      *)       export ARCH=$MARCH ;;
    esac
  fi
  # Set CFLAGS/CXXFLAGS and LIBDIRSUFFIX:
  if [ "$ARCH" = "i586" ]; then
    SLKCFLAGS="-O2 -march=i586 -mtune=i686"
    LIBDIRSUFFIX=""
  elif [ "$ARCH" = "s390" ]; then
    SLKCFLAGS="-O2"
    LIBDIRSUFFIX=""
  elif [ "$ARCH" = "x86_64" ]; then
    SLKCFLAGS="-O2 -fPIC"
    LIBDIRSUFFIX="64"
  elif [ "$ARCH" = "arm" ]; then
    SLKCFLAGS="-O2 -march=armv5te"
    LIBDIRSUFFIX=""
  else
    SLKCFLAGS="-O2"
    LIBDIRSUFFIX=""
  fi
fi

case "$ARCH" in
    arm*) TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)    TARGET=$ARCH-slackware-linux ;;
esac

rm -rf $TMP/tmp-${PKGNAM} $PKG
mkdir -p $TMP/tmp-${PKGNAM}/deps/usr $PKG
cd $TMP/tmp-${PKGNAM}
tar --owner=root --group=root -xvf $CWD/sources/$PKGNAM-$VERSION.tar.?z* || exit 1
tar --owner=root --group=root -xvf $CWD/sources/xorg-server-${XORG}.tar.?z* || exit 1

# Make sure ownerships and permissions are sane:
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

export LDFLAGS="$SLKLDFLAGS"
export CXXFLAGS="$SLKCFLAGS"
export CFLAGS="$SLKCFLAGS"


cat <<EOT
#
# Compile tigervnc:
#
EOT

cd $PKGNAM-$VERSION || exit 1

# HACK! Force protocol 3.3 for UVNCSC
patch -p1 < $CWD/patches/force_protocol_3.3_for_UVNCSC.patch

## Patch to support x.org 1.20 (already included in tigervnc-1.9.0):
#cat $CWD/patches/tigervnc-support-xorg120.patch | patch -p1 --verbose || exit 1

# Explicitly link against libpng to prevent linking errors:
cat $CWD/patches/tigervnc13_link_png.patch | patch -p1 --verbose || exit 1

[ "$DO_APPLET" = "YES" ] && CMAKE_JAVA="ON" || CMAKE_JAVA="OFF"
# Explicitly put the java applet into a directory named 'tigervnc':
sed -i -e 's#/vnc/class#/tigervnc/class#'g $(grep -rl vnc/class .)
sed -i -e 's#DESTINATION vnc/class#DESTINATION share/tigervnc/class#'g $(grep -rl vnc/class .)

export LDFLAGS="$SLKLDFLAGS -ldl -lpthread"
export CXXFLAGS="$SLKCFLAGS -fpermissive -I $(pwd)/common"

# Fix the man page and documentation installation:
sed -e 's,set(MAN_DIR "${DATA_DIR}/man"),set(MAN_DIR "${MAN_INSTALL_DIR}"),' \
    -e 's,set(DOC_DIR "${CMAKE_INSTALL_PREFIX}/share/,set(DOC_DIR "${CMAKE_INSTALL_PREFIX}/,' \
    -i CMakeLists.txt

echo -e "\n*** Building vnc client ***\n"
cmake \
  -G "Unix Makefiles" \
  -Wno-dev \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DMAN_INSTALL_DIR=/usr/man \
  -DSYSCONF_INSTALL_DIR=/etc \
  -DLIB_SUFFIX=${LIBDIRSUFFIX} \
  -DENABLE_PAM:BOOL=OFF \
  -DBUILD_JAVA:BOOL=${CMAKE_JAVA} \
  .
make V=1 $NUMJOBS || make || exit 1
make DESTDIR=$PKG install || exit 1

# Do we have a patch for X.Org which tigervnc does not have?
if [ ! -f unix/xserver${MAXPATCHVER}.patch -a -f $CWD/patches/xserver${MAXPATCHVER}.patch ]
then
  cp $CWD/patches/xserver${MAXPATCHVER}.patch unix/
fi

# Prepare the Xvnc sources (we are building out-of-tree, in ./build directory):
mkdir -p build/unix
cp -R unix/xserver unix/xserver${MAXPATCHVER}.patch build/unix/
cp -R ../xorg-server-${XORG}/* build/unix/xserver/

cd build/unix/xserver/
  # Patch the xorg-server source to include building vnc driver:
  cat ../xserver${MAXPATCHVER}.patch | patch -p1 --verbose
  echo -e "\n*** Building vnc server ***\n"
  autoreconf -vif

  # Default font paths to be used by the X server
  DEF_FONTPATH="/usr/share/fonts/local,/usr/share/fonts/TTF,/usr/share/fonts/OTF,/usr/share/fonts/Type1,/usr/share/fonts/misc,/usr/share/fonts/CID,/usr/share/fonts/75dpi/:unscaled,/usr/share/fonts/100dpi/:unscaled,/usr/share/fonts/75dpi,/usr/share/fonts/100dpi,/usr/share/fonts/cyrillic"

  CFLAGS="$CFLAGS" \
  ./configure \
    --prefix=/usr \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --mandir=/usr/man \
    --disable-dri  --enable-dri2  --disable-dri3 \
    --disable-static \
    --disable-xorg --disable-xnest --disable-xvfb --disable-dmx \
    --disable-xwin --disable-xephyr --disable-kdrive --disable-xwayland \
    --enable-composite \
    --enable-glx --enable-glx-tls \
    --enable-install-libxf86config \
    --enable-xcsecurity \
    --enable-xinerama \
    --with-int10=x86emu \
    --with-default-font-path="${DEF_FONTPATH}" \
    --with-dri-driver-path=/usr/lib${LIBDIRSUFFIX}/xorg/modules/dri \
    --with-module-dir=/usr/lib${LIBDIRSUFFIX}/xorg/modules \
    --with-pic \
    --with-xkb-path=/etc/X11/xkb \
    --with-xkb-output=/var/lib/xkb \
    --disable-config-dbus \
    --disable-config-hal \
    --disable-config-udev \
    --disable-docs --disable-devel-docs \
    --disable-selective-werror \
    --disable-unit-tests \
    --without-dtrace \
    --with-os-name="$OSNAME" \
    --with-os-vendor="$OSVENDOR" \
    --with-builderstring="$BUILDER" \
    --build=$TARGET || exit 1

  make V=1 TIGERVNC_SRCDIR="$TMP/tmp-${PKGNAM}/${PKGNAM}-${VERSION}" $NUMJOBS || exit 1
  make TIGERVNC_SRCDIR="$TMP/tmp-${PKGNAM}/${PKGNAM}-${VERSION}" -C hw/vnc \
    DESTDIR=$PKG install || exit 1
cd -

# Provide a sample configuration for the libvnc.so extension of X.Org,
# documentation is available inside the file:
mkdir -p $PKG/etc/X11/xorg.conf.d
install -m644 $CWD/10-libvnc.conf $PKG/etc/X11/xorg.conf.d/10-libvnc.conf.new

# Install menu entry:
mkdir -p $PKG/usr/share/{applications,icons/hicolor/{16x16,24x24,32x32,48x48}/apps}
for PSIZE in 16 24 32 48; do
  install -m644 media/icons/tigervnc_${PSIZE}.png \
    $PKG/usr/share/icons/hicolor/${PSIZE}x${PSIZE}/apps/tigervnc.png 
done
cat <<EOT > $PKG/usr/share/applications/tigervnc.desktop
[Desktop Entry]
Encoding=UTF-8
Name=TigerVNC Viewer
GenericName=VNCViewer (RFB Client)
Comment=Connect to remote desktop
SwallowExec=
Exec=vncviewer
MimeType=
Icon=tigervnc
Path=
TerminalOptions=
Terminal=false
Type=Application
Categories=Network;
StartupWMClass=VNC Viewer: Connection Details
EOT

# Add this to the doinst.sh:
! [ -d $PKG/install ] && mkdir -p $PKG/install
cat <<EOT >> $PKG/install/doinst.sh
# Handle the incoming configuration files:
config() {
  for infile in \$1; do
    NEW="\$infile"
    OLD="\`dirname \$NEW\`/\`basename \$NEW .new\`"
    # If there's no config file by that name, mv it over:
    if [ ! -r \$OLD ]; then
      mv \$NEW \$OLD
    elif [ "\`cat \$OLD | md5sum\`" = "\`cat \$NEW | md5sum\`" ]; then
      # toss the redundant copy
      rm \$NEW
    fi
    # Otherwise, we leave the .new copy for the admin to consider...
  done
}

config etc/X11/xorg.conf.d/10-libvnc.conf.new

# Update the desktop database:
if [ -x usr/bin/update-desktop-database ]; then
  chroot . /usr/bin/update-desktop-database usr/share/applications 1>/dev/null 2>&1
fi

# Update the mime database:
if [ -x usr/bin/update-mime-database ]; then
  chroot . /usr/bin/update-mime-database usr/share/mime 1>/dev/null 2>&1
fi

# Update hicolor theme cache:
if [ -d usr/share/icons/hicolor ]; then
  if [ -x usr/bin/gtk-update-icon-cache ]; then
    chroot . /usr/bin/gtk-update-icon-cache -f -t usr/share/icons/hicolor 1> /dev/null 2> /dev/null
  fi
fi

EOT

# Add documentation:
# First, remove files which were misplaced:
rm -f $PKG/usr/doc/* 2> /dev/null
cd $TMP/tmp-${PKGNAM}/${PKGNAM}-${VERSION}
mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCS $PKG/usr/doc/$PKGNAM-$VERSION || true
for FIL in $(echo $DOCS_XORG); do cp -a build/unix/xserver/$FIL $PKG/usr/doc/$PKGNAM-$VERSION/${FIL}.xorg ; done || true
#cat $CWD/$(basename $0) > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild
chown -R root:root $PKG/usr/doc/$PKGNAM-$VERSION
find $PKG/usr/doc -type f -exec chmod 644 {} \;

# Compress the man page(s):
if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -name "*.?" -exec gzip -9f {} \;
  for i in $(find $PKG/usr/man -type l -name "*.?") ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

# Strip binaries (if any):
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Add a package description:
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
if [ -f $CWD/doinst.sh.gz ]; then
  zcat $CWD/doinst.sh.gz >> $PKG/install/doinst.sh
fi

# Build the package:
cd $PKG
/sbin/makepkg -l y -c n $TMP/${PKGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz}

